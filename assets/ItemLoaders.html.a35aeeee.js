import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,e as t}from"./app.e7c9cb9e.js";const e={},p=t(`<blockquote><p>Item Loaders\u63D0\u4F9B\u4E86\u4E00\u79CD\u4FBF\u6377\u7684\u65B9\u5F0F\u586B\u5145\u6293\u53D6\u5230\u7684 :Items \u3002 \u867D\u7136Items\u53EF\u4EE5\u4F7F\u7528\u81EA\u5E26\u7684\u7C7B\u5B57\u5178\u5F62\u5F0FAPI\u586B\u5145\uFF0C\u4F46\u662FItems Loaders\u63D0\u4F9B\u4E86\u66F4\u4FBF\u6377\u7684API\uFF0C \u53EF\u4EE5\u5206\u6790\u539F\u59CB\u6570\u636E\u5E76\u5BF9Item\u8FDB\u884C\u8D4B\u503C\u3002</p></blockquote><p>\u4ECE\u53E6\u4E00\u65B9\u9762\u6765\u8BF4\uFF0C Items \u63D0\u4F9B\u4FDD\u5B58\u6293\u53D6\u6570\u636E\u7684 \u5BB9\u5668 \uFF0C \u800C Item Loaders\u63D0\u4F9B\u7684\u662F \u586B\u5145 \u5BB9\u5668\u7684\u673A\u5236\u3002</p><h2 id="\u586B\u5145items" tabindex="-1"><a class="header-anchor" href="#\u586B\u5145items" aria-hidden="true">#</a> \u586B\u5145items</h2><p>Item Loader\u5728\u6BCF\u4E2A(Item)\u5B57\u6BB5\u4E2D\u90FD\u5305\u542B\u4E86\u4E00\u4E2A<code>\u8F93\u5165\u5904\u7406\u5668</code>\u548C\u4E00\u4E2A<code>\u8F93\u51FA\u5904\u7406\u5668</code>\uFF61</p><p>\u8F93\u5165\u5904\u7406\u5668\u6536\u5230\u6570\u636E\u65F6\u7ACB\u523B\u63D0\u53D6\u6570\u636E (\u901A\u8FC7 add_xpath(), add_css() \u6216\u8005 add_value() \u65B9\u6CD5) \u4E4B\u540E\u8F93\u5165\u5904\u7406\u5668\u7684\u7ED3\u679C\u88AB\u6536\u96C6\u8D77\u6765\u5E76\u4E14\u4FDD\u5B58\u5728ItemLoader\u5185.</p><p>\u6536\u96C6\u5230\u6240\u6709\u7684\u6570\u636E\u540E, \u8C03\u7528 ItemLoader.load_item() \u65B9\u6CD5\u6765\u586B\u5145,\u5E76\u5F97\u5230\u586B\u5145\u540E\u7684 Item \u5BF9\u8C61. \u8FD9\u662F\u5F53\u8F93\u51FA\u5904\u7406\u5668\u88AB\u548C\u4E4B\u524D\u6536\u96C6\u5230\u7684\u6570\u636E(\u548C\u7528\u8F93\u5165\u5904\u7406\u5668\u5904\u7406\u7684)\u88AB\u8C03\u7528.\u8F93\u51FA\u5904\u7406\u5668\u7684\u7ED3\u679C\u662F\u88AB\u5206\u914D\u5230Item\u7684\u6700\u7EC8\u503C\uFF61</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">from</span> scrapy<span class="token punctuation">.</span>contrib<span class="token punctuation">.</span>loader <span class="token keyword">import</span> ItemLoader
<span class="token keyword">from</span> myproject<span class="token punctuation">.</span>items <span class="token keyword">import</span> Product

<span class="token keyword">def</span> <span class="token function">parse</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">:</span>
    l <span class="token operator">=</span> ItemLoader<span class="token punctuation">(</span>item<span class="token operator">=</span>Product<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> response<span class="token operator">=</span>response<span class="token punctuation">)</span>
		<span class="token comment"># \u5C06\u4E24\u4E2A\u4E0D\u540C\u4F4D\u7F6E\u7684\u6570\u636E\u6536\u96C6\u8D77\u6765</span>
    l<span class="token punctuation">.</span>add_xpath<span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;//div[@class=&quot;product_name&quot;]&#39;</span><span class="token punctuation">)</span>
    l<span class="token punctuation">.</span>add_xpath<span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;//div[@class=&quot;product_title&quot;]&#39;</span><span class="token punctuation">)</span>

    l<span class="token punctuation">.</span>add_xpath<span class="token punctuation">(</span><span class="token string">&#39;price&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;//p[@id=&quot;price&quot;]&#39;</span><span class="token punctuation">)</span>
    l<span class="token punctuation">.</span>add_css<span class="token punctuation">(</span><span class="token string">&#39;stock&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;p#stock]&#39;</span><span class="token punctuation">)</span>
    l<span class="token punctuation">.</span>add_value<span class="token punctuation">(</span><span class="token string">&#39;last_updated&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;today&#39;</span><span class="token punctuation">)</span> <span class="token comment"># you can also use literal values</span>
    <span class="token keyword">return</span> l<span class="token punctuation">.</span>load_item<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5B9A\u4E49itemloaders" tabindex="-1"><a class="header-anchor" href="#\u5B9A\u4E49itemloaders" aria-hidden="true">#</a> \u5B9A\u4E49ItemLoaders</h2><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">from</span> scrapy<span class="token punctuation">.</span>contrib<span class="token punctuation">.</span>loader<span class="token punctuation">.</span>processor <span class="token keyword">import</span> TakeFirst<span class="token punctuation">,</span> MapCompose<span class="token punctuation">,</span> Join

<span class="token keyword">class</span> <span class="token class-name">ProductLoader</span><span class="token punctuation">(</span>ItemLoader<span class="token punctuation">)</span><span class="token punctuation">:</span>

    default_output_processor <span class="token operator">=</span> TakeFirst<span class="token punctuation">(</span><span class="token punctuation">)</span>

    name_in <span class="token operator">=</span> MapCompose<span class="token punctuation">(</span><span class="token builtin">unicode</span><span class="token punctuation">.</span>title<span class="token punctuation">)</span>
    name_out <span class="token operator">=</span> Join<span class="token punctuation">(</span><span class="token punctuation">)</span>

    price_in <span class="token operator">=</span> MapCompose<span class="token punctuation">(</span><span class="token builtin">unicode</span><span class="token punctuation">.</span>strip<span class="token punctuation">)</span>

    <span class="token comment"># ...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u5165\u5904\u7406\u5668\u4F7F\u7528<code>_in</code>\u4F5C\u4E3A\u540E\u7F00, \u8F93\u51FA\u5904\u7406\u5668\u4F7F\u7528 <code>_out</code>\u4F5C\u4E3A\u540E\u7F00</p><p>\u4F7F\u7528 <code>default_input_processor</code> <code>default_output_processor</code> \u6765\u6307\u5B9A\u9ED8\u8BA4\u7684\u8F93\u5165\u8F93\u51FA\u5904\u7406\u5668</p><h2 id="\u5B9A\u4E49\u8F93\u5165\u8F93\u51FA\u5904\u7406\u5668" tabindex="-1"><a class="header-anchor" href="#\u5B9A\u4E49\u8F93\u5165\u8F93\u51FA\u5904\u7406\u5668" aria-hidden="true">#</a> \u5B9A\u4E49\u8F93\u5165\u8F93\u51FA\u5904\u7406\u5668</h2><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> scrapy
<span class="token keyword">from</span> scrapy<span class="token punctuation">.</span>contrib<span class="token punctuation">.</span>loader<span class="token punctuation">.</span>processor <span class="token keyword">import</span> Join<span class="token punctuation">,</span> MapCompose<span class="token punctuation">,</span> TakeFirst
<span class="token keyword">from</span> w3lib<span class="token punctuation">.</span>html <span class="token keyword">import</span> remove_tags

<span class="token keyword">def</span> <span class="token function">filter_price</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> value<span class="token punctuation">.</span>isdigit<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> value

<span class="token keyword">class</span> <span class="token class-name">Product</span><span class="token punctuation">(</span>scrapy<span class="token punctuation">.</span>Item<span class="token punctuation">)</span><span class="token punctuation">:</span>
    name <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span>
        input_processor<span class="token operator">=</span>MapCompose<span class="token punctuation">(</span>remove_tags<span class="token punctuation">)</span><span class="token punctuation">,</span>
        output_processor<span class="token operator">=</span>Join<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span>
    price <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span>
        input_processor<span class="token operator">=</span>MapCompose<span class="token punctuation">(</span>remove_tags<span class="token punctuation">,</span> filter_price<span class="token punctuation">)</span><span class="token punctuation">,</span>
        output_processor<span class="token operator">=</span>TakeFirst<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> from scrapy.contrib.loader <span class="token function">import</span> ItemLoader
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> il <span class="token operator">=</span> ItemLoader<span class="token punctuation">(</span>item<span class="token operator">=</span>Product<span class="token punctuation">(</span><span class="token punctuation">))</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> il.add_value<span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span>, <span class="token punctuation">[</span>u<span class="token string">&#39;Welcome to my&#39;</span>, u<span class="token string">&#39;&lt;strong&gt;website&lt;/strong&gt;&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> il.add_value<span class="token punctuation">(</span><span class="token string">&#39;price&#39;</span>, <span class="token punctuation">[</span>u<span class="token string">&#39;&amp;euro;&#39;</span>, u<span class="token string">&#39;&lt;span&gt;1000&lt;/span&gt;&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> il.<span class="token function-name function">load_item</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token builtin class-name">:</span> u<span class="token string">&#39;Welcome to my website&#39;</span>, <span class="token string">&#39;price&#39;</span><span class="token builtin class-name">:</span> u<span class="token string">&#39;1000&#39;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u5165\u8F93\u51FA\u5904\u7406\u5668\u7684\u4F18\u5148\u7EA7:</p><ol><li>Item Loader field-specific attributes:\xA0<code>field_in</code>\xA0and\xA0<code>field_out</code>\xA0(most precedence)</li><li>Field metadata (<code>input_processor</code>\xA0and\xA0<code>output_processor</code>\xA0key)</li><li>Item Loader defaults:\xA0<strong><code>[ItemLoader.default_input_processor()](https://scrapy-chs.readthedocs.io/zh_CN/latest/topics/loaders.html#scrapy.contrib.loader.ItemLoader.default_input_processor)</code></strong>\xA0and\xA0<strong><code>[ItemLoader.default_output_processor()](https://scrapy-chs.readthedocs.io/zh_CN/latest/topics/loaders.html#scrapy.contrib.loader.ItemLoader.default_output_processor)</code></strong>\xA0(least precedence)</li></ol><h2 id="item-loader-context" tabindex="-1"><a class="header-anchor" href="#item-loader-context" aria-hidden="true">#</a> Item Loader Context</h2><p>\u4E0A\u4E0B\u6587\u662F\u4E00\u79CD\u5B57\u5178, \u53EF\u4EE5\u5728ItemLoader\u7684\u8F93\u5165\u8F93\u51FA\u5904\u7406\u5668\u5171\u4EAB. \u5F53\u5B9A\u4E49/\u5B9E\u4F8B\u5316/\u4F7F\u7528ItemLoader\u7684\u65F6\u5019\u53EF\u4EE5\u88AB\u4F20\u9012. \u88AB\u7528\u4E8E\u4FEE\u6539\u8F93\u5165\u8F93\u51FA\u5904\u7406\u5668\u7684\u884C\u4E3A.</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">parse_length</span><span class="token punctuation">(</span>text<span class="token punctuation">,</span> loader_context<span class="token punctuation">)</span><span class="token punctuation">:</span>
    unit <span class="token operator">=</span> loader_context<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;unit&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;m&#39;</span><span class="token punctuation">)</span>
    <span class="token comment"># ... length parsing code goes here ...</span>
    <span class="token keyword">return</span> parsed_length
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6709\u51E0\u79CD\u65B9\u6CD5\u53EF\u4EE5\u4FEE\u6539 Item Loader \u4E0A\u4E0B\u6587\u503C:</p><ol><li><p>\u901A\u8FC7\u4FEE\u6539\u5F53\u524D\u6D3B\u52A8\u7684 Item Loader \u4E0A\u4E0B\u6587(context \u5C5E\u6027) :</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>loader <span class="token operator">=</span> ItemLoader<span class="token punctuation">(</span>product<span class="token punctuation">)</span>
loader<span class="token punctuation">.</span>context<span class="token punctuation">[</span><span class="token string">&#39;unit&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;cm&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>Item Loader \u5B9E\u4F8B\u5316(Item Loader \u6784\u9020\u51FD\u6570\u7684\u5173\u952E\u5B57\u53C2\u6570\u5B58\u50A8\u5728 Item Loader \u4E0A\u4E0B\u6587\u4E2D) :</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>loader <span class="token operator">=</span> ItemLoader<span class="token punctuation">(</span>product<span class="token punctuation">,</span> unit<span class="token operator">=</span><span class="token string">&#39;cm&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>\u5728 Item Loader \u58F0\u660E\u4E2D\uFF0C\u7528\u4E8E\u90A3\u4E9B\u652F\u6301\u4F7F\u7528 Item Loader \u4E0A\u4E0B\u6587\u5B9E\u4F8B\u5316\u5B83\u4EEC\u7684\u8F93\u5165/\u8F93\u51FA\u5904\u7406\u5668\u3002MapCompose \u5C31\u662F\u5176\u4E2D\u4E4B\u4E00:</p></li></ol><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">ProductLoader</span><span class="token punctuation">(</span>ItemLoader<span class="token punctuation">)</span><span class="token punctuation">:</span>
    length_out <span class="token operator">=</span> MapCompose<span class="token punctuation">(</span>parse_length<span class="token punctuation">,</span> unit<span class="token operator">=</span><span class="token string">&#39;cm&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,22),o=[p];function c(i,l){return s(),a("div",null,o)}const d=n(e,[["render",c],["__file","ItemLoaders.html.vue"]]);export{d as default};
