const t=JSON.parse('{"key":"v-3b4606e0","path":"/posts/pattern/responsibility-chain-pattern.html","title":"responsibility chain pattern","lang":"en-US","frontmatter":{"isOriginal":true,"title":"responsibility chain pattern","date":"2018-11-30T00:00:00.000Z","tag":["responsibility chain pattern"],"category":"技术","description":"责任链模式的实现方法","image":"http://image.nikolazhang.top/wallhaven-nrwq11.jpg","head":[["meta",{"property":"og:url","content":"https://nikolazhang.github.io/posts/pattern/responsibility-chain-pattern.html"}],["meta",{"property":"og:title","content":"responsibility chain pattern"}],["meta",{"property":"og:description","content":"责任链模式的实现方法"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-06-08T15:09:36.000Z"}],["meta",{"property":"article:author","content":"我小叮当、"}],["meta",{"property":"article:tag","content":"responsibility chain pattern"}],["meta",{"property":"article:published_time","content":"2018-11-30T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-08T15:09:36.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"responsibility chain pattern\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2018-11-30T00:00:00.000Z\\",\\"dateModified\\":\\"2023-06-08T15:09:36.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"我小叮当、\\",\\"url\\":\\"https://nikolazhang.github.io\\"}]}"]]},"headers":[{"level":2,"title":"请求入口Position","slug":"请求入口position","link":"#请求入口position","children":[]},{"level":2,"title":"继承Position","slug":"继承position","link":"#继承position","children":[]},{"level":2,"title":"最近聚餐，周知周知","slug":"最近聚餐-周知周知","link":"#最近聚餐-周知周知","children":[]},{"level":2,"title":"结果","slug":"结果","link":"#结果","children":[]}],"git":{"createdTime":1686236976000,"updatedTime":1686236976000,"contributors":[{"name":"nikola","email":"nikolazhang@163.com","commits":1}]},"readingTime":{"minutes":1.78,"words":533},"filePathRelative":"posts/pattern/responsibility-chain-pattern.md","localizedDate":"November 30, 2018","excerpt":"<blockquote>\\n<p>责任链模式，将请求和处理对象分离，将请求发送给一个请求处理入口后，谁具有请求的处理权限，谁就处理请求。</p>\\n</blockquote>\\n<!--more-->\\n<p>每年这个时候大概都是公司的聚餐季。但是我们的汽车厂，领导们饭后还有特别活动，比如讨论个“来年计划”啥的。我不清楚，我没当过领导。</p>\\n<h2> 请求入口Position</h2>\\n<p>这里我们将请求的处理者分级，使用Position类型的nextPostion属性。接着创建该类的构造器、set方法等等。这都没什么好说的。关键的是giveNotice方法。方法的第一个参数是我们的请求级别，第二个参数就是请求的内容。通过不断判断nextPosition中的level是否符合条件决定是否将请求交给对象处理。</p>"}');export{t as data};
