import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as i,c as o,a as s,b as n,d as e,e as l}from"./app-8d7ff9e4.js";const c="/assets/image-1-324bd8ac.png",r="/assets/image-069d6f47.png",d="/assets/image-2-4ac462ad.png",k="/assets/image-3-07e32459.png",u="/assets/image-4-1c9cb19f.png",v="/assets/image-7-e7bdfa2e.png",m="/assets/image-6-f677bb86.png",b="/assets/image-5-97b184d9.png",h={},g=s("blockquote",null,[s("p",null,"淘汰掉的安卓手机，弃之不用有些可惜。我们可以尝试将其变为一个服务器，用于部署常用的服务。 简单的方式，可以在本地构建，之后通过ssh将jar包传到对应的目录下，之后通过命令启动服务，这种方式自动化太低。")],-1),_=s("p",null,"为了能够自动化的构建及部署服务，Jenkins是个不错的选择。这篇文章主要解决，将jenkins部署在安卓手机上，并完成基础的配置。",-1),f=s("h2",{id:"安装jenkins",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#安装jenkins","aria-hidden":"true"},"#"),n(" 安装Jenkins")],-1),j={href:"https://www.jenkins.io/zh/",target:"_blank",rel:"noopener noreferrer"},x=l(`<p>你可以通过命令下载，稳定版2.364.3</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">wget</span> http://mirrors.jenkins.io/war-stable/2.346.3/jenkins.war
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="部署jenkins" tabindex="-1"><a class="header-anchor" href="#部署jenkins" aria-hidden="true">#</a> 部署Jenkins</h2><p>之后启动Jenkins会创建新的文件，最好提前将下载的war包，移动到一个自定义的目录中。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> app/jenkins
<span class="token function">mv</span> jenkins.war app/jenkins
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>写一个启动脚本（名字可以为<code>jenkins.sh</code>），如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token comment"># 导入环境变量</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">JENKINS_HOME</span><span class="token operator">=</span>/root/apps/jenkins
<span class="token builtin class-name">export</span> <span class="token assign-left variable">JAVA_HOME</span><span class="token operator">=</span>/usr/lib/jvm/java-21-openjdk-arm64

<span class="token builtin class-name">cd</span> <span class="token variable">$JENKINS_HOME</span>

<span class="token assign-left variable">pid</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token function">ps</span> <span class="token parameter variable">-ef</span> <span class="token operator">|</span> <span class="token function">grep</span> jenkins.war <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token string">&#39;grep&#39;</span><span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{print $2}&#39;</span><span class="token variable">\`</span></span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">$1</span>&quot;</span> <span class="token operator">=</span> <span class="token string">&quot;start&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">then</span>
  <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token parameter variable">-n</span> <span class="token string">&quot;<span class="token variable">$pid</span>&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">then</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;[<span class="token variable">$pid</span>]jenkins is running...&quot;</span>
  <span class="token keyword">else</span>
    <span class="token comment">### java启动服务 配置java安装根路径,和启动war包存的根路径</span>
    <span class="token function">nohup</span> <span class="token variable">$JAVA_HOME</span>/bin/java <span class="token parameter variable">-Xms128m</span> <span class="token parameter variable">-Xmx512m</span> <span class="token punctuation">\\</span>
        <span class="token parameter variable">-jar</span> <span class="token variable">$JENKINS_HOME</span>/jenkins.war <span class="token punctuation">\\</span>
        <span class="token parameter variable">--httpPort</span><span class="token operator">=</span><span class="token number">18080</span> <span class="token punctuation">\\</span>
        <span class="token parameter variable">--logfile</span><span class="token operator">=</span><span class="token variable">$JENKINS_HOME</span>/jenkins.log <span class="token punctuation">\\</span>
        <span class="token operator">&gt;</span> /dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span> <span class="token operator">&amp;</span>
  <span class="token keyword">fi</span>
<span class="token keyword">elif</span> <span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">$1</span>&quot;</span> <span class="token operator">=</span> <span class="token string">&quot;stop&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">then</span>
  <span class="token builtin class-name">exec</span> <span class="token function">ps</span> <span class="token parameter variable">-ef</span> <span class="token operator">|</span> <span class="token function">grep</span> jenkins <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token function">grep</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{print $2}&#39;</span><span class="token operator">|</span> <span class="token function">xargs</span> <span class="token function">kill</span> <span class="token parameter variable">-9</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&#39;jenkins is stop...&#39;</span>
<span class="token keyword">else</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;Please input like this:&quot;</span>./jenkins.sh start<span class="token string">&quot; or &quot;</span>./jenkins stop<span class="token string">&quot;&quot;</span>
<span class="token keyword">fi</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在这个脚本中我们通过start参数来启动Jenkins，stop参数用来停止。Jenkins的访问端口为18080。 另外需要注意的是稳定版<code>2.364.3</code>要求java版本为11，17，21。</p><h2 id="启动及访问jenkins" tabindex="-1"><a class="header-anchor" href="#启动及访问jenkins" aria-hidden="true">#</a> 启动及访问Jenkins</h2><p>通过<code>./jenkins.sh start</code>命令启动。首次访问需要查看日志（jenkins.log）中打印的token。</p><p>在浏览器中输入<code>http://手机IP:18080/</code>，输入token后，即可访问Jenkins。</p><h2 id="设置用户权限" tabindex="-1"><a class="header-anchor" href="#设置用户权限" aria-hidden="true">#</a> 设置用户权限</h2><p>进入<code>系统管理 &gt; 全局安全配置</code>，按照下图进行配置安全域。</p><p><img src="`+c+'" alt="Alt text"></p><p>设置好安全域之后，回到<code>系统管理</code>界面，就可以找到<code>用户管理</code>。在这个页面可以添加用户。</p><p><img src="'+r+'" alt="Alt text"></p><p>如果希望通过角色进行权限管理，在插件管理中搜索<code>Role-based Authorization Strategy</code>。</p><p>打开<code>Manage and Assign Roles</code>。</p><p>进入<code>Manage Roles</code>的界面就可以添加角色了。</p><p><img src="'+d+'" alt="Alt text"></p><p>在<code>Assign Roles</code>页面可以为用户设置角色。</p><p><img src="'+k+'" alt="Alt text"></p><p>最后不要忘了，全局安全配置要设置基于角色的授权策略。</p><p><img src="'+u+`" alt="Alt text"></p><h2 id="配置" tabindex="-1"><a class="header-anchor" href="#配置" aria-hidden="true">#</a> 配置</h2><h3 id="maven配置" tabindex="-1"><a class="header-anchor" href="#maven配置" aria-hidden="true">#</a> maven配置</h3><p>首先下载maven包，并解压。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>https://dlcdn.apache.org/maven/maven-3/3.9.6/binaries/apache-maven-3.9.6-bin.tar.gz

<span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> apache-maven-3.9.6-bin.tar.gz

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们的项目通常是maven架构的。Jenkins如果需要支持maven，需要安装插件<code>Maven Integration plugin</code>。</p><p>并在<code>系统管理-全局工具配置</code>中进行如下配置：</p><p><img src="`+v+'" alt="Alt text"></p><p>这里指定了settings.xml的位置。</p><h3 id="gitee配置" tabindex="-1"><a class="header-anchor" href="#gitee配置" aria-hidden="true">#</a> gitee配置</h3><p>如果项目在<code>gitee</code>上，需要安装gitee插件，之后进入<code>系统配置</code>中按照下图进行配置。</p><p><img src="'+m+'" alt="Alt text"></p>',35),w=s("code",null,"链接名",-1),q=s("code",null,"Gitee 域名 URL",-1),J={href:"https://gitee.com/profile/personal_access_tokens",target:"_blank",rel:"noopener noreferrer"},A=s("p",null,[s("img",{src:b,alt:"Alt text"})],-1),E=s("p",null,"最后不要忘了点击保存。",-1);function N(y,$){const a=p("ExternalLinkIcon");return i(),o("div",null,[g,_,f,s("p",null,[n("从"),s("a",j,[n("Jenkins官网"),e(a)]),n("上，可以找到对应的下载页面。这里我们下载最新的war包，通过war包部署，这种方式应该是最可靠的。")]),x,s("p",null,[w,n("和"),q,n("都是固定的。令牌需要到"),s("a",J,[n("个人令牌"),e(a)]),n("页生成，之后添加方式参考下图（ID不重复就行）。")]),A,E])}const H=t(h,[["render",N],["__file","安装Jenkins及配置.html.vue"]]);export{H as default};
