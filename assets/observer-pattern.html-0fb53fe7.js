const e=JSON.parse('{"key":"v-1de18668","path":"/posts/pattern/observer-pattern.html","title":"observer pattern","lang":"en-US","frontmatter":{"isOriginal":true,"title":"observer pattern","date":"2018-12-12T00:00:00.000Z","tag":["observer pattern"],"category":"技术","description":"观察者模式的实现和介绍","image":"http://image.nikolazhang.top/wallhaven-nrwq11.jpg","head":[["meta",{"property":"og:url","content":"https://nikolazhang.github.io/posts/pattern/observer-pattern.html"}],["meta",{"property":"og:title","content":"observer pattern"}],["meta",{"property":"og:description","content":"观察者模式的实现和介绍"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-06-08T15:09:36.000Z"}],["meta",{"property":"article:author","content":"我小叮当、"}],["meta",{"property":"article:tag","content":"observer pattern"}],["meta",{"property":"article:published_time","content":"2018-12-12T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-08T15:09:36.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"observer pattern\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2018-12-12T00:00:00.000Z\\",\\"dateModified\\":\\"2023-06-08T15:09:36.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"我小叮当、\\",\\"url\\":\\"https://nikolazhang.github.io\\"}]}"]]},"headers":[{"level":2,"title":"被观察者","slug":"被观察者","link":"#被观察者","children":[]},{"level":2,"title":"观察者","slug":"观察者","link":"#观察者","children":[]},{"level":2,"title":"测试","slug":"测试","link":"#测试","children":[]},{"level":2,"title":"结果","slug":"结果","link":"#结果","children":[]}],"git":{"createdTime":1686236976000,"updatedTime":1686236976000,"contributors":[{"name":"nikola","email":"nikolazhang@163.com","commits":1}]},"readingTime":{"minutes":1.26,"words":379},"filePathRelative":"posts/pattern/observer-pattern.md","localizedDate":"December 12, 2018","excerpt":"<blockquote>\\n<p>观察模式，提供了一种实时监听方案。定义对象间的一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知并被自动更新。[菜鸟]</p>\\n</blockquote>\\n<!--more-->\\n<p>当我们的流水线，每生产一辆车，我们都要记录并检验这辆车。\\n这里的记录员和质检员就是观察者。生产线则是被观察者。当被观察者变化时，就要通知其依赖的这些记录员和质检员。</p>\\n<h2> 被观察者</h2>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre class=\\"language-text\\"><code>package observer;\\n\\nimport java.util.Observable;\\n\\npublic class Beltline extends Observable {\\n\\n\\tpublic void productCar(String carName) {\\n\\t\\tSystem.out.println(\\"start producting car\\");\\n\\t\\tsuper.setChanged();\\n\\t\\tsuper.notifyObservers(carName);\\n\\t}\\n}\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{e as data};
