import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{o as e,c as l,e as d}from"./app-f0da0aab.js";const i={},s=d(`<blockquote><p>top 可以显示当前系统正在执行的进程的相关信息，包括进程ID、内存占用率、CPU占用率等.</p></blockquote><h2 id="命令格式" tabindex="-1"><a class="header-anchor" href="#命令格式" aria-hidden="true">#</a> 命令格式</h2><p>top [选项]</p><ul><li>d : 改变显示的更新速度，或是在交谈式指令列( interactive command)按 s</li><li>q : 没有任何延迟的显示速度，如果使用者是有 superuser 的权限，则 top 将会以最高的优先序执行</li><li>c : 切换显示模式，共有两种模式，一是只显示执行档的名称，另一种是显示完整的路径与名称</li><li>S : 累积模式，会将己完成或消失的子行程 ( dead child process ) 的 CPU time 累积起来</li><li>s : 安全模式，将交谈式指令取消, 避免潜在的危机</li><li>i : 不显示任何闲置 (idle) 或无用 (zombie) 的行程</li><li>n : 更新的次数，完成后将会退出 top</li><li>b : 批次档模式，搭配 &quot;n&quot; 参数一起使用，可以用来将 top 的结果输出到档案内</li></ul><h2 id="top命令输出及含义" tabindex="-1"><a class="header-anchor" href="#top命令输出及含义" aria-hidden="true">#</a> top命令输出及含义</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>top - 14:18:24 up 32 days, 18:52,  1 user,  load average: 0.05, 0.08, 0.08
Tasks:  96 total,   2 running,  94 sleeping,   0 stopped,   0 zombie
%Cpu(s):  2.4 us,  1.4 sy,  0.0 ni, 94.9 id,  1.4 wa,  0.0 hi,  0.0 si,  0.0 st
MiB Mem :   1987.7 total,     67.8 free,   1068.5 used,    851.4 buff/cache
MiB Swap:      0.0 total,      0.0 free,      0.0 used.    744.4 avail Mem

    PID USER      PR  NI    VIRT    RES    SHR S  %CPU  %MEM     TIME+ COMMAND
 182011 root      10 -10  128696  31332  10156 S   1.7   1.5 644:37.44 AliYunDun
   1147 systemd+  20   0 1282756 457292  14872 S   0.7  22.5 324:11.54 mysqld
    462 syslog    20   0  224348   3920   2360 S   0.3   0.2   2:35.88 rsyslogd
    ..............
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>前五行是系统整体的统计信息。</p><p>第一行是任务队列信息，同 uptime 命令的执行结果。</p><table><thead><tr><th style="text-align:left;"></th><th style="text-align:left;"></th></tr></thead><tbody><tr><td style="text-align:left;">14:18:24</td><td style="text-align:left;">系统当前时间</td></tr><tr><td style="text-align:left;">up 32 days, 18:52</td><td style="text-align:left;">系统运行时间，格式为: XXXdays, 时:分</td></tr><tr><td style="text-align:left;">1 user</td><td style="text-align:left;">当前登录用户数</td></tr><tr><td style="text-align:left;">load average: 0.05, 0.08, 0.08</td><td style="text-align:left;">系统负载，即任务队列的平均长度(三个数值分别为 1分钟、5分钟、15分钟前到现在的平均值。)</td></tr></tbody></table><p>第二、三行为进程和CPU的信息。当有多个CPU时，这些内容可能会超过两行。内容如下：</p><table><thead><tr><th style="text-align:left;"></th><th style="text-align:left;"></th></tr></thead><tbody><tr><td style="text-align:left;">Tasks: 96 total</td><td style="text-align:left;">进程总数</td></tr><tr><td style="text-align:left;">2 running</td><td style="text-align:left;">正在运行的进程数</td></tr><tr><td style="text-align:left;">94 sleeping</td><td style="text-align:left;">睡眠的进程数</td></tr><tr><td style="text-align:left;">0 stopped</td><td style="text-align:left;">停止的进程数</td></tr><tr><td style="text-align:left;">0 zombie</td><td style="text-align:left;">僵尸进程数</td></tr><tr><td style="text-align:left;">Cpu(s): 2.4 us</td><td style="text-align:left;">用户空间占用CPU百分比</td></tr><tr><td style="text-align:left;">1.4 sy sy</td><td style="text-align:left;">内核空间占用CPU百分比</td></tr><tr><td style="text-align:left;">0.0 ni</td><td style="text-align:left;">用户进程空间内改变过优先级的进程占用CPU百分比</td></tr><tr><td style="text-align:left;">94.9 id</td><td style="text-align:left;">空闲CPU百分比</td></tr><tr><td style="text-align:left;">1.4 wa</td><td style="text-align:left;">cpu运行时在等待io的时间</td></tr><tr><td style="text-align:left;">0.0% hi</td><td style="text-align:left;">cpu处理硬中断的数量</td></tr><tr><td style="text-align:left;">0.0% si</td><td style="text-align:left;">cpu处理软中断的数量</td></tr></tbody></table><p>最后两行为内存信息。内容如下：</p><table><thead><tr><th style="text-align:left;"></th><th style="text-align:left;"></th></tr></thead><tbody><tr><td style="text-align:left;">Mem: 1987.7 total</td><td style="text-align:left;">物理内存总量</td></tr><tr><td style="text-align:left;">67.8 free</td><td style="text-align:left;">空闲内存总量</td></tr><tr><td style="text-align:left;">1068.5 used</td><td style="text-align:left;">使用的物理内存总量</td></tr><tr><td style="text-align:left;">851.4 buff/cache</td><td style="text-align:left;">用作内核缓存的内存量</td></tr><tr><td style="text-align:left;">Swap: 0.0 total</td><td style="text-align:left;">交换区总量</td></tr><tr><td style="text-align:left;">0.0 used</td><td style="text-align:left;">使用的交换区总量</td></tr><tr><td style="text-align:left;">0.0 free</td><td style="text-align:left;">空闲交换区总量</td></tr><tr><td style="text-align:left;">744.4 avail Mem</td><td style="text-align:left;">无需交换时, 大概有多少内存可用于启动新的应用程序</td></tr></tbody></table><p>内存中的内容被换出到交换区，而后又被换入到内存，但使用过的交换区尚未被覆盖， 该数值即为这些内容已存在于内存中的交换区的大小。 相应的内存再次被换出时可不必再对交换区写入。</p><p>列表展示部分的各个列的含义:</p><table><thead><tr><th style="text-align:left;">列名</th><th style="text-align:left;">含义</th></tr></thead><tbody><tr><td style="text-align:left;">PID</td><td style="text-align:left;">进程id</td></tr><tr><td style="text-align:left;">PPID</td><td style="text-align:left;">父进程id</td></tr><tr><td style="text-align:left;">RUSER</td><td style="text-align:left;">Real user name</td></tr><tr><td style="text-align:left;">UID</td><td style="text-align:left;">进程所有者的用户id</td></tr><tr><td style="text-align:left;">USER</td><td style="text-align:left;">进程所有者的用户名</td></tr><tr><td style="text-align:left;">GROUP</td><td style="text-align:left;">进程所有者的组名</td></tr><tr><td style="text-align:left;">TTY</td><td style="text-align:left;">启动进程的终端名。不是从终端启动的进程则显示为 ?</td></tr><tr><td style="text-align:left;">PR</td><td style="text-align:left;">优先级</td></tr><tr><td style="text-align:left;">NI</td><td style="text-align:left;">nice值。负值表示高优先级，正值表示低优先级</td></tr><tr><td style="text-align:left;">P</td><td style="text-align:left;">最后使用的CPU，仅在多CPU环境下有意义</td></tr><tr><td style="text-align:left;">%CPU</td><td style="text-align:left;">上次更新到现在的CPU时间占用百分比</td></tr><tr><td style="text-align:left;">TIME</td><td style="text-align:left;">进程使用的CPU时间总计，单位秒</td></tr><tr><td style="text-align:left;">TIME+</td><td style="text-align:left;">进程使用的CPU时间总计，单位1/100秒</td></tr><tr><td style="text-align:left;">%MEM</td><td style="text-align:left;">进程使用的物理内存百分比</td></tr><tr><td style="text-align:left;">VIRT</td><td style="text-align:left;">进程使用的虚拟内存总量，单位kb。VIRT=SWAP+RES</td></tr><tr><td style="text-align:left;">SWAP</td><td style="text-align:left;">进程使用的虚拟内存中，被换出的大小，单位kb。</td></tr><tr><td style="text-align:left;">RES</td><td style="text-align:left;">进程使用的、未被换出的物理内存大小，单位kb。RES=CODE+DATA</td></tr><tr><td style="text-align:left;">CODE</td><td style="text-align:left;">可执行代码占用的物理内存大小，单位kb</td></tr><tr><td style="text-align:left;">DATA</td><td style="text-align:left;">可执行代码以外的部分(数据段+栈)占用的物理内存大小，单位kb</td></tr><tr><td style="text-align:left;">SHR</td><td style="text-align:left;">共享内存大小，单位kb</td></tr><tr><td style="text-align:left;">nFLT</td><td style="text-align:left;">页面错误次数</td></tr><tr><td style="text-align:left;">nDRT</td><td style="text-align:left;">最后一次写入到现在，被修改过的页面数。</td></tr><tr><td style="text-align:left;">S</td><td style="text-align:left;">进程状态。 D=不可中断的睡眠状态 R=运行 S=睡眠 T=跟踪/停止 Z=僵尸进程</td></tr><tr><td style="text-align:left;">COMMAND</td><td style="text-align:left;">命令名/命令行</td></tr><tr><td style="text-align:left;">WCHAN</td><td style="text-align:left;">若该进程在睡眠，则显示睡眠中的系统函数名</td></tr><tr><td style="text-align:left;">Flags</td><td style="text-align:left;">任务标志，参考 sched.h</td></tr></tbody></table><h2 id="更多命令" tabindex="-1"><a class="header-anchor" href="#更多命令" aria-hidden="true">#</a> 更多命令</h2><p>进入top命令后, 按?可以查看帮助:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Help for Interactive Commands - procps-ng UNKNOWN
Window 1:Def: Cumulative mode Off.  System: Delay 3.0 secs; Secure mode Off.

  Z,B,E,e   Global: &#39;Z&#39; colors; &#39;B&#39; bold; &#39;E&#39;/&#39;e&#39; summary/task memory scale
  l,t,m     Toggle Summary: &#39;l&#39; load avg; &#39;t&#39; task/cpu stats; &#39;m&#39; memory info
  0,1,2,3,I Toggle: &#39;0&#39; zeros; &#39;1/2/3&#39; cpus or numa node views; &#39;I&#39; Irix mode
  f,F,X     Fields: &#39;f&#39;/&#39;F&#39; add/remove/order/sort; &#39;X&#39; increase fixed-width

  L,&amp;,&lt;,&gt; . Locate: &#39;L&#39;/&#39;&amp;&#39; find/again; Move sort column: &#39;&lt;&#39;/&#39;&gt;&#39; left/right
  R,H,J,C . Toggle: &#39;R&#39; Sort; &#39;H&#39; Threads; &#39;J&#39; Num justify; &#39;C&#39; Coordinates
  c,i,S,j . Toggle: &#39;c&#39; Cmd name/line; &#39;i&#39; Idle; &#39;S&#39; Time; &#39;j&#39; Str justify
  x,y     . Toggle highlights: &#39;x&#39; sort field; &#39;y&#39; running tasks
  z,b     . Toggle: &#39;z&#39; color/mono; &#39;b&#39; bold/reverse (only if &#39;x&#39; or &#39;y&#39;)
  u,U,o,O . Filter by: &#39;u&#39;/&#39;U&#39; effective/any user; &#39;o&#39;/&#39;O&#39; other criteria
  n,#,^O  . Set: &#39;n&#39;/&#39;#&#39; max tasks displayed; Show: Ctrl+&#39;O&#39; other filter(s)
  V,v     . Toggle: &#39;V&#39; forest view; &#39;v&#39; hide/show forest view children

  k,r       Manipulate tasks: &#39;k&#39; kill; &#39;r&#39; renice
  d or s    Set update interval
  W,Y       Write configuration file &#39;W&#39;; Inspect other output &#39;Y&#39;
  q         Quit
          ( commands shown with &#39;.&#39; require a visible task display window )
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里说一下比较有用的命令.</p><table><thead><tr><th style="text-align:left;"></th><th style="text-align:left;"></th></tr></thead><tbody><tr><td style="text-align:left;">E</td><td style="text-align:left;">更改summery区域(前5行)中<code>memory</code>的单位 依次会变为: K, M, G, T, P, E</td></tr><tr><td style="text-align:left;">e</td><td style="text-align:left;">更改进程区域(前5行)中<code>memory</code>的单位 依次会变为: k, m, g, t, p</td></tr><tr><td style="text-align:left;">i</td><td style="text-align:left;">开/关忽略闲置和僵死进程</td></tr><tr><td style="text-align:left;">k</td><td style="text-align:left;">终止一个进程</td></tr><tr><td style="text-align:left;">c</td><td style="text-align:left;">切换显示命令名称和完整命令行</td></tr><tr><td style="text-align:left;">l</td><td style="text-align:left;">切换显示平均负载和启动时间信息</td></tr><tr><td style="text-align:left;">m</td><td style="text-align:left;">切换显示内存信息</td></tr><tr><td style="text-align:left;">t</td><td style="text-align:left;">切换显示进程和CPU状态信息</td></tr><tr><td style="text-align:left;">S</td><td style="text-align:left;">切换到累计模式,会将己完成或消失的子行程 ( dead child process ) 的 CPU time 累积起来</td></tr><tr><td style="text-align:left;">s</td><td style="text-align:left;">更改刷新间隔时间，单位秒</td></tr><tr><td style="text-align:left;">1</td><td style="text-align:left;">展开多核cpu显示</td></tr><tr><td style="text-align:left;">L</td><td style="text-align:left;">查找字符</td></tr><tr><td style="text-align:left;">T</td><td style="text-align:left;">根据时间/累计时间进行排序</td></tr><tr><td style="text-align:left;">P</td><td style="text-align:left;">根据CPU使用率进行排序 （默认排序）</td></tr><tr><td style="text-align:left;">M</td><td style="text-align:left;">根据内存使用大小排序</td></tr><tr><td style="text-align:left;">o,O</td><td style="text-align:left;">改变显示项目的顺序</td></tr><tr><td style="text-align:left;">&lt;/&gt;</td><td style="text-align:left;">切换列变更展示顺序</td></tr><tr><td style="text-align:left;">f,F</td><td style="text-align:left;">从当前显示中添加或者删除项目</td></tr><tr><td style="text-align:left;">r</td><td style="text-align:left;">重新安排一个进程的优先级别</td></tr><tr><td style="text-align:left;">w</td><td style="text-align:left;">将当前设置写入~/.toprc文件中</td></tr><tr><td style="text-align:left;">h</td><td style="text-align:left;">显示快捷键帮助</td></tr><tr><td style="text-align:left;">q</td><td style="text-align:left;">退出程序</td></tr></tbody></table>`,21),n=[s];function a(r,f){return e(),l("div",null,n)}const x=t(i,[["render",a],["__file","top命令.html.vue"]]);export{x as default};
