const n=JSON.parse('{"key":"v-8ef7e484","path":"/posts/hashmap/%E7%BA%A2%E9%BB%91%E6%A0%91_2_%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%8F%8A%E6%96%B9%E6%B3%95.html","title":"源码分析[5] HashMap之红黑树2","lang":"en-US","frontmatter":{"isOriginal":true,"title":"源码分析[5] HashMap之红黑树2","mathjax":true,"tag":["hashmap","红黑树"],"category":"源码","date":"2020-01-15T00:00:00.000Z","description":"分析一下hashmap的红黑树实现","image":"https://tech.nikolazhang.top/db22df83325d65e99be3037e93bbae750bf72eb8.jpg","sticky":false,"timeline":true,"article":true,"star":false,"head":[["meta",{"property":"og:url","content":"https://nikolazhang.github.io/posts/hashmap/%E7%BA%A2%E9%BB%91%E6%A0%91_2_%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%8F%8A%E6%96%B9%E6%B3%95.html"}],["meta",{"property":"og:title","content":"源码分析[5] HashMap之红黑树2"}],["meta",{"property":"og:description","content":"分析一下hashmap的红黑树实现"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-06-09T00:57:17.000Z"}],["meta",{"property":"article:author","content":"我小叮当、"}],["meta",{"property":"article:tag","content":"hashmap"}],["meta",{"property":"article:tag","content":"红黑树"}],["meta",{"property":"article:published_time","content":"2020-01-15T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-09T00:57:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"源码分析[5] HashMap之红黑树2\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-01-15T00:00:00.000Z\\",\\"dateModified\\":\\"2023-06-09T00:57:17.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"我小叮当、\\",\\"url\\":\\"https://nikolazhang.github.io\\"}]}"]]},"headers":[{"level":2,"title":"红黑树的结构定义","slug":"红黑树的结构定义","link":"#红黑树的结构定义","children":[]},{"level":2,"title":"putTreeVal","slug":"puttreeval","link":"#puttreeval","children":[]},{"level":2,"title":"find","slug":"find","link":"#find","children":[]},{"level":2,"title":"getTreeNode","slug":"gettreenode","link":"#gettreenode","children":[]},{"level":2,"title":"tieBreakOrder","slug":"tiebreakorder","link":"#tiebreakorder","children":[]},{"level":2,"title":"treeify","slug":"treeify","link":"#treeify","children":[]},{"level":2,"title":"untreeify","slug":"untreeify","link":"#untreeify","children":[]},{"level":2,"title":"end","slug":"end","link":"#end","children":[]}],"git":{"createdTime":1686272237000,"updatedTime":1686272237000,"contributors":[{"name":"dewy yr","email":"nikolazhang@163.com","commits":1}]},"readingTime":{"minutes":7.66,"words":2297},"filePathRelative":"posts/hashmap/红黑树[2]数据结构及方法.md","localizedDate":"January 15, 2020","excerpt":"<blockquote>\\n<p>终于到了HashMap中的红黑树实现的分析了, 我不确定自己能否解释清楚这部分. 颇有如临大敌, 如履薄冰, 胆战心惊之感. 毕竟我是个菜鸡da☆ze~</p>\\n</blockquote>\\n<h2> 红黑树的结构定义</h2>\\n<p>hashmap中红黑树的实现类是<code>TreeNode</code>, 其中的属性如下:</p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">static</span> <span class=\\"token keyword\\">final</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">TreeNode</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">K</span><span class=\\"token punctuation\\">,</span><span class=\\"token class-name\\">V</span><span class=\\"token punctuation\\">&gt;</span></span> <span class=\\"token keyword\\">extends</span> <span class=\\"token class-name\\">LinkedHashMap<span class=\\"token punctuation\\">.</span>Entry</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">K</span><span class=\\"token punctuation\\">,</span><span class=\\"token class-name\\">V</span><span class=\\"token punctuation\\">&gt;</span></span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token class-name\\">TreeNode</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">K</span><span class=\\"token punctuation\\">,</span><span class=\\"token class-name\\">V</span><span class=\\"token punctuation\\">&gt;</span></span> parent<span class=\\"token punctuation\\">;</span>  <span class=\\"token comment\\">// red-black tree links</span>\\n    <span class=\\"token class-name\\">TreeNode</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">K</span><span class=\\"token punctuation\\">,</span><span class=\\"token class-name\\">V</span><span class=\\"token punctuation\\">&gt;</span></span> left<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token class-name\\">TreeNode</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">K</span><span class=\\"token punctuation\\">,</span><span class=\\"token class-name\\">V</span><span class=\\"token punctuation\\">&gt;</span></span> right<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token class-name\\">TreeNode</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">K</span><span class=\\"token punctuation\\">,</span><span class=\\"token class-name\\">V</span><span class=\\"token punctuation\\">&gt;</span></span> prev<span class=\\"token punctuation\\">;</span>    <span class=\\"token comment\\">// needed to unlink next upon deletion</span>\\n    <span class=\\"token keyword\\">boolean</span> red<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token class-name\\">TreeNode</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> hash<span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">K</span> key<span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">V</span> val<span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">Node</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">K</span><span class=\\"token punctuation\\">,</span><span class=\\"token class-name\\">V</span><span class=\\"token punctuation\\">&gt;</span></span> next<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">super</span><span class=\\"token punctuation\\">(</span>hash<span class=\\"token punctuation\\">,</span> key<span class=\\"token punctuation\\">,</span> val<span class=\\"token punctuation\\">,</span> next<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span><span class=\\"token punctuation\\">.</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{n as data};
