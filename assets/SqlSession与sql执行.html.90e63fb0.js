import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c,d as p,a as s,b as n,e as a,r as l}from"./app.4001f435.js";const u={},i=a(`<blockquote><p>\u4F7F\u7528 MyBatis \u7684\u4E3B\u8981 Java \u63A5\u53E3\u5C31\u662F SqlSession\u3002\u4F60\u53EF\u4EE5\u901A\u8FC7\u8FD9\u4E2A\u63A5\u53E3\u6765\u6267\u884C\u547D\u4EE4\uFF0C\u83B7\u53D6\u6620\u5C04\u5668\u5B9E\u4F8B\u548C\u7BA1\u7406\u4E8B\u52A1\u3002</p></blockquote><p>\u901A\u8FC7\u524D\u51E0\u7BC7\u6587\u7AE0\u7684\u5206\u6790\uFF0C<code>SqlSessionFactoryBuilder</code>\u8C03\u7528\u5176<code>build</code>\u65B9\u6CD5\u521B\u5EFA\u4E00\u4E2ASqlSession\u5DE5\u5382-<code>SqlSessionFactory</code>\u5BF9\u8C61\u3002\u4E4B\u540E\u6211\u4EEC\u901A\u8FC7\u5DE5\u5382\u7C7B\u7684<code>openSession</code>\u65B9\u6CD5\u53EF\u4EE5\u83B7\u53D6\u5230<code>SqlSession</code>\u3002</p><h2 id="sqlsession\u521D\u59CB\u5316" tabindex="-1"><a class="header-anchor" href="#sqlsession\u521D\u59CB\u5316" aria-hidden="true">#</a> SqlSession\u521D\u59CB\u5316</h2><p><code>openSession</code>\u65B9\u6CD5\u6709\u5982\u4E0B\u7684\u91CD\u8F7D\u65B9\u6CD5\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>  <span class="token class-name">SqlSession</span> <span class="token function">openSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token class-name">SqlSession</span> <span class="token function">openSession</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> autoCommit<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token class-name">SqlSession</span> <span class="token function">openSession</span><span class="token punctuation">(</span><span class="token class-name">Connection</span> connection<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token class-name">SqlSession</span> <span class="token function">openSession</span><span class="token punctuation">(</span><span class="token class-name">TransactionIsolationLevel</span> level<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token class-name">SqlSession</span> <span class="token function">openSession</span><span class="token punctuation">(</span><span class="token class-name">ExecutorType</span> execType<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token class-name">SqlSession</span> <span class="token function">openSession</span><span class="token punctuation">(</span><span class="token class-name">ExecutorType</span> execType<span class="token punctuation">,</span> <span class="token keyword">boolean</span> autoCommit<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token class-name">SqlSession</span> <span class="token function">openSession</span><span class="token punctuation">(</span><span class="token class-name">ExecutorType</span> execType<span class="token punctuation">,</span> <span class="token class-name">TransactionIsolationLevel</span> level<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token class-name">SqlSession</span> <span class="token function">openSession</span><span class="token punctuation">(</span><span class="token class-name">ExecutorType</span> execType<span class="token punctuation">,</span> <span class="token class-name">Connection</span> connection<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F60\u53EF\u4EE5\u6307\u5B9A\u662F\u5426\u81EA\u52A8\u63D0\u4EA4\uFF0C\u91CD\u65B0\u8BBE\u7F6E\u8FDE\u63A5\uFF0C\u91CD\u7F6E\u9694\u79BB\u7EA7\u522B\uFF0C\u8BBE\u5B9A\u6267\u884C\u5668\u6765\u5B9A\u5236\u5316\uFF08\u8986\u76D6mybatis\u914D\u7F6E\uFF09\u4F60\u7684SqlSession\u3002</p><p><code>SqlSessionFactoryBuilder.build</code>\u65B9\u6CD5\u6307\u5B9A\u7684\u662F<code>DefaultSqlSessionFactory</code>\u7C7B\u3002 DefaultSqlSessionFactory\u4E2D\u7684<code>openSession()</code>\u4EE3\u7801\u4E3A\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>  <span class="token keyword">public</span> <span class="token class-name">SqlSession</span> <span class="token function">openSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">openSessionFromDataSource</span><span class="token punctuation">(</span>configuration<span class="token punctuation">.</span><span class="token function">getDefaultExecutorType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">private</span> <span class="token class-name">SqlSession</span> <span class="token function">openSessionFromDataSource</span><span class="token punctuation">(</span><span class="token class-name">ExecutorType</span> execType<span class="token punctuation">,</span> <span class="token class-name">TransactionIsolationLevel</span> level<span class="token punctuation">,</span> <span class="token keyword">boolean</span> autoCommit<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Transaction</span> tx <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token keyword">final</span> <span class="token class-name">Environment</span> environment <span class="token operator">=</span> configuration<span class="token punctuation">.</span><span class="token function">getEnvironment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">final</span> <span class="token class-name">TransactionFactory</span> transactionFactory <span class="token operator">=</span> <span class="token function">getTransactionFactoryFromEnvironment</span><span class="token punctuation">(</span>environment<span class="token punctuation">)</span><span class="token punctuation">;</span>
      tx <span class="token operator">=</span> transactionFactory<span class="token punctuation">.</span><span class="token function">newTransaction</span><span class="token punctuation">(</span>environment<span class="token punctuation">.</span><span class="token function">getDataSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> level<span class="token punctuation">,</span> autoCommit<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">final</span> <span class="token class-name">Executor</span> executor <span class="token operator">=</span> configuration<span class="token punctuation">.</span><span class="token function">newExecutor</span><span class="token punctuation">(</span>tx<span class="token punctuation">,</span> execType<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">DefaultSqlSession</span><span class="token punctuation">(</span>configuration<span class="token punctuation">,</span> executor<span class="token punctuation">,</span> autoCommit<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u51FA\u73B0\u5F02\u5E38\u7684\u65F6\u5019\u8981\u5173\u95ED\u4E8B\u52A1, \u5B9E\u9645\u5173\u95ED\u7684\u662F\u8FDE\u63A5 Connection</span>
      <span class="token function">closeTransaction</span><span class="token punctuation">(</span>tx<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// may have fetched a connection so lets call close()</span>
      <span class="token keyword">throw</span> <span class="token class-name">ExceptionFactory</span><span class="token punctuation">.</span><span class="token function">wrapException</span><span class="token punctuation">(</span><span class="token string">&quot;Error opening session.  Cause: &quot;</span> <span class="token operator">+</span> e<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
      <span class="token class-name">ErrorContext</span><span class="token punctuation">.</span><span class="token function">instance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u521B\u5EFA<code>DefaultSqlSession</code>\u9700\u89813\u4E2A\u53C2\u6570\uFF1A</p><ul><li>\u914D\u7F6E\u7C7B\uFF1A<code>Configuration</code></li><li>\u6267\u884C\u5668\uFF1A<code>Executor</code></li><li>\u662F\u5426\u81EA\u52A8\u63D0\u4EA4\uFF08\u9ED8\u8BA4\u4E3A\u975E\u81EA\u52A8\u63D0\u4EA4\uFF09</li></ul><h2 id="\u4E8B\u52A1\u7684\u521D\u59CB\u5316" tabindex="-1"><a class="header-anchor" href="#\u4E8B\u52A1\u7684\u521D\u59CB\u5316" aria-hidden="true">#</a> \u4E8B\u52A1\u7684\u521D\u59CB\u5316</h2><p>\u5176\u4E2D\u6267\u884C\u5668Executor\u7684\u521B\u5EFA\u9700\u8981\u4F9D\u8D56\u4E8E\uFF1A</p><ul><li>\u4E8B\u52A1<code>Transaction</code>\uFF1A\u4E8B\u52A1\u9700\u8981\u4ECE\u4E8B\u52A1\u5DE5\u5382<code>TransactionFactory</code>\u8FDB\u884C\u521B\u5EFA\uFF0C\u800C\u4E8B\u52A1\u5DE5\u5382\u7684\u521B\u5EFA\u9700\u8981\u6839\u636E\u73AF\u5883\u4FE1\u606F\u914D\u7F6E\uFF08Environment\uFF09\uFF0C \u5F53<code>Environment</code>\u5BF9\u8C61\u4E0D\u5B58\u5728\u6216\u8005\u6CA1\u6709\u914D\u7F6E\u81EA\u5B9A\u4E49\u81EA\u5B9A\u4E49\u7684\u4E8B\u52A1\u5DE5\u5382\uFF0C\u5219\u4F7F\u7528<code>ManagedTransactionFactory</code>\u4F5C\u4E3A\u4E8B\u52A1\u5DE5\u5382\u7C7B \u5426\u5219\u4ECE<code>Environment</code>\u914D\u7F6E\u4E2D\u83B7\u53D6\u4E8B\u52A1\u5DE5\u5382\u5BF9\u8C61\u3002</li><li>\u6267\u884C\u5668\u7C7B\u578B\uFF08mybatis\u914D\u7F6E\u4E2D\u7684defaultExecutorType\uFF0C\u53EF\u4EE5\u6307\u5B9A\u4E3A\uFF1ASIMPLE\uFF08\u666E\u901A\u7684\u6267\u884C\u5668\uFF09\uFF1BREUSE\uFF08\u6267\u884C\u5668\u4F1A\u91CD\u7528\u9884\u5904\u7406\u8BED\u53E5\uFF08PreparedStatement\uFF09\uFF09\uFF1B BATCH\uFF08\u6267\u884C\u5668\u4E0D\u4EC5\u91CD\u7528\u8BED\u53E5\u8FD8\u4F1A\u6267\u884C\u6279\u91CF\u66F4\u65B0\uFF09\u3002\uFF09</li></ul>`,13),k=a(`<b>\u5173\u4E8E\u4E8B\u52A1\u548C\u4E8B\u52A1\u5DE5\u5382\u505A\u4E9B\u5177\u4F53\u7684\u8BF4\u660E\uFF1A</b><p><code>TransactionFactory</code>\u7684<code>newTransaction</code>\u65B9\u6CD5\u7528\u4E8E\u83B7\u53D6\u4E8B\u52A1<code>Transaction</code>\u5BF9\u8C61. \u4E0A\u9762\u7684\u4EE3\u7801\u4E2D\u65B9\u6CD5\u4E2D\u4F20\u5165\u4E863\u4E2A\u53C2\u6570:</p><ul><li>\u6570\u636E\u6E90</li><li>\u9694\u79BB\u7EA7\u522B</li><li>\u662F\u5426\u81EA\u52A8\u63D0\u4EA4</li></ul><p><code>Transaction</code>\u662F\u4E2A\u63A5\u53E3, \u5176\u5B9E\u73B0\u4E3A<code>ManagedTransaction</code>.</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>  <span class="token keyword">public</span> <span class="token class-name">Transaction</span> <span class="token function">newTransaction</span><span class="token punctuation">(</span><span class="token class-name">DataSource</span> ds<span class="token punctuation">,</span> <span class="token class-name">TransactionIsolationLevel</span> level<span class="token punctuation">,</span> <span class="token keyword">boolean</span> autoCommit<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Silently ignores autocommit and isolation level, as managed transactions are entirely</span>
    <span class="token comment">// controlled by an external manager.  It&#39;s silently ignored so that</span>
    <span class="token comment">// code remains portable between managed and unmanaged configurations.</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ManagedTransaction</span><span class="token punctuation">(</span>ds<span class="token punctuation">,</span> level<span class="token punctuation">,</span> closeConnection<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>ManagedTransaction</code>\u4E2D\u6709\u4EE5\u4E0B\u5C5E\u6027\u5B9A\u4E49:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>  <span class="token keyword">private</span> <span class="token class-name">DataSource</span> dataSource<span class="token punctuation">;</span>
  <span class="token keyword">private</span> <span class="token class-name">TransactionIsolationLevel</span> level<span class="token punctuation">;</span>
  <span class="token keyword">private</span> <span class="token class-name">Connection</span> connection<span class="token punctuation">;</span>
  <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> closeConnection<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u7684\u5BF9\u8C61\u521B\u5EFA\u4E2D\u7ED9\u5B9A\u4E86\u6570\u636E\u6E90, \u4E8B\u52A1\u9694\u79BB\u7EA7\u522B, \u662F\u5426\u81EA\u52A8\u63D0\u4EA4. connection\u5E76\u672A\u8D4B\u503C, \u5176\u503C\u53EF\u4EE5\u4ECEdataSource\u4E2D\u83B7\u53D6.</p><h2 id="sql\u7684\u6267\u884C" tabindex="-1"><a class="header-anchor" href="#sql\u7684\u6267\u884C" aria-hidden="true">#</a> sql\u7684\u6267\u884C</h2><p>SqlSession\u63A5\u53E3\u53EF\u4EE5\u7528\u6765\u6267\u884C\u547D\u4EE4\uFF0C\u83B7\u53D6\u6620\u5C04\u5668\u5B9E\u4F8B\u548C\u7BA1\u7406\u4E8B\u52A1\u3002</p><blockquote><p>\u4F7F\u7528sqlSession\u6267\u884Csql\u6709\u4E24\u79CD\u65B9\u5F0F, 1: \u6307\u5B9A\u552F\u4E00\u6807\u8BC6 2: \u901A\u8FC7\u63A5\u53E3\u4EE3\u7406\u8C03\u7528\u65B9\u6CD5</p></blockquote><h3 id="\u57FA\u4E8E\u552F\u4E00\u6807\u8BC6\u7684sql\u6267\u884C" tabindex="-1"><a class="header-anchor" href="#\u57FA\u4E8E\u552F\u4E00\u6807\u8BC6\u7684sql\u6267\u884C" aria-hidden="true">#</a> \u57FA\u4E8E\u552F\u4E00\u6807\u8BC6\u7684sql\u6267\u884C</h3><p>\u73B0\u5728\u4EE5\u4E0B\u9762\u7684\u4EE3\u7801\u4E3A\u4F8B, \u770B\u4E00\u4E0Bsql\u8BED\u53E5\u662F\u5982\u4F55\u6267\u884C\u7684.</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> paramMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
paramMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;userId&quot;</span><span class="token punctuation">,</span> <span class="token number">1L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
paramMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;roomId&quot;</span><span class="token punctuation">,</span> <span class="token number">1L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
sqlSession<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span><span class="token string">&quot;com.nikola.mybatis.mapper.RoomInfoMapper.selectRoomChatInfo&quot;</span><span class="token punctuation">,</span> paramMap<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>selectList</code>\u65B9\u6CD5\u7684\u5B9A\u4E49\u5982\u4E0B, <code>RowBounds</code>\u662F\u5BF9sql\u6267\u884C\u7ED3\u679C\u5206\u9875\u7684\u5B9E\u73B0\u3002 \u6307\u5B9A\u4E86\u504F\u79FB\u91CF\u548C\u7ED3\u679C\u6570\u91CF, \u9ED8\u8BA4\u504F\u79FB\u91CF\u4E3A0, \u7ED3\u679C\u6570\u91CF\u4E3AInteger.MAX_VALUE\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token function">selectList</span><span class="token punctuation">(</span><span class="token class-name">String</span> statement<span class="token punctuation">,</span> <span class="token class-name">Object</span> parameter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span>statement<span class="token punctuation">,</span> parameter<span class="token punctuation">,</span> <span class="token class-name">RowBounds</span><span class="token punctuation">.</span><span class="token constant">DEFAULT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token function">selectList</span><span class="token punctuation">(</span><span class="token class-name">String</span> statement<span class="token punctuation">,</span> <span class="token class-name">Object</span> parameter<span class="token punctuation">,</span> <span class="token class-name">RowBounds</span> rowBounds<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u6211\u4EEC\u4F20\u5165\u7684statement\u7684\u5168\u9650\u5B9A\u8DEF\u5F84\uFF0C\u5B9E\u9645\u4E0A\u662FMappedStatement\u7684id\uFF0C</span>
      <span class="token comment">// getMappedStatement\u65B9\u6CD5\u5C31\u662F\u901A\u8FC7id\u4ECEconfiguration\u4E2D\u83B7\u53D6MappedStatement\u5BF9\u8C61</span>
      <span class="token class-name">MappedStatement</span> ms <span class="token operator">=</span> configuration<span class="token punctuation">.</span><span class="token function">getMappedStatement</span><span class="token punctuation">(</span>statement<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> executor<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>ms<span class="token punctuation">,</span> <span class="token function">wrapCollection</span><span class="token punctuation">(</span>parameter<span class="token punctuation">)</span><span class="token punctuation">,</span> rowBounds<span class="token punctuation">,</span> <span class="token class-name">Executor</span><span class="token punctuation">.</span><span class="token constant">NO_RESULT_HANDLER</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token class-name">ExceptionFactory</span><span class="token punctuation">.</span><span class="token function">wrapException</span><span class="token punctuation">(</span><span class="token string">&quot;Error querying database.  Cause: &quot;</span> <span class="token operator">+</span> e<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
      <span class="token class-name">ErrorContext</span><span class="token punctuation">.</span><span class="token function">instance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6267\u884C\u5668<code>Executor</code>\u662F\u547D\u4EE4\u7684\u6267\u884C\u8005\u3002\u6267\u884C\u5668\u4E0D\u662F\u76F4\u63A5\u6267\u884Csql, \u800C\u662F\u9700\u8981\u901A\u8FC7<code>BoundSql</code>, \u83B7\u53D6sql\u4FE1\u606F\u7684\u5C01\u88C5, \u6BD4\u5982: sql\u8BED\u53E5, \u5165\u53C2\u4FE1\u606F\u7B49.</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>  <span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token function">query</span><span class="token punctuation">(</span><span class="token class-name">MappedStatement</span> ms<span class="token punctuation">,</span> <span class="token class-name">Object</span> parameter<span class="token punctuation">,</span> <span class="token class-name">RowBounds</span> rowBounds<span class="token punctuation">,</span> <span class="token class-name">ResultHandler</span> resultHandler<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SQLException</span> <span class="token punctuation">{</span>
    <span class="token class-name">BoundSql</span> boundSql <span class="token operator">=</span> ms<span class="token punctuation">.</span><span class="token function">getBoundSql</span><span class="token punctuation">(</span>parameter<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// CacheKey\u7528\u4E8E\u4ECE\u672C\u5730\u7F13\u5B58\u4E2D\u83B7\u53D6\u67E5\u8BE2\u7ED3\u679C.</span>
    <span class="token class-name">CacheKey</span> key <span class="token operator">=</span> <span class="token function">createCacheKey</span><span class="token punctuation">(</span>ms<span class="token punctuation">,</span> parameter<span class="token punctuation">,</span> rowBounds<span class="token punctuation">,</span> boundSql<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">query</span><span class="token punctuation">(</span>ms<span class="token punctuation">,</span> parameter<span class="token punctuation">,</span> rowBounds<span class="token punctuation">,</span> resultHandler<span class="token punctuation">,</span> key<span class="token punctuation">,</span> boundSql<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>query\u65B9\u6CD5\u6700\u7EC8\u662F\u8C03\u7528<code>doQuery</code>\u5B9E\u73B0\u7684sql\u64CD\u4F5C, \u9996\u5148\u901A\u8FC7<code>newStatementHandler</code>\u5B9E\u4F8B\u5316<code>StatementHandler</code>, \u8BE5\u5BF9\u8C61\u7528\u4E8E\u751F\u6210<code>Statement</code>\u5BF9\u8C61, \u5E76\u5BF9\u5176\u53C2\u6570\u8FDB\u884C\u8BBE\u7F6E. <code>handler.query</code>\u4E2D\u8C03\u7528statement\u7684execute\u65B9\u6CD5\u6267\u884Csql, \u5E76\u901A\u8FC7<code>resultHandler</code>\u5904\u7406\u7ED3\u679C\u96C6.</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>  <span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token function">doQuery</span><span class="token punctuation">(</span><span class="token class-name">MappedStatement</span> ms<span class="token punctuation">,</span> <span class="token class-name">Object</span> parameter<span class="token punctuation">,</span> <span class="token class-name">RowBounds</span> rowBounds<span class="token punctuation">,</span> <span class="token class-name">ResultHandler</span> resultHandler<span class="token punctuation">,</span> <span class="token class-name">BoundSql</span> boundSql<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SQLException</span> <span class="token punctuation">{</span>
    <span class="token class-name">Statement</span> stmt <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token class-name">Configuration</span> configuration <span class="token operator">=</span> ms<span class="token punctuation">.</span><span class="token function">getConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">StatementHandler</span> handler <span class="token operator">=</span> configuration<span class="token punctuation">.</span><span class="token function">newStatementHandler</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">,</span> ms<span class="token punctuation">,</span> parameter<span class="token punctuation">,</span> rowBounds<span class="token punctuation">,</span> resultHandler<span class="token punctuation">,</span> boundSql<span class="token punctuation">)</span><span class="token punctuation">;</span>
      stmt <span class="token operator">=</span> <span class="token function">prepareStatement</span><span class="token punctuation">(</span>handler<span class="token punctuation">,</span> ms<span class="token punctuation">.</span><span class="token function">getStatementLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> handler<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>stmt<span class="token punctuation">,</span> resultHandler<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
      <span class="token function">closeStatement</span><span class="token punctuation">(</span>stmt<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u57FA\u4E8E\u63A5\u53E3\u4EE3\u7406\u7684sql\u6267\u884C" tabindex="-1"><a class="header-anchor" href="#\u57FA\u4E8E\u63A5\u53E3\u4EE3\u7406\u7684sql\u6267\u884C" aria-hidden="true">#</a> \u57FA\u4E8E\u63A5\u53E3\u4EE3\u7406\u7684sql\u6267\u884C</h3><p>\u4EE5\u4E0B\u9762\u4EE3\u7801\u4E3A\u4F8B:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">SqlSessionFactory</span> sqlSessionFactory <span class="token operator">=</span> <span class="token class-name">SqlUtils</span><span class="token punctuation">.</span><span class="token function">getSqlSessionFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">SqlSession</span> sqlSession <span class="token operator">=</span> sqlSessionFactory<span class="token punctuation">.</span><span class="token function">openSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">RoomInfoMapper</span> mapper <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">RoomInfoMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">ChatUser</span> chatUser <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">selectRoomChatInfoByUserIdAndRoomId</span><span class="token punctuation">(</span><span class="token number">1L</span><span class="token punctuation">,</span> <span class="token number">1L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>sqlSession.getMapper</code>\u65B9\u6CD5\u5B9E\u9645\u4E0A\u662F\u4ECE<code>Configuration</code>\u5B9E\u4F8B\u4E2D\u83B7\u53D6\u4EE3\u7406\u5BF9\u8C61\u3002\u5176\u65B9\u6CD5\u662F<code>mapperRegistry</code>\u7684<code>getMapper</code>\u65B9\u6CD5\u3002</p><p><code>mapperRegistry.getMapper</code>\u9996\u5148\u83B7\u53D6mapper\u4EE3\u7406\u5DE5\u5382<code>MapperProxyFactory</code>\uFF0C\u901A\u8FC7\u5DE5\u5382\u65B9\u6CD5<code>newInstance</code>\u83B7\u53D6\u4EE3\u7406\u5BF9\u8C61\u3002</p><p><code>knownMappers</code>\u662Fmybatis xml\u914D\u7F6E\u89E3\u6790\u65F6\u626B\u63CF\u63A5\u53E3\u6216\u8005\u5305\u7684\u65F6\u5019\uFF0C\u7528\u4E8E\u7BA1\u7406\u8FD9\u4E9Bmapper\u63A5\u53E3\u7684\u5BB9\u5668\u3002\u5176\u5B9A\u4E49\u4F4D<code>Map&lt;Class&lt;?&gt;, MapperProxyFactory&lt;?&gt;&gt; knownMappers = new HashMap&lt;&gt;();</code>\u3002\u5176\u4E2D<code>MapperProxyFactory</code>\u901A\u8FC7\u4F20\u5165\u5F53\u524D\u63A5\u53E3\u7C7B\u8FDB\u884C\u5B9E\u4F8B\u5316\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>  <span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">T</span> <span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> type<span class="token punctuation">,</span> <span class="token class-name">SqlSession</span> sqlSession<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token class-name">MapperProxyFactory</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> mapperProxyFactory <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">MapperProxyFactory</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> knownMappers<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>mapperProxyFactory <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BindingException</span><span class="token punctuation">(</span><span class="token string">&quot;Type &quot;</span> <span class="token operator">+</span> type <span class="token operator">+</span> <span class="token string">&quot; is not known to the MapperRegistry.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> mapperProxyFactory<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span>sqlSession<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BindingException</span><span class="token punctuation">(</span><span class="token string">&quot;Error getting mapper instance. Cause: &quot;</span> <span class="token operator">+</span> e<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u4EE3\u7406\u5DE5\u5382\u7684newinstance" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7406\u5DE5\u5382\u7684newinstance" aria-hidden="true">#</a> \u4EE3\u7406\u5DE5\u5382\u7684newInstance</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>
  <span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">&quot;unchecked&quot;</span><span class="token punctuation">)</span>
  <span class="token keyword">protected</span> <span class="token class-name">T</span> <span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token class-name">MapperProxy</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> mapperProxy<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">)</span> <span class="token class-name">Proxy</span><span class="token punctuation">.</span><span class="token function">newProxyInstance</span><span class="token punctuation">(</span>mapperInterface<span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> mapperInterface <span class="token punctuation">}</span><span class="token punctuation">,</span> mapperProxy<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token class-name">T</span> <span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token class-name">SqlSession</span> sqlSession<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token class-name">MapperProxy</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> mapperProxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MapperProxy</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>sqlSession<span class="token punctuation">,</span> mapperInterface<span class="token punctuation">,</span> methodCache<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">newInstance</span><span class="token punctuation">(</span>mapperProxy<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>\u9996\u5148\u901A\u8FC7<code>sqlSession</code>\uFF0C <code>mapperInterface</code>\uFF08\u5F53\u524D\u63A5\u53E3\u7C7B\uFF09\uFF0C<code>methodCache</code>\u521D\u59CB\u5316<code>MapperProxy</code>\u5B9E\u4F8B\u3002</li><li>\u4F7F\u7528jdk\u52A8\u6001\u4EE3\u7406\u521B\u5EFA\u4EE3\u7406\u5BF9\u8C61\u3002\u5173\u4E8Ejdk\u52A8\u6001\u4EE3\u7406\u4E4B\u524D\u6709\u5206\u6790\uFF0C\u6B64\u5904\u6309\u4E0B\u4E0D\u8868\u3002\u8BF7\u79FB\u6B65<img src="https://blog.nikolazhang.top/docs/springboot/\u4EE3\u7406/#\u52A8\u6001\u4EE3\u7406\u6E90\u7801\u5206\u6790" alt="\u52A8\u6001\u4EE3\u7406\u5206\u6790" loading="lazy"></li></ol><p>\u6211\u4EEC\u9700\u8981\u5173\u6CE8\u7684\u70B9\u5728\u4E8E<code>MapperProxy</code>\u4E2D\u7684<code>invoke</code>\u65B9\u6CD5\uFF08jdk\u52A8\u6001\u4EE3\u7406\u4E2D\u4EE3\u7406\u7C7B\u9700\u8981\u5B9E\u73B0<code>InvocationHandler</code>\u63A5\u53E3\u7684<code>invoke</code>\u65B9\u6CD5\uFF09\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">Object</span> proxy<span class="token punctuation">,</span> <span class="token class-name">Method</span> method<span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679C\u65B9\u6CD5\u4E3AObject.class\u4E2D\u7684\uFF0C\u5219\u76F4\u63A5\u4F7F\u7528\u5F53\u524D\u7684\u4EE3\u7406\u5BF9\u8C61\u6267\u884C\u3002\u660E\u663E\u6211\u4EEC\u7684mapper\u63A5\u53E3\u4E0D\u5C5E\u4E8E\u8FD9\u79CD</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>method<span class="token punctuation">.</span><span class="token function">getDeclaringClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> method<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">cachedInvoker</span><span class="token punctuation">(</span>method<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>proxy<span class="token punctuation">,</span> method<span class="token punctuation">,</span> args<span class="token punctuation">,</span> sqlSession<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token class-name">ExceptionUtil</span><span class="token punctuation">.</span><span class="token function">unwrapThrowable</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>cachedInvoker</code>\u65B9\u6CD5\u7528\u4E8E\u83B7\u53D6mapper\u65B9\u6CD5\u6267\u884C\u7684\u8C03\u7528<code>MapperMethodInvoker</code>\u3002</p><ul><li>\u5982\u679C\u5F53\u524D\u65B9\u6CD5\u4E3A<code>default</code>\u4FEE\u9970\u7684\u63A5\u53E3\u65B9\u6CD5\uFF0C\u5219\u4F7F\u7528<code>DefaultMethodInvoker</code>\u8FD9\u79CD\u65B9\u5F0F\u3002</li><li>\u5982\u679C\u662F\u63A5\u53E3\uFF0C\u5219\u4F7F\u7528<code>PlainMethodInvoker</code>\u3002</li></ul><p><code>PlainMethodInvoker</code>\u8FD9\u79CD\u8C03\u7528\u65B9\u5F0F\u9700\u8981\u63D0\u4F9B<code>MapperMethod</code>\u4F5C\u4E3A\u53C2\u6570\u3002<code>MapperMethod</code>\u5305\u542B\u4E24\u4E2A\u53C2\u6570<code>SqlCommand</code>\u548C<code>MethodSignature</code>. <code>SqlCommand</code>\u8868\u793A\u5F53\u524D\u65B9\u6CD5\u5BF9\u5E94\u7684sql\u8BED\u53E5\u7684\u7C7B\u578B\u548Cid\u3002<code>MethodSignature</code>\u5219\u662F\u65B9\u6CD5\u7684\u5177\u4F53\u5177\u4F53\u63CF\u8FF0\uFF08\u662F\u5426\u8FD4\u56DEmap, \u662F\u5426\u8FD4\u56DE\u96C6\u5408\uFF0C\u53C2\u6570\u89E3\u6790\u5668ParamNameResolver\u7B49\uFF09\u3002</p>`,35),r={class:"custom-container details"},d=s("summary",null,"ParamNameResolver\u7684\u6784\u9020\u5668",-1),m=s("p",null,[n("\u7528\u4E8E\u89E3\u6790\u65B9\u6CD5\u4E2D\u7684\u53C2\u6570 \u4F18\u5148\u4F7F\u7528@Param\u4E2D\u7684\u53C2\u6570\u540D\uFF0C"),s("br"),n(" \u5982\u679C\u6CA1\u6709\u8BE5\u6CE8\u89E3\u5219\u770B\u914D\u7F6E\u4E2D"),s("code",null,"useActualParamName"),n("\u662F\u5426\u5141\u8BB8\uFF0C"),s("br"),n(" \u5982\u679C\u5141\u8BB8\u5219\u4F7F\u7528\u65B9\u6CD5\u4E2D\u7684\u53C2\u6570\u540D\uFF0C\u5426\u5219\u4F7F\u7528\u65B9\u6CD5\u53C2\u6570\u7684\u7D22\u5F15\u4F5C\u4E3A\u53C2\u6570\u540D\u3002")],-1),v=s("p",null,[n("\u89E3\u6790\u7684\u7ED3\u679C\u4F1A\u901A\u8FC7"),s("code",null,"SortedMap<Integer, String> names"),n("\u5B58\u653E\u3002")],-1),b=s("code",null,"names",-1),y=s("p",null,[n("\u6700\u7EC8\u7684\u53C2\u6570\u5217\u8868\u662F\u901A\u8FC7"),s("code",null,"getNamedParams"),n("\u65B9\u6CD5\u83B7\u53D6\u7684\u3002"),s("code",null,"getNamedParams"),n("\u540C\u65F6\u4E5F\u63D0\u4F9B\u4E86\u53C2\u6570\u5BF9\u5E94\u7684\u503C\u3002")],-1),g=a(`<p><code>PlainMethodInvoker</code>\u5BF9\u8C61\u8C03\u7528<code>invoke</code>\u65B9\u6CD5\u5B9E\u9645\u662F\u901A\u8FC7\u4E0A\u9762\u8BF4\u7684<code>MapperMethod</code>\u8C03\u7528<code>execute</code>\u65B9\u6CD5\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">Object</span> proxy<span class="token punctuation">,</span> <span class="token class-name">Method</span> method<span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">,</span> <span class="token class-name">SqlSession</span> sqlSession<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> mapperMethod<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>sqlSession<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728<code>execute</code>\u65B9\u6CD5\u4E2D\u5BF9\u4E0D\u540C\u7684\u7C7B\u578B\u8FDB\u884C\u5206\u522B\u5904\u7406</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">execute</span><span class="token punctuation">(</span><span class="token class-name">SqlSession</span> sqlSession<span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Object</span> result<span class="token punctuation">;</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>command<span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">case</span> <span class="token constant">INSERT</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token class-name">Object</span> param <span class="token operator">=</span> method<span class="token punctuation">.</span><span class="token function">convertArgsToSqlCommandParam</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
        result <span class="token operator">=</span> <span class="token function">rowCountResult</span><span class="token punctuation">(</span>sqlSession<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>command<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> param<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">case</span> <span class="token constant">UPDATE</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token class-name">Object</span> param <span class="token operator">=</span> method<span class="token punctuation">.</span><span class="token function">convertArgsToSqlCommandParam</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
        result <span class="token operator">=</span> <span class="token function">rowCountResult</span><span class="token punctuation">(</span>sqlSession<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>command<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> param<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">case</span> <span class="token constant">DELETE</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token class-name">Object</span> param <span class="token operator">=</span> method<span class="token punctuation">.</span><span class="token function">convertArgsToSqlCommandParam</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
        result <span class="token operator">=</span> <span class="token function">rowCountResult</span><span class="token punctuation">(</span>sqlSession<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>command<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> param<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">case</span> <span class="token constant">SELECT</span><span class="token operator">:</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>method<span class="token punctuation">.</span><span class="token function">returnsVoid</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> method<span class="token punctuation">.</span><span class="token function">hasResultHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">executeWithResultHandler</span><span class="token punctuation">(</span>sqlSession<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
          result <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>method<span class="token punctuation">.</span><span class="token function">returnsMany</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          result <span class="token operator">=</span> <span class="token function">executeForMany</span><span class="token punctuation">(</span>sqlSession<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>method<span class="token punctuation">.</span><span class="token function">returnsMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          result <span class="token operator">=</span> <span class="token function">executeForMap</span><span class="token punctuation">(</span>sqlSession<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>method<span class="token punctuation">.</span><span class="token function">returnsCursor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          result <span class="token operator">=</span> <span class="token function">executeForCursor</span><span class="token punctuation">(</span>sqlSession<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          <span class="token class-name">Object</span> param <span class="token operator">=</span> method<span class="token punctuation">.</span><span class="token function">convertArgsToSqlCommandParam</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
          result <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">selectOne</span><span class="token punctuation">(</span>command<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> param<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>method<span class="token punctuation">.</span><span class="token function">returnsOptional</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
              <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>result <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token operator">!</span>method<span class="token punctuation">.</span><span class="token function">getReturnType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            result <span class="token operator">=</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token constant">FLUSH</span><span class="token operator">:</span>
        result <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">flushStatements</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token keyword">default</span><span class="token operator">:</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BindingException</span><span class="token punctuation">(</span><span class="token string">&quot;Unknown execution method for: &quot;</span> <span class="token operator">+</span> command<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> method<span class="token punctuation">.</span><span class="token function">getReturnType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isPrimitive</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>method<span class="token punctuation">.</span><span class="token function">returnsVoid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BindingException</span><span class="token punctuation">(</span><span class="token string">&quot;Mapper method &#39;&quot;</span> <span class="token operator">+</span> command<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
          <span class="token operator">+</span> <span class="token string">&quot; attempted to return null from a method with a primitive return type (&quot;</span> <span class="token operator">+</span> method<span class="token punctuation">.</span><span class="token function">getReturnType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;).&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u7684\u65B9\u6CD5\u4E2D\uFF0C<code>FLUSH</code>\u5BF9\u5E94\u7684\u5B9E\u73B0\u5B9E\u9645\u662F\u5173\u95ED<code>Statement</code>\u3002<code>INSERT</code>\u3001<code>UPDATE</code>\u3001<code>SELECT</code>\u3001<code>DELETE</code>\u64CD\u4F5C\u6B65\u9AA4\u5B9E\u9645\u662F\u5DEE\u4E0D\u591A\u7684\u3002\u53EA\u662F<code>SELECT</code>\u56E0\u4E3A\u8FD4\u56DE\u7C7B\u578B\u591A\u79CD\u591A\u6837\u56E0\u6B64\u6709\u5F88\u591A\u4E0D\u540C\u7684\u60C5\u51B5\u3002</p>`,5),w=s("code",null,"INSERT",-1),f=s("code",null,"UPDATE",-1),h=s("code",null,"DELETE",-1),S=s("code",null,"rowCountResult",-1),q=a(`<details class="custom-container details"><summary>\`convertArgsToSqlCommandParam\`</summary><p>\u8FD9\u4E2A\u65B9\u6CD5\u5B9E\u9645\u662F\u8C03\u7528<code>ParamNameResolver</code>\u7684<code>getNamedParams</code>\u65B9\u6CD5\u8FDB\u884C\u5904\u7406\u7684\u3002\u901A\u8FC7\u8BE5\u65B9\u6CD5\u6211\u4EEC\u53EF\u4EE5\u83B7\u53D6\u65B9\u6CD5\u4E2D\u7684\u53C2\u6570\u96C6\u5408\u4EE5\u53CA\u8FD9\u4E9B\u53C2\u6570\u5BF9\u5E94\u7684\u503C\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>  <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">getNamedParams</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token keyword">int</span> paramCount <span class="token operator">=</span> names<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>args <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> paramCount <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>hasParamAnnotation <span class="token operator">&amp;&amp;</span> paramCount <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">Object</span> value <span class="token operator">=</span> args<span class="token punctuation">[</span>names<span class="token punctuation">.</span><span class="token function">firstKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token function">wrapToMapIfCollection</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> useActualParamName <span class="token operator">?</span> names<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">final</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> param <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ParamMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> entry <span class="token operator">:</span> names<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        param<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>entry<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> args<span class="token punctuation">[</span>entry<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// add generic param names (param1, param2, ...)</span>
        <span class="token keyword">final</span> <span class="token class-name">String</span> genericParamName <span class="token operator">=</span> <span class="token constant">GENERIC_NAME_PREFIX</span> <span class="token operator">+</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// ensure not to overwrite parameter named with @Param</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>names<span class="token punctuation">.</span><span class="token function">containsValue</span><span class="token punctuation">(</span>genericParamName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          param<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>genericParamName<span class="token punctuation">,</span> args<span class="token punctuation">[</span>entry<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        i<span class="token operator">++</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> param<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Object</span> <span class="token function">wrapToMapIfCollection</span><span class="token punctuation">(</span><span class="token class-name">Object</span> object<span class="token punctuation">,</span> <span class="token class-name">String</span> actualParamName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>object <span class="token keyword">instanceof</span> <span class="token class-name">Collection</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">ParamMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ParamMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;collection&quot;</span><span class="token punctuation">,</span> object<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>object <span class="token keyword">instanceof</span> <span class="token class-name">List</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;list&quot;</span><span class="token punctuation">,</span> object<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span>actualParamName<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ifPresent</span><span class="token punctuation">(</span>name <span class="token operator">-&gt;</span> map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> object<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> map<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>object <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> object<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">ParamMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ParamMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;array&quot;</span><span class="token punctuation">,</span> object<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span>actualParamName<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ifPresent</span><span class="token punctuation">(</span>name <span class="token operator">-&gt;</span> map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> object<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> map<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> object<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u65B9\u6CD5\u53C2\u6570<code>Object[] args</code>\u7528\u4E8E\u901A\u8FC7\u7D22\u5F15\u83B7\u53D6\u503C\u3002</p><ol><li>\u5982\u679C\u6CA1\u6709\u53C2\u6570\uFF0C\u6700\u7EC8\u7ED3\u679C\u4E3A\u7A7A\u3002</li><li>\u4E0D\u4F7F\u7528<code>@Param</code>\u6CE8\u89E3\uFF0C\u5E76\u4E14\u53EA\u6709\u4E00\u4E2A\u53C2\u6570\u3002\u5982\u679C\u4E3A\u96C6\u5408\u5219\u6839\u636E\u60C5\u51B5\u653E\u5165\u952E<code>collection</code>\u3001<code>list</code>\u3001<code>array</code>\u3002</li><li>\u5BF9\u4E8E\u5176\u4ED6\u60C5\u51B5\uFF0C\u4E00\u65B9\u9762\u4FDD\u7559\u539F\u59CB\u7684<code>names</code>\u4E2D\u7684\u503C\u4F5C\u4E3A\u952E\uFF0C\u53E6\u4E00\u65B9\u9762\u5982\u679C\u6CA1\u6709<code>param</code>+\u7D22\u5F15\u8FD9\u79CD\u53C2\u6570\u540D\u79F0\uFF0C\u5219\u653E\u5165\u5F53\u524D\u7D22\u5F15\u5BF9\u5E94\u7684\u53C2\u6570\u7684<code>param</code>+\u7D22\u5F15\u540D\u79F0\u3002</li></ol></details><details class="custom-container details"><summary>\`rowCountResult\`</summary><p>\u6839\u636E\u65B9\u6CD5\u8FD4\u56DE\u7684\u7C7B\u578B\u4EE5\u53CA\u7ED3\u679C\u6570\u8FD4\u56DE\u671F\u671B\u7684\u7ED3\u679C\u3002\u56E0\u6B64\u6211\u4EEC\u53EF\u4EE5\u8086\u65E0\u5FCC\u60EE\u7684\u8BBE\u7F6E\u63A5\u53E3\u8FD4\u56DEvoid\uFF0Cint\uFF0CInteger\uFF0Clong\uFF0CLong\uFF0Cboolean\uFF0CBoolean\u3002 \u8FD8\u662F\u8981\u518D\u8BF4\u4E00\u4E0B\u53EA\u5BF9<code>INSERT</code>\u3001<code>UPDATE</code>\u3001<code>DELETE</code>\u7C7B\u578B\u6709\u6548\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>  <span class="token keyword">private</span> <span class="token class-name">Object</span> <span class="token function">rowCountResult</span><span class="token punctuation">(</span><span class="token keyword">int</span> rowCount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token class-name">Object</span> result<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>method<span class="token punctuation">.</span><span class="token function">returnsVoid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      result <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>method<span class="token punctuation">.</span><span class="token function">getReturnType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token constant">TYPE</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>method<span class="token punctuation">.</span><span class="token function">getReturnType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      result <span class="token operator">=</span> rowCount<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>method<span class="token punctuation">.</span><span class="token function">getReturnType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token constant">TYPE</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>method<span class="token punctuation">.</span><span class="token function">getReturnType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      result <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span> rowCount<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Boolean</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>method<span class="token punctuation">.</span><span class="token function">getReturnType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token class-name">Boolean</span><span class="token punctuation">.</span><span class="token constant">TYPE</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>method<span class="token punctuation">.</span><span class="token function">getReturnType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      result <span class="token operator">=</span> rowCount <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BindingException</span><span class="token punctuation">(</span><span class="token string">&quot;Mapper method &#39;&quot;</span> <span class="token operator">+</span> command<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;&#39; has an unsupported return type: &quot;</span> <span class="token operator">+</span> method<span class="token punctuation">.</span><span class="token function">getReturnType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="custom-container details"><summary>executeWithResultHandler</summary><p><code>SELECT</code>\u7C7B\u578B\u8FD4\u56DE\u4E3A\u7A7A\u4F7F\u7528<code>executeWithResultHandler</code>\u8FDB\u884C\u5904\u7406\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">executeWithResultHandler</span><span class="token punctuation">(</span><span class="token class-name">SqlSession</span> sqlSession<span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">MappedStatement</span> ms <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">getConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMappedStatement</span><span class="token punctuation">(</span>command<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">StatementType</span><span class="token punctuation">.</span><span class="token constant">CALLABLE</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>ms<span class="token punctuation">.</span><span class="token function">getStatementType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token comment">// \u65B9\u6CD5\u8FD4\u56DE\u4E3Avoid\u65F6, \u4E5F\u9700\u8981\u542B\u6709@ResultMap\u6216\u8005@ResultType\u6307\u5B9A\u8FD4\u56DE\u7ED3\u679C\u6620\u5C04, \u4E3B\u8981\u662F\u8BE5\u65B9\u6CD5\u7684\u6761\u4EF6\u662F</span>
      <span class="token comment">// method.returnsVoid() &amp;&amp; method.hasResultHandler() \u4E5F\u5C31\u662F\u9700\u8981\u901A\u8FC7ResultHandler\u5904\u7406\u7ED3\u679C</span>
      <span class="token operator">&amp;&amp;</span> <span class="token keyword">void</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>ms<span class="token punctuation">.</span><span class="token function">getResultMaps</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BindingException</span><span class="token punctuation">(</span><span class="token string">&quot;method &quot;</span> <span class="token operator">+</span> command<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token operator">+</span> <span class="token string">&quot; needs either a @ResultMap annotation, a @ResultType annotation,&quot;</span>
        <span class="token operator">+</span> <span class="token string">&quot; or a resultType attribute in XML so a ResultHandler can be used as a parameter.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token class-name">Object</span> param <span class="token operator">=</span> method<span class="token punctuation">.</span><span class="token function">convertArgsToSqlCommandParam</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>method<span class="token punctuation">.</span><span class="token function">hasRowBounds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">RowBounds</span> rowBounds <span class="token operator">=</span> method<span class="token punctuation">.</span><span class="token function">extractRowBounds</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    sqlSession<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span>command<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> param<span class="token punctuation">,</span> rowBounds<span class="token punctuation">,</span> method<span class="token punctuation">.</span><span class="token function">extractResultHandler</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    sqlSession<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span>command<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> param<span class="token punctuation">,</span> method<span class="token punctuation">.</span><span class="token function">extractResultHandler</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>method.hasRowBounds()</code>\u7528\u4E8E\u5904\u7406\u542B\u6709\u5206\u9875\u7684\u60C5\u51B5\u3002 <code>method.extractResultHandler</code>\u83B7\u53D6<code>ResultHandler</code>\u5BF9\u8FD4\u56DE\u7ED3\u679C\u8FDB\u884C\u5904\u7406\u3002</p></details><details class="custom-container details"><summary>executeForMany</summary><p>\u8BE5\u65B9\u6CD5\u7528\u4E8E\u5904\u7406\u65B9\u6CD5\u8FD4\u56DE\u7C7B\u578B\u4E3AList\u7684\u60C5\u5F62\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">Object</span> <span class="token function">executeForMany</span><span class="token punctuation">(</span><span class="token class-name">SqlSession</span> sqlSession<span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> result<span class="token punctuation">;</span>
    <span class="token class-name">Object</span> param <span class="token operator">=</span> method<span class="token punctuation">.</span><span class="token function">convertArgsToSqlCommandParam</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>method<span class="token punctuation">.</span><span class="token function">hasRowBounds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">RowBounds</span> rowBounds <span class="token operator">=</span> method<span class="token punctuation">.</span><span class="token function">extractRowBounds</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
      result <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span>command<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> param<span class="token punctuation">,</span> rowBounds<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      result <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span>command<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> param<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// issue #510 Collections &amp; arrays support</span>
    <span class="token comment">// \u63D0\u4F9B\u4E86\u8FD4\u56DE\u4E3ACollection\u548C\u6570\u7EC4\u7684\u7C7B\u578B\u8F6C\u6362</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>method<span class="token punctuation">.</span><span class="token function">getReturnType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>method<span class="token punctuation">.</span><span class="token function">getReturnType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">convertToArray</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">convertToDeclaredCollection</span><span class="token punctuation">(</span>sqlSession<span class="token punctuation">.</span><span class="token function">getConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><p>\u540E\u9762\u7684\u4E24\u79CD\u5C31\u4E0D\u63D0\u4E86\uFF0C\u8FD4\u56DE\u4E3Amap\u7684\u5B9E\u9645\u662F\u8C03\u7528<code>selectMap</code>\u8FDB\u884C\u5904\u7406\uFF1B\u8FD4\u56DE\u4E3A<code>Cursor</code>\u7684\u5B9E\u9645\u901A\u8FC7<code>selectCursor</code>\u8FDB\u884C\u67E5\u8BE2\u3002 \u9664\u4E86\u4EE5\u4E0A\u60C5\u51B5\uFF0C\u90FD\u901A\u8FC7<code>selectOne</code>\u8FDB\u884C\u67E5\u8BE2\u3002</p><h3 id="handlerowvalues\u5904\u7406\u7ED3\u679C" tabindex="-1"><a class="header-anchor" href="#handlerowvalues\u5904\u7406\u7ED3\u679C" aria-hidden="true">#</a> handleRowValues\u5904\u7406\u7ED3\u679C</h3><p><code>handleRowValues</code>\u7528\u4E8E\u5904\u7406\u8FD4\u56DE\u7684\u6BCF\u4E00\u6761\u7ED3\u679C\u3002\u5E76\u4E14\u6839\u636E\u8FD4\u56DE\u7ED3\u679C\u662F\u5426\u542B\u6709\u5D4C\u5957\u5206\u6210\u4E24\u79CD\u65B9\u6CD5<code>handleRowValuesForNestedResultMap</code>\u4EE5\u53CA<code>handleRowValuesForSimpleResultMap</code>\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handleRowValues</span><span class="token punctuation">(</span><span class="token class-name">ResultSetWrapper</span> rsw<span class="token punctuation">,</span> <span class="token class-name">ResultMap</span> resultMap<span class="token punctuation">,</span> <span class="token class-name">ResultHandler</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> resultHandler<span class="token punctuation">,</span> <span class="token class-name">RowBounds</span> rowBounds<span class="token punctuation">,</span> <span class="token class-name">ResultMapping</span> parentMapping<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SQLException</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>resultMap<span class="token punctuation">.</span><span class="token function">hasNestedResultMaps</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">ensureNoRowBounds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">checkResultHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">handleRowValuesForNestedResultMap</span><span class="token punctuation">(</span>rsw<span class="token punctuation">,</span> resultMap<span class="token punctuation">,</span> resultHandler<span class="token punctuation">,</span> rowBounds<span class="token punctuation">,</span> parentMapping<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token function">handleRowValuesForSimpleResultMap</span><span class="token punctuation">(</span>rsw<span class="token punctuation">,</span> resultMap<span class="token punctuation">,</span> resultHandler<span class="token punctuation">,</span> rowBounds<span class="token punctuation">,</span> parentMapping<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="handlerowvaluesforsimpleresultmap" tabindex="-1"><a class="header-anchor" href="#handlerowvaluesforsimpleresultmap" aria-hidden="true">#</a> handleRowValuesForSimpleResultMap</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>  <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">handleRowValuesForSimpleResultMap</span><span class="token punctuation">(</span><span class="token class-name">ResultSetWrapper</span> rsw<span class="token punctuation">,</span> <span class="token class-name">ResultMap</span> resultMap<span class="token punctuation">,</span> <span class="token class-name">ResultHandler</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> resultHandler<span class="token punctuation">,</span> <span class="token class-name">RowBounds</span> rowBounds<span class="token punctuation">,</span> <span class="token class-name">ResultMapping</span> parentMapping<span class="token punctuation">)</span>
      <span class="token keyword">throws</span> <span class="token class-name">SQLException</span> <span class="token punctuation">{</span>
    <span class="token class-name">DefaultResultContext</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> resultContext <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultResultContext</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">ResultSet</span> resultSet <span class="token operator">=</span> rsw<span class="token punctuation">.</span><span class="token function">getResultSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u8DF3\u8FC7RowBounds\u6307\u5B9A\u7684\u504F\u79FB\u91CF\uFF0C\u8DF3\u8FC7offset\u6307\u5B9A\u7684\u884C\u6570\u3002</span>
    <span class="token function">skipRows</span><span class="token punctuation">(</span>resultSet<span class="token punctuation">,</span> rowBounds<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// shouldProcessMoreRows\u7528\u4E8E\u5224\u65AD\u8BFB\u53D6\u91CF\u662F\u5426\u8D85\u8FC7\u4E86RowBounds\u4E2Dlimit\u6307\u5B9A\u7684\u9650\u5236\u6761\u6570</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token function">shouldProcessMoreRows</span><span class="token punctuation">(</span>resultContext<span class="token punctuation">,</span> rowBounds<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>resultSet<span class="token punctuation">.</span><span class="token function">isClosed</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> resultSet<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// resolveDiscriminatedResultMap \u9274\u522B\u5668\u53EF\u4EE5\u6839\u636E\u5C5E\u6027\u4E0D\u540C\u7684\u503C\u6307\u5B9A\u4F7F\u7528\u76F8\u5E94\u7684resultMap</span>
      <span class="token class-name">ResultMap</span> discriminatedResultMap <span class="token operator">=</span> <span class="token function">resolveDiscriminatedResultMap</span><span class="token punctuation">(</span>resultSet<span class="token punctuation">,</span> resultMap<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">Object</span> rowValue <span class="token operator">=</span> <span class="token function">getRowValue</span><span class="token punctuation">(</span>rsw<span class="token punctuation">,</span> discriminatedResultMap<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">storeObject</span><span class="token punctuation">(</span>resultHandler<span class="token punctuation">,</span> resultContext<span class="token punctuation">,</span> rowValue<span class="token punctuation">,</span> parentMapping<span class="token punctuation">,</span> resultSet<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>getRowValue</code>\u662F\u4E00\u4E2A\u975E\u5E38\u91CD\u8981\u7684\u65B9\u6CD5, \u901A\u8FC7\u8BE5\u65B9\u6CD5\u53EF\u4EE5\u5B8C\u6210\u81EA\u52A8\u8D4B\u503C\u4EE5\u53CA\u6307\u5B9A\u7684ResultMap\u8FDB\u884C\u5B57\u6BB5\u8D4B\u503C\u3002\u8FD9\u662F\u6570\u636E\u5E93\u8FD4\u56DE\u7ED3\u679C\u8D4B\u503C\u7ED9java\u5BF9\u8C61\u7684\u6838\u5FC3\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>  <span class="token keyword">private</span> <span class="token class-name">Object</span> <span class="token function">getRowValue</span><span class="token punctuation">(</span><span class="token class-name">ResultSetWrapper</span> rsw<span class="token punctuation">,</span> <span class="token class-name">ResultMap</span> resultMap<span class="token punctuation">,</span> <span class="token class-name">String</span> columnPrefix<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SQLException</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token class-name">ResultLoaderMap</span> lazyLoader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ResultLoaderMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u901A\u8FC7\u53CD\u5C04\u521B\u5EFA\u4E00\u4E2A\u8FD4\u56DE\u7ED3\u679C\u7684\u5BF9\u8C61\u3002</span>
    <span class="token class-name">Object</span> rowValue <span class="token operator">=</span> <span class="token function">createResultObject</span><span class="token punctuation">(</span>rsw<span class="token punctuation">,</span> resultMap<span class="token punctuation">,</span> lazyLoader<span class="token punctuation">,</span> columnPrefix<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>rowValue <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">hasTypeHandlerForResultObject</span><span class="token punctuation">(</span>rsw<span class="token punctuation">,</span> resultMap<span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">final</span> <span class="token class-name">MetaObject</span> metaObject <span class="token operator">=</span> configuration<span class="token punctuation">.</span><span class="token function">newMetaObject</span><span class="token punctuation">(</span>rowValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">boolean</span> foundValues <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>useConstructorMappings<span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">shouldApplyAutomaticMappings</span><span class="token punctuation">(</span>resultMap<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u81EA\u52A8\u8D4B\u503C \u6CE8\u610F\u9700\u8981\u5C06mapUnderscoreToCamelCase\u914D\u7F6E\u8BBE\u7F6E\u4E3Atrue \u4ECE\u800C\u53EF\u4EE5\u8FDB\u884Cjava\u9A7C\u5CF0\u5F0F\u547D\u540D\u548C\u6570\u636E\u5E93\u5B57\u6BB5_\u5206\u5272\u547D\u540D\u7684\u5339\u914D</span>
        foundValues <span class="token operator">=</span> <span class="token function">applyAutomaticMappings</span><span class="token punctuation">(</span>rsw<span class="token punctuation">,</span> resultMap<span class="token punctuation">,</span> metaObject<span class="token punctuation">,</span> columnPrefix<span class="token punctuation">)</span> <span class="token operator">||</span> foundValues<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// \u6839\u636E\u81EA\u5B9A\u4E49\u7684\u914D\u7F6E\u5C5E\u6027\u8FDB\u884C\u8D4B\u503C, \u6BD4\u5982@Results\u4E2D\u8BBE\u7F6E\u4E86\u4E00\u4E9Bcolumn\u5BF9\u5E94\u7684\u5B57\u6BB5\u914D\u7F6E</span>
      foundValues <span class="token operator">=</span> <span class="token function">applyPropertyMappings</span><span class="token punctuation">(</span>rsw<span class="token punctuation">,</span> resultMap<span class="token punctuation">,</span> metaObject<span class="token punctuation">,</span> lazyLoader<span class="token punctuation">,</span> columnPrefix<span class="token punctuation">)</span> <span class="token operator">||</span> foundValues<span class="token punctuation">;</span>
      foundValues <span class="token operator">=</span> lazyLoader<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">||</span> foundValues<span class="token punctuation">;</span>
      rowValue <span class="token operator">=</span> foundValues <span class="token operator">||</span> configuration<span class="token punctuation">.</span><span class="token function">isReturnInstanceForEmptyRow</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> rowValue <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> rowValue<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12);function x(M,j){const t=l("Badge");return o(),c("div",null,[i,p(t,{text:"tips",type:"info"}),k,s("details",r,[d,m,v,p(t,{text:"\u6CE8\u610F",type:"warn"}),n(),b,n("\u5E76\u4E0D\u662F\u6700\u7EC8\u7684\u53C2\u6570\u5217\u8868\u3002 "),y]),g,p(t,{text:"info",color:"grey"}),n(),w,n("\u3001"),f,n("\u3001"),h,n("\u7C7B\u578B\u7684sql\u53EA\u8FD4\u56DE\u64CD\u4F5C\u6570\u3002\u901A\u8FC7"),S,n("\u65B9\u6CD5\u8FDB\u884C\u5904\u7406\u8FD4\u56DE\u7ED3\u679C\u3002"),q])}const E=e(u,[["render",x],["__file","SqlSession\u4E0Esql\u6267\u884C.html.vue"]]);export{E as default};
