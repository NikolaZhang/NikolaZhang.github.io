import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,e}from"./app.4001f435.js";const t={},o=e(`<h1 id="\u914D\u7F6E\u6761\u4EF6\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#\u914D\u7F6E\u6761\u4EF6\u5904\u7406" aria-hidden="true">#</a> \u914D\u7F6E\u6761\u4EF6\u5904\u7406</h1><p>\u5F53\u4E0D\u540C\u7684\u73AF\u5883\u9700\u8981\u4E0D\u540C\u7684\u914D\u7F6E\u65F6\uFF0C\u9700\u8981\u6539\u52A8\u67D0\u4E9B\u914D\u7F6E\uFF0C\u800C\u5927\u90E8\u5206\u5185\u5BB9\u5219\u4FDD\u6301\u4E0D\u53D8\u3002\u5982\u5728\u5F00\u53D1\u548C\u6D4B\u8BD5\u73AF\u5883\u6211\u4EEC\u5C3D\u53EF\u80FD\u6253\u5370debug\u7EA7\u522B\u7684\u65E5\u5FD7\uFF0C\u5728\u7EBF\u4E0A\u5219\u4EE5error\u7EA7\u522B\u7684\u4E3A\u4E3B\u3002\u4E3A\u4E86\u907F\u514D\u91CD\u590D\u914D\u7F6E\u548C\u7EF4\u62A4\uFF0C\u6309\u7167\u6761\u4EF6\u5904\u7406\u914D\u7F6E\u6587\u4EF6\u63D0\u4F9B\u4E86\u8FD9\u65B9\u9762\u7684\u4FBF\u5229\u3002</p><p>logback\u4E2D\u901A\u8FC7<code>if</code>\uFF0C<code>then</code>\uFF0C<code>else</code>\u6807\u7B7E\u6765\u63A7\u5236\u914D\u7F6E\u5904\u7406\u8FC7\u7A0B\u3002\u8FD9\u91CCif\u6807\u7B7E\u8868\u793A\u6761\u4EF6\uFF0C\u542B\u6709<code>condition</code>\u5C5E\u6027\uFF0C\u503C\u4E3Ajava\u8868\u8FBE\u5F0F\u3002then\u662F\u6EE1\u8DB3\u6761\u4EF6\u7684\u5206\u652F\uFF0Celse\u662F\u4E0D\u6EE1\u8DB3\u6761\u4EF6\u7684\u5206\u652F\u3002</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>&lt;!-- if-then form --&gt;
   &lt;if condition=&quot;some conditional expression&quot;&gt;
    &lt;then&gt;
      ...
    &lt;/then&gt;
  &lt;/if&gt;

  &lt;!-- if-then-else form --&gt;
  &lt;if condition=&quot;some conditional expression&quot;&gt;
    &lt;then&gt;
      ...
    &lt;/then&gt;
    &lt;else&gt;
      ...
    &lt;/else&gt;
  &lt;/if&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728condition\u8868\u8FBE\u5F0F\u4E2D\u53EA\u6709\u4E0A\u4E0B\u6587\u5C5E\u6027\u548C\u7CFB\u7EDF\u5C5E\u6027\u53EF\u4EE5\u4F7F\u7528\u3002</p><h3 id="\u5185\u90E8java\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u5185\u90E8java\u65B9\u6CD5" aria-hidden="true">#</a> \u5185\u90E8java\u65B9\u6CD5</h3><ol><li>property()\u6216\u8005\u7B80\u5199p()\u65B9\u6CD5\u5C06\u5C5E\u6027\u540D\u4F5C\u4E3A\u53C2\u6570\u8FD4\u56DE\u5C5E\u6027\u7684\u503C\u3002\u5982\u679C\u6CA1\u6709\u5B9A\u4E49\u8BE5\u5C5E\u6027\u90A3\u4E48\uFF0C\u65B9\u6CD5\u5C06\u4F1A\u8FD4\u56DE\u7A7A\u5B57\u7B26\u4E32</li><li>isDefined()\u65B9\u6CD5\u53EF\u4EE5\u88AB\u7528\u6765\u68C0\u67E5\u5C5E\u6027\u662F\u5426\u5B9A\u4E49\u3002</li><li>isNull()\u65B9\u6CD5\u53EF\u4EE5\u68C0\u67E5\u5C5E\u6027\u662F\u5426\u4E3A\u7A7A</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token operator">&lt;</span>configuration debug<span class="token operator">=</span><span class="token string">&quot;true&quot;</span><span class="token operator">&gt;</span>

  <span class="token operator">&lt;</span><span class="token keyword">if</span> condition<span class="token operator">=</span>&#39;<span class="token function">property</span><span class="token punctuation">(</span><span class="token string">&quot;HOSTNAME&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&quot;torino&quot;</span><span class="token punctuation">)</span>&#39;<span class="token operator">&gt;</span>
    <span class="token generics"><span class="token punctuation">&lt;</span>then<span class="token punctuation">&gt;</span></span>
      <span class="token operator">&lt;</span>appender name<span class="token operator">=</span><span class="token string">&quot;CON&quot;</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;ch.qos.logback.core.ConsoleAppender&quot;</span><span class="token operator">&gt;</span>
        <span class="token generics"><span class="token punctuation">&lt;</span>encoder<span class="token punctuation">&gt;</span></span>
          <span class="token generics"><span class="token punctuation">&lt;</span>pattern<span class="token punctuation">&gt;</span></span><span class="token operator">%</span>d <span class="token operator">%</span><span class="token operator">-</span><span class="token number">5l</span>evel <span class="token operator">%</span>logger<span class="token punctuation">{</span><span class="token number">35</span><span class="token punctuation">}</span> <span class="token operator">-</span> <span class="token operator">%</span>msg <span class="token operator">%</span>n<span class="token operator">&lt;</span><span class="token operator">/</span>pattern<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>encoder<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>appender<span class="token operator">&gt;</span>
      <span class="token generics"><span class="token punctuation">&lt;</span>root<span class="token punctuation">&gt;</span></span>
        <span class="token operator">&lt;</span>appender<span class="token operator">-</span>ref ref<span class="token operator">=</span><span class="token string">&quot;CON&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>root<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>then<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span>

  <span class="token operator">&lt;</span>appender name<span class="token operator">=</span><span class="token string">&quot;FILE&quot;</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;ch.qos.logback.core.FileAppender&quot;</span><span class="token operator">&gt;</span>
    <span class="token generics"><span class="token punctuation">&lt;</span>file<span class="token punctuation">&gt;</span></span>$<span class="token punctuation">{</span>randomOutputDir<span class="token punctuation">}</span><span class="token operator">/</span>conditional<span class="token punctuation">.</span>log<span class="token operator">&lt;</span><span class="token operator">/</span>file<span class="token operator">&gt;</span>
    <span class="token generics"><span class="token punctuation">&lt;</span>encoder<span class="token punctuation">&gt;</span></span>
      <span class="token generics"><span class="token punctuation">&lt;</span>pattern<span class="token punctuation">&gt;</span></span><span class="token operator">%</span>d <span class="token operator">%</span><span class="token operator">-</span><span class="token number">5l</span>evel <span class="token operator">%</span>logger<span class="token punctuation">{</span><span class="token number">35</span><span class="token punctuation">}</span> <span class="token operator">-</span> <span class="token operator">%</span>msg <span class="token operator">%</span>n<span class="token operator">&lt;</span><span class="token operator">/</span>pattern<span class="token operator">&gt;</span>
   <span class="token operator">&lt;</span><span class="token operator">/</span>encoder<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>appender<span class="token operator">&gt;</span>

  <span class="token operator">&lt;</span>root level<span class="token operator">=</span><span class="token string">&quot;ERROR&quot;</span><span class="token operator">&gt;</span>
     <span class="token operator">&lt;</span>appender<span class="token operator">-</span>ref ref<span class="token operator">=</span><span class="token string">&quot;FILE&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>root<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>configuration<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),p=[o];function l(r,c){return s(),a("div",null,p)}const u=n(t,[["render",l],["__file","config-condition.html.vue"]]);export{u as default};
