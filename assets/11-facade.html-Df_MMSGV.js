import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as e,e as p}from"./app-CYrfdzXE.js";const t={};function c(l,s){return a(),e("div",null,s[0]||(s[0]=[p(`<blockquote><p>门面(Facade)模式是一种结构型设计模式，提供了一个统一的接口，用来访问子系统中的一群接口。门面模式定义了一个高层接口，这个接口使得子系统更容易使用。</p></blockquote><p><img src="https://raw.githubusercontent.com/NikolaZhang/image-blog/main/11-facade/20240120122205.png" alt="20240120122205"></p><div class="hint-container info"><p class="hint-container-title">使用场景</p><ol><li>对复杂子系统提供一个简单接口。</li><li>客户端需要和多个子系统进行交互,门面模式提供一个统一接口减少客户端的复杂性。</li><li>在层次化结构中,提供系统各层之间的入口点。</li></ol></div><h2 id="代码实现" tabindex="-1"><a class="header-anchor" href="#代码实现" aria-hidden="true">#</a> 代码实现</h2><h3 id="子系统的接口" tabindex="-1"><a class="header-anchor" href="#子系统的接口" aria-hidden="true">#</a> 子系统的接口</h3><p>假设我们的子系统中提供上图的接口。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Class2</span> <span class="token punctuation">{</span>
    
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其他类的创建类似。</p><h3 id="门面" tabindex="-1"><a class="header-anchor" href="#门面" aria-hidden="true">#</a> 门面</h3><p>门面类实际上将逻辑上的复杂关系，封装到它的方法中，并且提供接口给客户端访问。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Facade</span> <span class="token punctuation">{</span>
    
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">operation</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Class2</span> class2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Class2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Class3</span> class3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Class3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Class4</span> class4 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Class4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Class5</span> class5 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Class5</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>class2<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>class3<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>class4<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>class5<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11)]))}const u=n(t,[["render",c],["__file","11-facade.html.vue"]]);export{u as default};
