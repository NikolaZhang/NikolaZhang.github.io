import{_ as p}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as o,o as c,c as l,a as n,b as s,d as e,e as a}from"./app-wL-cNtU8.js";const r={},i=a(`<h2 id="构造选择器-selectors" tabindex="-1"><a class="header-anchor" href="#构造选择器-selectors" aria-hidden="true">#</a> <strong>构造选择器(selectors)</strong></h2><p>Scrapy selector是以 <strong>文字(text)</strong> 或 <strong><code>[TextResponse](https://scrapy-chs.readthedocs.io/zh_CN/latest/topics/request-response.html#scrapy.http.TextResponse)</code></strong> 构造的 <strong><code>[Selector](https://scrapy-chs.readthedocs.io/zh_CN/latest/topics/selectors.html#scrapy.selector.Selector)</code></strong> 实例。 其根据输入的类型自动选择最优的分析方法(XML vs HTML):</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> from scrapy.selector <span class="token function">import</span> Selector
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> from scrapy.http <span class="token function">import</span> HtmlResponse
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>以文字构造:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> body <span class="token operator">=</span> <span class="token string">&#39;&lt;html&gt;&lt;body&gt;&lt;span&gt;good&lt;/span&gt;&lt;/body&gt;&lt;/html&gt;&#39;</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> Selector<span class="token punctuation">(</span>text<span class="token operator">=</span>body<span class="token punctuation">)</span>.xpath<span class="token punctuation">(</span><span class="token string">&#39;//span/text()&#39;</span><span class="token punctuation">)</span>.extract<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">[</span>u<span class="token string">&#39;good&#39;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以response构造:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> response <span class="token operator">=</span> HtmlResponse<span class="token punctuation">(</span>url<span class="token operator">=</span><span class="token string">&#39;http://example.com&#39;</span>, <span class="token assign-left variable">body</span><span class="token operator">=</span>body<span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> Selector<span class="token punctuation">(</span>response<span class="token operator">=</span>response<span class="token punctuation">)</span>.xpath<span class="token punctuation">(</span><span class="token string">&#39;//span/text()&#39;</span><span class="token punctuation">)</span>.extract<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">[</span>u<span class="token string">&#39;good&#39;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>为了方便起见，response对象以 .selector 属性提供了一个selector， 您可以随时使用该快捷方法:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> response.selector.xpath<span class="token punctuation">(</span><span class="token string">&#39;//span/text()&#39;</span><span class="token punctuation">)</span>.extract<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">[</span>u<span class="token string">&#39;good&#39;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用选择器-selectors" tabindex="-1"><a class="header-anchor" href="#使用选择器-selectors" aria-hidden="true">#</a> 使用选择器(selectors)</h2><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>base</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>http://example.com/<span class="token punctuation">&#39;</span></span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Example website<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>images<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>image1.html<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span>Name: My image 1 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>image1_thumb.jpg<span class="token punctuation">&#39;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>image2.html<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span>Name: My image 2 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>image2_thumb.jpg<span class="token punctuation">&#39;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>image3.html<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span>Name: My image 3 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>image3_thumb.jpg<span class="token punctuation">&#39;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>image4.html<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span>Name: My image 4 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>image4_thumb.jpg<span class="token punctuation">&#39;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>image5.html<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span>Name: My image 5 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>image5_thumb.jpg<span class="token punctuation">&#39;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),u={href:"https://scrapy-chs.readthedocs.io/zh_CN/latest/topics/selectors.html#topics-selectors-htmlcode",target:"_blank",rel:"noopener noreferrer"},d=a(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> response.selector.xpath<span class="token punctuation">(</span><span class="token string">&#39;//title/text()&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">[</span><span class="token operator">&lt;</span>Selector <span class="token punctuation">(</span>text<span class="token punctuation">)</span> <span class="token assign-left variable">xpath</span><span class="token operator">=</span>//title/text<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>由于在response中使用XPath、CSS查询十分普遍，因此，Scrapy提供了两个实用的快捷方式: <code>response.xpath()</code> 及 <code>response.css()</code>:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> response.xpath<span class="token punctuation">(</span><span class="token string">&#39;//title/text()&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">[</span><span class="token operator">&lt;</span>Selector <span class="token punctuation">(</span>text<span class="token punctuation">)</span> <span class="token assign-left variable">xpath</span><span class="token operator">=</span>//title/text<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token punctuation">]</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> response.css<span class="token punctuation">(</span><span class="token string">&#39;title::text&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">[</span><span class="token operator">&lt;</span>Selector <span class="token punctuation">(</span>text<span class="token punctuation">)</span> <span class="token assign-left variable">xpath</span><span class="token operator">=</span>//title/text<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>.xpath()</code>及 <code>.css()</code> 方法返回一个类 SelectorList 的实例, 它是一个新选择器的列表。这个API可以用来快速的提取嵌套数据。</p><p>为了提取真实的原文数据，你需要调用 <code>.extract()</code> 方法如下:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> response.xpath<span class="token punctuation">(</span><span class="token string">&#39;//title/text()&#39;</span><span class="token punctuation">)</span>.extract<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">[</span>u<span class="token string">&#39;Example website&#39;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>注意CSS选择器可以使用CSS3伪元素(pseudo-elements)来选择文字或者属性节点:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> response.css<span class="token punctuation">(</span><span class="token string">&#39;title::text&#39;</span><span class="token punctuation">)</span>.extract<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">[</span>u<span class="token string">&#39;Example website&#39;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>现在我们将得到根URL(base URL)和一些图片链接:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> response.xpath<span class="token punctuation">(</span><span class="token string">&#39;//base/@href&#39;</span><span class="token punctuation">)</span>.extract<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">[</span>u<span class="token string">&#39;http://example.com/&#39;</span><span class="token punctuation">]</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> response.css<span class="token punctuation">(</span><span class="token string">&#39;base::attr(href)&#39;</span><span class="token punctuation">)</span>.extract<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">[</span>u<span class="token string">&#39;http://example.com/&#39;</span><span class="token punctuation">]</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> response.xpath<span class="token punctuation">(</span><span class="token string">&#39;//a[contains(@href, &quot;image&quot;)]/@href&#39;</span><span class="token punctuation">)</span>.extract<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">[</span>u<span class="token string">&#39;image1.html&#39;</span>,
 u<span class="token string">&#39;image2.html&#39;</span>,
 u<span class="token string">&#39;image3.html&#39;</span>,
 u<span class="token string">&#39;image4.html&#39;</span>,
 u<span class="token string">&#39;image5.html&#39;</span><span class="token punctuation">]</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> response.css<span class="token punctuation">(</span><span class="token string">&#39;a[href*=image]::attr(href)&#39;</span><span class="token punctuation">)</span>.extract<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">[</span>u<span class="token string">&#39;image1.html&#39;</span>,
 u<span class="token string">&#39;image2.html&#39;</span>,
 u<span class="token string">&#39;image3.html&#39;</span>,
 u<span class="token string">&#39;image4.html&#39;</span>,
 u<span class="token string">&#39;image5.html&#39;</span><span class="token punctuation">]</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> response.xpath<span class="token punctuation">(</span><span class="token string">&#39;//a[contains(@href, &quot;image&quot;)]/img/@src&#39;</span><span class="token punctuation">)</span>.extract<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">[</span>u<span class="token string">&#39;image1_thumb.jpg&#39;</span>,
 u<span class="token string">&#39;image2_thumb.jpg&#39;</span>,
 u<span class="token string">&#39;image3_thumb.jpg&#39;</span>,
 u<span class="token string">&#39;image4_thumb.jpg&#39;</span>,
 u<span class="token string">&#39;image5_thumb.jpg&#39;</span><span class="token punctuation">]</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> response.css<span class="token punctuation">(</span><span class="token string">&#39;a[href*=image] img::attr(src)&#39;</span><span class="token punctuation">)</span>.extract<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">[</span>u<span class="token string">&#39;image1_thumb.jpg&#39;</span>,
 u<span class="token string">&#39;image2_thumb.jpg&#39;</span>,
 u<span class="token string">&#39;image3_thumb.jpg&#39;</span>,
 u<span class="token string">&#39;image4_thumb.jpg&#39;</span>,
 u<span class="token string">&#39;image5_thumb.jpg&#39;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="嵌套选择器-selectors" tabindex="-1"><a class="header-anchor" href="#嵌套选择器-selectors" aria-hidden="true">#</a> <strong>嵌套选择器(selectors)</strong></h3><p>选择器方法( <code>.xpath()</code> or <code>.css()</code> )返回相同类型的选择器列表，因此你也可以对这些选择器调用选择器方法。下面是一个例子:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> links <span class="token operator">=</span> response.xpath<span class="token punctuation">(</span><span class="token string">&#39;//a[contains(@href, &quot;image&quot;)]&#39;</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> links.extract<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">[</span>u<span class="token string">&#39;&lt;a href=&quot;image1.html&quot;&gt;Name: My image 1 &lt;br&gt;&lt;img src=&quot;image1_thumb.jpg&quot;&gt;&lt;/a&gt;&#39;</span>,
 u<span class="token string">&#39;&lt;a href=&quot;image2.html&quot;&gt;Name: My image 2 &lt;br&gt;&lt;img src=&quot;image2_thumb.jpg&quot;&gt;&lt;/a&gt;&#39;</span>,
 u<span class="token string">&#39;&lt;a href=&quot;image3.html&quot;&gt;Name: My image 3 &lt;br&gt;&lt;img src=&quot;image3_thumb.jpg&quot;&gt;&lt;/a&gt;&#39;</span>,
 u<span class="token string">&#39;&lt;a href=&quot;image4.html&quot;&gt;Name: My image 4 &lt;br&gt;&lt;img src=&quot;image4_thumb.jpg&quot;&gt;&lt;/a&gt;&#39;</span>,
 u<span class="token string">&#39;&lt;a href=&quot;image5.html&quot;&gt;Name: My image 5 &lt;br&gt;&lt;img src=&quot;image5_thumb.jpg&quot;&gt;&lt;/a&gt;&#39;</span><span class="token punctuation">]</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">for</span> index, <span class="token function">link</span> <span class="token keyword">in</span> enumerate<span class="token punctuation">(</span>links<span class="token punctuation">)</span>:
        args <span class="token operator">=</span> <span class="token punctuation">(</span>index, link.xpath<span class="token punctuation">(</span><span class="token string">&#39;@href&#39;</span><span class="token punctuation">)</span>.extract<span class="token punctuation">(</span><span class="token punctuation">)</span>, link.xpath<span class="token punctuation">(</span><span class="token string">&#39;img/@src&#39;</span><span class="token punctuation">)</span>.extract<span class="token punctuation">(</span><span class="token punctuation">))</span>
        print <span class="token string">&#39;Link number %d points to url %s and image %s&#39;</span> % args

Link number <span class="token number">0</span> points to url <span class="token punctuation">[</span>u<span class="token string">&#39;image1.html&#39;</span><span class="token punctuation">]</span> and image <span class="token punctuation">[</span>u<span class="token string">&#39;image1_thumb.jpg&#39;</span><span class="token punctuation">]</span>
Link number <span class="token number">1</span> points to url <span class="token punctuation">[</span>u<span class="token string">&#39;image2.html&#39;</span><span class="token punctuation">]</span> and image <span class="token punctuation">[</span>u<span class="token string">&#39;image2_thumb.jpg&#39;</span><span class="token punctuation">]</span>
Link number <span class="token number">2</span> points to url <span class="token punctuation">[</span>u<span class="token string">&#39;image3.html&#39;</span><span class="token punctuation">]</span> and image <span class="token punctuation">[</span>u<span class="token string">&#39;image3_thumb.jpg&#39;</span><span class="token punctuation">]</span>
Link number <span class="token number">3</span> points to url <span class="token punctuation">[</span>u<span class="token string">&#39;image4.html&#39;</span><span class="token punctuation">]</span> and image <span class="token punctuation">[</span>u<span class="token string">&#39;image4_thumb.jpg&#39;</span><span class="token punctuation">]</span>
Link number <span class="token number">4</span> points to url <span class="token punctuation">[</span>u<span class="token string">&#39;image5.html&#39;</span><span class="token punctuation">]</span> and image <span class="token punctuation">[</span>u<span class="token string">&#39;image5_thumb.jpg&#39;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="结合正则表达式使用选择器-selectors" tabindex="-1"><a class="header-anchor" href="#结合正则表达式使用选择器-selectors" aria-hidden="true">#</a> <strong>结合正则表达式使用选择器(selectors)</strong></h3><p><strong><code>[Selector](https://scrapy-chs.readthedocs.io/zh_CN/latest/topics/selectors.html#scrapy.selector.Selector)</code></strong> 也有一个 <code>.re()</code> 方法，用来通过正则表达式来提取数据。然而，不同于使用 <code>.xpath()</code> 或者 <code>.css()</code> 方法, <code>.re()</code> 方法返回unicode字符串的列表。所以你无法构造嵌套式的 <code>.re()</code> 调用。</p>`,15),k={href:"https://scrapy-chs.readthedocs.io/zh_CN/latest/topics/selectors.html#topics-selectors-htmlcode",target:"_blank",rel:"noopener noreferrer"},g=a(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> response.xpath<span class="token punctuation">(</span><span class="token string">&#39;//a[contains(@href, &quot;image&quot;)]/text()&#39;</span><span class="token punctuation">)</span>.re<span class="token punctuation">(</span>r<span class="token string">&#39;Name:\\s*(.*)&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">[</span>u<span class="token string">&#39;My image 1&#39;</span>,
 u<span class="token string">&#39;My image 2&#39;</span>,
 u<span class="token string">&#39;My image 3&#39;</span>,
 u<span class="token string">&#39;My image 4&#39;</span>,
 u<span class="token string">&#39;My image 5&#39;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用相对xpaths" tabindex="-1"><a class="header-anchor" href="#使用相对xpaths" aria-hidden="true">#</a> 使用相对XPaths</h2><p>记住如果你使用嵌套的选择器，并使用起始为 / 的XPath，那么该XPath将对文档使用绝对路径，而且对于你调用的 Selector 不是相对路径。</p><p>下面是比较合适的处理方法(注意 .//p XPath的点前缀):</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">for</span> p <span class="token keyword">in</span> divs<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&#39;.//p&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># extracts all &lt;p&gt; inside</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">print</span> p<span class="token punctuation">.</span>extract<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>另一种常见的情况将是提取所有直系的结果:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">for</span> p <span class="token keyword">in</span> divs<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&#39;p&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">print</span> p<span class="token punctuation">.</span>extract<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="使用exslt扩展" tabindex="-1"><a class="header-anchor" href="#使用exslt扩展" aria-hidden="true">#</a> 使用EXSLT扩展</h2><p>因建于 lxml 之上, Scrapy选择器也支持一些 EXSLT 扩展，可以在XPath表达式中使用这些预先制定的命名空间：</p><p><a href="Selectors%20d1d5e515dc8d4898a988c982ced85ebe/Untitled%20Database%209ca02246fc5349119fdae064fcfab175.csv">Untitled</a></p><h2 id="正则表达式" tabindex="-1"><a class="header-anchor" href="#正则表达式" aria-hidden="true">#</a> 正则表达式</h2><p>例如在XPath的 <code>starts-with()</code> 或 <code>contains()</code> 无法满足需求时， <code>test()</code> 函数可以非常有用。</p><p>例如在列表中选择有”class”元素且结尾为一个数字的链接:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> from scrapy <span class="token function">import</span> Selector
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> doc <span class="token operator">=</span> <span class="token string">&quot;&quot;</span>&quot;
<span class="token punctuation">..</span>. <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
<span class="token punctuation">..</span>.     <span class="token operator">&lt;</span>ul<span class="token operator">&gt;</span>
<span class="token punctuation">..</span>.         <span class="token operator">&lt;</span>li <span class="token assign-left variable">class</span><span class="token operator">=</span><span class="token string">&quot;item-0&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>a <span class="token assign-left variable">href</span><span class="token operator">=</span><span class="token string">&quot;link1.html&quot;</span><span class="token operator">&gt;</span>first item<span class="token operator">&lt;</span>/a<span class="token operator">&gt;</span><span class="token operator">&lt;</span>/li<span class="token operator">&gt;</span>
<span class="token punctuation">..</span>.         <span class="token operator">&lt;</span>li <span class="token assign-left variable">class</span><span class="token operator">=</span><span class="token string">&quot;item-1&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>a <span class="token assign-left variable">href</span><span class="token operator">=</span><span class="token string">&quot;link2.html&quot;</span><span class="token operator">&gt;</span>second item<span class="token operator">&lt;</span>/a<span class="token operator">&gt;</span><span class="token operator">&lt;</span>/li<span class="token operator">&gt;</span>
<span class="token punctuation">..</span>.         <span class="token operator">&lt;</span>li <span class="token assign-left variable">class</span><span class="token operator">=</span><span class="token string">&quot;item-inactive&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>a <span class="token assign-left variable">href</span><span class="token operator">=</span><span class="token string">&quot;link3.html&quot;</span><span class="token operator">&gt;</span>third item<span class="token operator">&lt;</span>/a<span class="token operator">&gt;</span><span class="token operator">&lt;</span>/li<span class="token operator">&gt;</span>
<span class="token punctuation">..</span>.         <span class="token operator">&lt;</span>li <span class="token assign-left variable">class</span><span class="token operator">=</span><span class="token string">&quot;item-1&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>a <span class="token assign-left variable">href</span><span class="token operator">=</span><span class="token string">&quot;link4.html&quot;</span><span class="token operator">&gt;</span>fourth item<span class="token operator">&lt;</span>/a<span class="token operator">&gt;</span><span class="token operator">&lt;</span>/li<span class="token operator">&gt;</span>
<span class="token punctuation">..</span>.         <span class="token operator">&lt;</span>li <span class="token assign-left variable">class</span><span class="token operator">=</span><span class="token string">&quot;item-0&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>a <span class="token assign-left variable">href</span><span class="token operator">=</span><span class="token string">&quot;link5.html&quot;</span><span class="token operator">&gt;</span>fifth item<span class="token operator">&lt;</span>/a<span class="token operator">&gt;</span><span class="token operator">&lt;</span>/li<span class="token operator">&gt;</span>
<span class="token punctuation">..</span>.     <span class="token operator">&lt;</span>/ul<span class="token operator">&gt;</span>
<span class="token punctuation">..</span>. <span class="token operator">&lt;</span>/div<span class="token operator">&gt;</span>
<span class="token punctuation">..</span>. <span class="token string">&quot;&quot;</span>&quot;
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> sel <span class="token operator">=</span> Selector<span class="token punctuation">(</span>text<span class="token operator">=</span>doc, <span class="token assign-left variable">type</span><span class="token operator">=</span><span class="token string">&quot;html&quot;</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> sel.xpath<span class="token punctuation">(</span><span class="token string">&#39;//li//@href&#39;</span><span class="token punctuation">)</span>.extract<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">[</span>u<span class="token string">&#39;link1.html&#39;</span>, u<span class="token string">&#39;link2.html&#39;</span>, u<span class="token string">&#39;link3.html&#39;</span>, u<span class="token string">&#39;link4.html&#39;</span>, u<span class="token string">&#39;link5.html&#39;</span><span class="token punctuation">]</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> sel.xpath<span class="token punctuation">(</span><span class="token string">&#39;//li[re:test(@class, &quot;item-\\d$&quot;)]//@href&#39;</span><span class="token punctuation">)</span>.extract<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">[</span>u<span class="token string">&#39;link1.html&#39;</span>, u<span class="token string">&#39;link2.html&#39;</span>, u<span class="token string">&#39;link4.html&#39;</span>, u<span class="token string">&#39;link5.html&#39;</span><span class="token punctuation">]</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="集合操作" tabindex="-1"><a class="header-anchor" href="#集合操作" aria-hidden="true">#</a> 集合操作</h2><p>集合操作可以方便地用于在提取文字元素前从文档树中去除一些部分。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">for</span> scope <span class="token keyword">in</span> sel<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&#39;//div[@itemscope]&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">print</span> <span class="token string">&quot;current scope:&quot;</span><span class="token punctuation">,</span> scope<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&#39;@itemtype&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>extract<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     props <span class="token operator">=</span> scope<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token triple-quoted-string string">&#39;&#39;&#39;
...                 set:difference(./descendant::*/@itemprop,
...                                .//*[@itemscope]/*/@itemprop)&#39;&#39;&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">print</span> <span class="token string">&quot;    properties:&quot;</span><span class="token punctuation">,</span> props<span class="token punctuation">.</span>extract<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">print</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="内建选择器的参考" tabindex="-1"><a class="header-anchor" href="#内建选择器的参考" aria-hidden="true">#</a> <strong>内建选择器的参考</strong></h1><blockquote><p><strong><em>class</em><code>scrapy.selector.Selector</code>(<em>response=None</em>, <em>text=None</em>, <em>type=None</em>)</strong></p></blockquote><ol><li><strong><code>[Selector](https://scrapy-chs.readthedocs.io/zh_CN/latest/topics/selectors.html#scrapy.selector.Selector)</code></strong> 的实例是对选择某些内容响应的封装。</li><li><strong><code>response</code></strong> 是 <strong><code>[HtmlResponse](https://scrapy-chs.readthedocs.io/zh_CN/latest/topics/request-response.html#scrapy.http.HtmlResponse)</code></strong> 或 <strong><code>[XmlResponse](https://scrapy-chs.readthedocs.io/zh_CN/latest/topics/request-response.html#scrapy.http.XmlResponse)</code></strong> 的一个对象，将被用来选择和提取数据。</li><li><strong><code>text</code></strong> 是在 <strong><code>response</code></strong> 不可用时的一个unicode字符串或utf-8编码的文字。将 <strong><code>text</code></strong> 和 <strong><code>response</code></strong> 一起使用是未定义行为。</li><li><strong><code>type</code></strong> 定义了选择器类型，可以是 <strong><code>&quot;html&quot;</code></strong>, <strong><code>&quot;xml&quot;</code></strong> or <strong><code>None</code></strong> (默认).如果 <strong><code>type</code></strong> 是 <strong><code>None</code></strong> ，选择器会根据 <strong><code>response</code></strong> 类型(参见下面)自动选择最佳的类型，或者在和 <strong><code>text</code></strong> 一起使用时，默认为 <strong><code>&quot;html&quot;</code></strong> 。<br> 如果 <strong><code>type</code></strong> 是 <strong><code>None</code></strong> ，并传递了一个 <strong><code>response</code></strong> ，选择器类型将从response类型中推导如下：<br> • <strong><code>&quot;html&quot;</code></strong> for <strong><code>[HtmlResponse](https://scrapy-chs.readthedocs.io/zh_CN/latest/topics/request-response.html#scrapy.http.HtmlResponse)</code></strong> type<br> • <strong><code>&quot;xml&quot;</code></strong> for <strong><code>[XmlResponse](https://scrapy-chs.readthedocs.io/zh_CN/latest/topics/request-response.html#scrapy.http.XmlResponse)</code></strong> type<br> • <strong><code>&quot;html&quot;</code></strong> for anything else<br> 其他情况下，如果设定了 <strong><code>type</code></strong> ，选择器类型将被强制设定，而不进行检测。</li></ol><blockquote><p><strong><code>xpath</code>(<em>query</em>)</strong></p></blockquote><p>寻找可以匹配xpath <strong><code>query</code></strong> 的节点，并返回 <strong><code>[SelectorList](https://scrapy-chs.readthedocs.io/zh_CN/latest/topics/selectors.html#scrapy.selector.SelectorList)</code></strong> 的一个实例结果，单一化其所有元素。列表元素也实现了 <strong><code>[Selector](https://scrapy-chs.readthedocs.io/zh_CN/latest/topics/selectors.html#scrapy.selector.Selector)</code></strong> 的接口。<br><strong><code>query</code></strong> 是包含XPATH查询请求的字符串。</p><p>为了方便起见，该方法也可以通过 <strong><code>response.xpath()</code></strong> 调用</p><blockquote><p><strong><code>css</code>(<em>query</em>)</strong></p></blockquote><p>应用给定的CSS选择器，返回 <strong><code>[SelectorList](https://scrapy-chs.readthedocs.io/zh_CN/latest/topics/selectors.html#scrapy.selector.SelectorList)</code></strong> 的一个实例。<br><strong><code>query</code></strong> 是一个包含CSS选择器的字符串。<br> 在后台，通过 cssselect 库和运行 <strong><code>.xpath()</code></strong> 方法，CSS查询会被转换为XPath查询。</p><p>为了方便起见，该方法也可以通过 <strong><code>response.css()</code></strong> 调用</p><blockquote><p><strong><code>extract</code>()</strong></p></blockquote><p>串行化并将匹配到的节点返回一个unicode字符串列表。 结尾是编码内容的百分比。</p><blockquote><p><strong><code>re</code>(<em>regex</em>)</strong></p></blockquote><p>应用给定的regex，并返回匹配到的unicode字符串列表。<br><strong><code>regex</code></strong> 可以是一个已编译的正则表达式，也可以是一个将被 <strong><code>re.compile(regex)</code></strong> 编译为正则表达式的字符串。**<code>register_namespace</code>(<em>prefix</em>, <em>uri</em>)**注册给定的命名空间，其将在 <strong><code>[Selector](https://scrapy-chs.readthedocs.io/zh_CN/latest/topics/selectors.html#scrapy.selector.Selector)</code></strong> 中使用。 不注册命名空间，你将无法从非标准命名空间中选择或提取数据。参见下面的例子</p><blockquote><p><strong><code>remove_namespaces</code>()</strong></p></blockquote><p>移除所有的命名空间，允许使用少量的命名空间xpaths遍历文档。参加下面的例子。</p><blockquote><p><strong><code>__nonzero__</code>()</strong></p></blockquote><p>如果选择了任意的真实文档，将返回 <strong><code>True</code></strong> ，否则返回 <strong><code>False</code></strong> 。 也就是说， <strong><code>[Selector](https://scrapy-chs.readthedocs.io/zh_CN/latest/topics/selectors.html#scrapy.selector.Selector)</code></strong> 的布尔值是通过它选择的内容确定的。</p><h3 id="selectorlist对象" tabindex="-1"><a class="header-anchor" href="#selectorlist对象" aria-hidden="true">#</a> <strong>SelectorList对象</strong></h3><blockquote><p><strong><em>class</em><code>scrapy.selector.SelectorList</code></strong></p></blockquote><p><strong><code>[SelectorList](https://scrapy-chs.readthedocs.io/zh_CN/latest/topics/selectors.html#scrapy.selector.SelectorList)</code></strong> 类是内建 <strong><code>list</code></strong> 类的子类，提供了一些额外的方法。</p><blockquote><p><strong><code>xpath</code>(<em>query</em>)</strong></p></blockquote><p>对列表中的每个元素调用 <strong><code>.xpath()</code></strong> 方法，返回结果为另一个单一化的 <strong><code>[SelectorList](https://scrapy-chs.readthedocs.io/zh_CN/latest/topics/selectors.html#scrapy.selector.SelectorList)</code></strong> 。</p><p><strong><code>query</code></strong> 和 <strong><code>[Selector.xpath()](https://scrapy-chs.readthedocs.io/zh_CN/latest/topics/selectors.html#scrapy.selector.Selector.xpath)</code></strong> 中的参数相同。</p><blockquote><p><strong><code>css</code>(<em>query</em>)</strong></p></blockquote><p>对列表中的各个元素调用 <strong><code>.css()</code></strong> 方法，返回结果为另一个单一化的 <strong><code>[SelectorList](https://scrapy-chs.readthedocs.io/zh_CN/latest/topics/selectors.html#scrapy.selector.SelectorList)</code></strong> 。<br><strong><code>query</code></strong> 和 <strong><code>[Selector.css()](https://scrapy-chs.readthedocs.io/zh_CN/latest/topics/selectors.html#scrapy.selector.Selector.css)</code></strong> 中的参数相同。</p><blockquote><p><strong><code>extract</code>()</strong></p></blockquote><p>对列表中的各个元素调用 <strong><code>.extract()</code></strong> 方法，返回结果为单一化的unicode字符串列表。</p><blockquote><p><strong><code>re</code>()</strong></p></blockquote><p>对列表中的各个元素调用 <strong><code>.re()</code></strong> 方法，返回结果为单一化的unicode字符串列表。**<code>__nonzero__</code>()**列表非空则返回True，否则返回False。</p>`,46);function m(h,v){const t=o("ExternalLinkIcon");return c(),l("div",null,[i,n("p",null,[s("那么，通过查看 "),n("a",u,[s("HTML code"),e(t)]),s(" 该页面的源码，我们构建一个XPath来选择title标签内的文字:")]),d,n("p",null,[s("下面是一个例子，从上面的 "),n("a",k,[s("HTML code"),e(t)]),s(" 中提取图像名字:")]),g])}const q=p(r,[["render",m],["__file","Selectors.html.vue"]]);export{q as default};
