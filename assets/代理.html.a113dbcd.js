import{_ as a}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as p,c as t,d as e,a as n,b as c,e as o,r as l}from"./app.4001f435.js";const i={},u=n("blockquote",null,[n("p",null,"\u4ECE\u4EE3\u7406\u6A21\u5F0F\u5F00\u59CB, \u770B\u770Bjava\u52A8\u6001\u4EE3\u7406\u662F\u600E\u4E48\u56DE\u4E8B")],-1),k=n("h2",{id:"\u4F55\u4E3A\u4EE3\u7406",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u4F55\u4E3A\u4EE3\u7406","aria-hidden":"true"},"#"),c(" \u4F55\u4E3A\u4EE3\u7406")],-1),r=n("p",null,"\u4EE3\u7406\u6A21\u5F0F: \u7B80\u5355\u7684\u8BF4\u5C31\u662F\u4E00\u4E2A\u7C7B\u4EE3\u8868\u53E6\u4E00\u4E2A\u7C7B\u7684\u529F\u80FD.",-1),d=o(`<p>\u56E0\u6B64\u5B83\u5E94\u8BE5\u7B26\u5408\u4EE5\u4E0B:</p><ol><li>\u4E0D\u76F4\u63A5\u64CD\u4F5C\u5B9E\u73B0\u7C7B, \u800C\u662F\u901A\u8FC7\u4EE3\u7406\u7C7B\u8FDB\u884C\u64CD\u4F5C. \u4F46\u662F\u4EE3\u7406\u7C7B\u548C\u5B9E\u73B0\u7C7B\u5177\u6709\u60F3\u901A\u8FC7\u7684\u884C\u4E3A, \u4E5F\u5C31\u662F\u5B9E\u73B0\u76F8\u540C\u7684\u63A5\u53E3.</li><li>\u804C\u8D23\u66F4\u52A0\u6E05\u6670: \u5B9E\u73B0\u7C7B\u5B9E\u73B0\u63A5\u53E3\u7684\u884C\u4E3A\u903B\u8F91, \u4EE3\u7406\u7C7B\u8FDB\u884C\u589E\u5F3A.</li><li>\u6269\u5C55\u6027: \u4E00\u65B9\u9762\u4F53\u73B0\u5728\u5B9E\u73B0\u7684\u591A\u6837\u6027\u4E0A, \u53E6\u4E00\u65B9\u9762\u662F\u4EE3\u7406\u7C7B\u5BF9\u5B9E\u73B0\u7684\u589E\u5F3A.</li></ol><p>\u4E0B\u9762\u6211\u4EEC\u6309\u7167\u4E0A\u9762\u7684\u5B9A\u4E49\u5B9E\u73B0\u4E00\u4E2A\u4EE3\u7406\u6A21\u5F0F:</p><h2 id="\u6A21\u62DF\u552E\u7968" tabindex="-1"><a class="header-anchor" href="#\u6A21\u62DF\u552E\u7968" aria-hidden="true">#</a> \u6A21\u62DF\u552E\u7968</h2><p>\u5B9A\u4E49\u4E00\u4E2A<code>ISell</code>\u63A5\u53E3\u6A21\u62DF\u9500\u552E\u884C\u4E3A.</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ISell</span> <span class="token punctuation">{</span>
    <span class="token keyword">void</span> <span class="token function">sell</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>SellTicket</code>\u662F\u8FD9\u4E2A\u884C\u4E3A\u7684\u76F4\u63A5\u5B9E\u73B0, \u5373\u552E\u7968\u7684\u903B\u8F91.</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SellTicket</span> <span class="token keyword">implements</span> <span class="token class-name">ISell</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sell</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;====== \u552E\u51FA\u7968\u4E86&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>SellMerchainProxy</code> \u662F<code>SellTicket</code>\u7684\u4EE3\u7406, \u5BF9\u552E\u7968\u884C\u4E3A\u8FDB\u884C\u4E86\u589E\u5F3A, \u552E\u7968\u524D\u521B\u5EFA\u8BA2\u5355, \u552E\u7968\u540E\u901A\u77E5\u7528\u6237...</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SellMerchainProxy</span> <span class="token keyword">implements</span> <span class="token class-name">ISell</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">SellTicket</span> sellTicket<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">SellMerchainProxy</span><span class="token punctuation">(</span><span class="token class-name">SellTicket</span> sellTicket<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>sellTicket <span class="token operator">=</span> sellTicket<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sell</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">createOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>sellTicket<span class="token punctuation">.</span><span class="token function">sell</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">updateStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">createOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;====== \u521B\u5EFA\u8BA2\u5355&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">updateStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;====== \u901A\u77E5\u7528\u6237\u8D2D\u7968\u6210\u529F&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4EE5\u4E0A\u6211\u4EEC\u5C31\u5B9E\u73B0\u4E86\u4EE3\u7406\u6A21\u5F0F(\u9759\u6001\u4EE3\u7406), \u4E0B\u9762\u8FDB\u884C\u6D4B\u8BD5. \u6CE8\u610F\u6240\u6709\u7684\u884C\u4E3A\u90FD\u662F\u7531\u4EE3\u7406\u7C7B\u8FDB\u884C\u63A7\u5236\u7684. \u56E0\u6B64\u6211\u4EEC\u53EA\u9700\u521B\u5EFA\u4EE3\u7406\u7C7B\u5BF9\u8C61\u5C31\u53EF\u4EE5\u4E86.</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestProxy</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SellTicket</span> sellTicket1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SellTicket</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">new</span> <span class="token class-name">SellMerchainProxy</span><span class="token punctuation">(</span>sellTicket1<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sell</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD0\u884C\u7ED3\u679C:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>====== \u521B\u5EFA\u8BA2\u5355
====== \u552E\u51FA\u7968\u4E86
====== \u901A\u77E5\u7528\u6237\u8D2D\u7968\u6210\u529F
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7F3A\u70B9:</p><p>\u5982\u679C\u4E1A\u52A1\u7EE7\u7EED\u589E\u52A0, \u6BD4\u5982\u6211\u4EEC\u589E\u52A0\u4E00\u4E2A<code>IBuy</code>\u63A5\u53E3, \u90A3\u4E48\u4EE3\u7406\u7C7B\u5FC5\u7136\u8981\u5B9E\u73B0\u8BE5\u63A5\u53E3, \u5E76\u5B9E\u73B0<code>IBuy</code>\u7684\u63A5\u53E3\u65B9\u6CD5. \u5982\u679C\u63A5\u53E3\u8D8A\u6765\u8D8A\u591A, \u90A3\u4E48\u8FD9\u4E2A\u4EE3\u7406\u7C7B\u5FC5\u7136\u8981\u7EE7\u7EED\u5B9E\u73B0\u66F4\u591A\u65B9\u6CD5. \u800C\u4E14\u6BCF\u4E00\u6B21\u6211\u4EEC\u90FD\u8981\u6539\u52A8\u4E4B\u524D\u7684\u4EE3\u7801. \u8FD9\u548C\u5F00\u95ED\u539F\u5219\u76F8\u8FDD\u80CC.</p><p>\u56E0\u6B64\u5C31\u884D\u751F\u51FA\u4E86\u52A8\u6001\u4EE3\u7406\u65B9\u5F0F.</p><h2 id="\u52A8\u6001\u4EE3\u7406" tabindex="-1"><a class="header-anchor" href="#\u52A8\u6001\u4EE3\u7406" aria-hidden="true">#</a> \u52A8\u6001\u4EE3\u7406</h2><p>\u52A8\u6001\u4EE3\u7406\u7684\u52A8\u6001\u8868\u73B0\u5728\u5176\u4EE3\u7406\u5BF9\u8C61\u662F\u5728\u8FD0\u884C\u65F6\u751F\u6210\u51FA\u6765\u7684.</p><p>\u4E0B\u9762\u6211\u4EEC\u901A\u8FC7jdk\u52A8\u6001\u4EE3\u7406\u5C06\u4E0A\u9762\u7684\u7A0B\u5E8F\u8FDB\u884C\u6539\u9020.</p><p><code>ISell</code>\u548C<code>SellTicket</code>\u4E0D\u505A\u4EFB\u4F55\u4FEE\u6539, \u589E\u52A0<code>CommonInvocationHandler</code>\u4EE5\u5B9E\u73B0<code>InvocationHandler</code>.\u4EE3\u7801\u89C1\u4E0B:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CommonInvocationHandler</span> <span class="token keyword">implements</span> <span class="token class-name">InvocationHandler</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">Object</span> object<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">Object</span> proxy<span class="token punctuation">,</span> <span class="token class-name">Method</span> method<span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> method<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>object<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">getProxy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Proxy</span><span class="token punctuation">.</span><span class="token function">newProxyInstance</span><span class="token punctuation">(</span>object<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                object<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getInterfaces</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setObject</span><span class="token punctuation">(</span><span class="token class-name">Object</span> object<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>object <span class="token operator">=</span> object<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Proxy</code>\u7C7B\u63D0\u4F9B\u521B\u5EFA\u52A8\u6001\u4EE3\u7406\u7C7B\u548C\u5B9E\u4F8B\u7684\u9759\u6001\u65B9\u6CD5, \u540C\u65F6\u5B83\u4E5F\u662F\u6240\u6709\u521B\u5EFA\u51FA\u7684\u4EE3\u7406\u7C7B\u7684\u7236\u7C7B.</p><p><code>InvocationHandler</code>\u662F\u8981\u88AB\u4EE3\u7406\u5BF9\u8C61\u7684\u8C03\u7528\u5904\u7406\u5668\u5B9E\u73B0\u7684\u63A5\u53E3, \u4F60\u4E5F\u53EF\u4EE5\u7406\u89E3\u4E3A\u8BE5\u63A5\u53E3\u7684\u5B9E\u73B0\u90FD\u662F\u8C03\u7528\u5904\u7406\u5668. \u6BCF\u4E00\u4E2A\u4EE3\u7406\u5BF9\u8C61\u90FD\u6709\u4E00\u4E2A\u76F8\u5173\u8054\u7684\u8C03\u7528\u5904\u7406\u5668. \u5F53\u4EE3\u7406\u5BF9\u8C61\u8C03\u7528\u4E00\u4E2A\u65B9\u6CD5, \u8BE5\u65B9\u6CD5\u7684\u8C03\u7528\u662F\u88AB\u5206\u914D\u5230\u5176\u8C03\u7528\u5904\u7406\u5668\u7684<code>invoke</code>\u65B9\u6CD5\u4E2D\u6267\u884C.</p><p><code>invoke()</code>\u8BE5\u65B9\u6CD5\u7528\u6765\u5904\u7406\u4EE3\u7406\u5BF9\u8C61\u7684\u65B9\u6CD5\u8C03\u7528, \u5E76\u8FD4\u56DE\u7ED3\u679C. \u5F53\u4EE3\u7406\u5BF9\u8C61\u8C03\u7528\u4E0E\u4E4B\u76F8\u5173\u8054\u7684\u65B9\u6CD5\u65F6, \u8BE5\u65B9\u6CD5\u4F1A\u88AB\u4E00\u4E2A\u8C03\u7528\u5904\u7406\u5668\u8C03\u7528. \u8B6C\u5982\u6211\u4EEC\u7684<code>CommonInvocationHandler</code>\u5C31\u662F\u4E00\u4E2A\u8C03\u7528\u5904\u7406\u5668. \u5F53\u4EE3\u7406\u7C7B\u8C03\u7528<code>sell</code>\u65B9\u6CD5\u7684\u65F6\u5019, \u5C31\u4F1A\u8C03\u7528\u8BE5\u65B9\u6CD5\u8FDB\u884C\u5904\u7406, \u5E76\u8FD4\u56DE\u76F8\u5E94\u7684\u7ED3\u679C.</p><p>\u4E0B\u9762\u901A\u8FC7\u6D4B\u8BD5\u7C7B, \u8C03\u7528\u4E00\u4E0B:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestProxy</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">CommonInvocationHandler</span> invocationHandler <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CommonInvocationHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u52A8\u6001\u4EE3\u7406</span>
        <span class="token class-name">ISell</span> sellTicket <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SellTicket</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        invocationHandler<span class="token punctuation">.</span><span class="token function">setObject</span><span class="token punctuation">(</span>sellTicket<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ISell</span> sellProxy <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">ISell</span><span class="token punctuation">)</span> invocationHandler<span class="token punctuation">.</span><span class="token function">getProxy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        sellProxy<span class="token punctuation">.</span><span class="token function">sell</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u770B\u5230\u5982\u679C\u65B0\u589E\u52A0\u4E86\u63A5\u53E3, \u6211\u4EEC\u5C31\u4E0D\u518D\u9700\u8981\u4FEE\u6539<code>CommonInvocationHandler</code>, \u53EA\u9700\u8981\u589E\u52A0\u5BF9\u5E94\u7684\u63A5\u53E3\u4E0E\u5B9E\u73B0, \u4E4B\u540E\u521B\u5EFA\u4EE3\u7406\u5BF9\u8C61\u8C03\u7528\u5373\u53EF.</p><p>\u8B6C\u5982, \u589E\u52A0\u8D2D\u4E70\u7684\u903B\u8F91:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">IBuy</span> <span class="token punctuation">{</span>
    <span class="token keyword">void</span> <span class="token function">buy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BuyFlower</span> <span class="token keyword">implements</span> <span class="token class-name">IBuy</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">buy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;====== \u4E70\u82B1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6D4B\u8BD5\u7C7B\u4E2D\u589E\u52A0:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">IBuy</span> buyFlower <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BuyFlower</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
invocationHandler<span class="token punctuation">.</span><span class="token function">setObject</span><span class="token punctuation">(</span>buyFlower<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">IBuy</span> buyProxy <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">IBuy</span><span class="token punctuation">)</span> invocationHandler<span class="token punctuation">.</span><span class="token function">getProxy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
buyProxy<span class="token punctuation">.</span><span class="token function">buy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u52A8\u6001\u4EE3\u7406\u6E90\u7801\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#\u52A8\u6001\u4EE3\u7406\u6E90\u7801\u5206\u6790" aria-hidden="true">#</a> \u52A8\u6001\u4EE3\u7406\u6E90\u7801\u5206\u6790</h2><p>\u9996\u5148, \u5148\u770B\u4E00\u4E0B\u5982\u4F55\u83B7\u53D6\u4E00\u4E2A\u4EE3\u7406\u5BF9\u8C61. \u6211\u4EEC\u660E\u660E\u6CA1\u6709\u5199\u4EE3\u7406\u7C7B\u554A?\u548B\u6709\u4E86\u4EE3\u7406\u5BF9\u8C61\u4E86\u5462?</p><p>java\u865A\u62DF\u673A\u89C4\u8303\u89C4\u5B9A\u7C7B\u7684\u52A0\u8F7D\u9636\u6BB5\u865A\u62DF\u673A\u9700\u8981:</p><ol><li>\u901A\u8FC7\u4E00\u4E2A\u7C7B\u7684\u5168\u9650\u5B9A\u540D\u6765\u83B7\u53D6\u5B9A\u4E49\u6B64\u7C7B\u7684\u4E8C\u8FDB\u5236\u5B57\u8282\u6D41.</li><li>\u5C06\u8FD9\u4E2A\u5B57\u8282\u6D41\u6240\u4EE3\u8868\u7684\u9759\u6001\u5B58\u50A8\u7ED3\u6784\u8F6C\u5316\u4E3A\u65B9\u6CD5\u533A\u7684\u8FD0\u884C\u65F6\u6570\u636E\u7ED3\u6784.</li><li>\u5728\u5185\u5B58\u4E2D\u751F\u6210\u4E00\u4E2A\u4EE3\u8868\u8FD9\u4E2A\u7C7B\u7684java.lang.Class\u5BF9\u8C61, \u4F5C\u4E3A\u65B9\u6CD5\u533A\u8FD9\u4E2A\u7C7B\u7684\u5404\u79CD\u6570\u636E\u7684\u8BBF\u95EE\u5165\u53E3.</li></ol><p>\u5176\u4E2D<code>\u901A\u8FC7\u4E00\u4E2A\u7C7B\u7684\u5168\u9650\u5B9A\u540D\u6765\u83B7\u53D6\u5B9A\u4E49\u6B64\u7C7B\u7684\u4E8C\u8FDB\u5236\u5B57\u8282\u6D41</code>\u6CA1\u6709\u89C4\u5B9A\u4E8C\u8FDB\u5236\u5B57\u8282\u6D41\u4ECE\u4F55\u5904\u83B7\u53D6. \u56E0\u6B64, \u5E38\u89C1\u7684\u52A0\u8F7D\u65B9\u5F0F\u5982\u4E0B:</p><ol><li>\u4ECEzip\u538B\u7F29\u5305\u4E2D\u8BFB\u53D6, \u5E76\u6210\u4E3Ajar, war, ear\u683C\u5F0F\u7684\u57FA\u7840.</li><li>\u4ECE\u7F51\u7EDC\u4E2D\u83B7\u53D6, \u5178\u578B\u7684\u5E94\u7528\u4E3A web applet.</li><li>\u901A\u8FC7\u52A8\u6001\u4EE3\u7406\u5728\u8FD0\u884C\u65F6\u751F\u6210.</li><li>\u901A\u8FC7\u5176\u4ED6\u6587\u4EF6\u751F\u6210, \u6BD4\u5982jsp\u751F\u6210\u5BF9\u5E94\u7684class</li><li>\u4ECE\u6570\u636E\u5E93\u8BFB\u53D6</li><li>\u4ECE\u52A0\u5BC6\u6587\u4EF6\u4E2D\u83B7\u53D6 ......</li></ol><p>\u4EE5\u4E0A\u5185\u5BB9\u6765\u81EA\u300A\u6DF1\u5165\u7406\u89E3java\u865A\u62DF\u673A\u300B\u8FD9\u672C\u4E66.</p><p>\u6211\u4EEC\u5C31\u4ECE<code>Proxy.newProxyInstance(object.getClass().getClassLoader(), object.getClass().getInterfaces(), this);</code>\u5F00\u59CB\u770B\u8D77.</p><p>\u6211\u4EEC\u8BF4\u8FC7<code>Proxy</code>\u7C7B\u63D0\u4F9B\u521B\u5EFA\u52A8\u6001\u4EE3\u7406\u7C7B\u548C\u5B9E\u4F8B\u7684\u9759\u6001\u65B9\u6CD5, \u540C\u65F6\u5B83\u4E5F\u662F\u6240\u6709\u521B\u5EFA\u51FA\u7684\u4EE3\u7406\u7C7B\u7684\u7236\u7C7B. \u6709\u591A\u79CD\u751F\u6210\u4EE3\u7406\u5BF9\u8C61\u7684\u65B9\u6CD5, \u4E0A\u9762\u7684\u662F\u6700\u7B80\u5355\u7684\u4E00\u79CD\u521B\u5EFA\u65B9\u5F0F.</p><p>\u5B83\u7684\u4E09\u4E2A\u53C2\u6570\u4F9D\u6B21\u662F: \u4E1A\u52A1\u7C7B\u7684\u7C7B\u52A0\u8F7D\u5668, \u4E1A\u52A1\u7C7B\u7684\u63A5\u53E3, \u8C03\u7528\u5904\u7406\u5668\u5BF9\u8C61.</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// todo \u89E3\u51B3\u53CC\u91CD\u53CD\u5C04\u6F0F\u6D1E?</span>
<span class="token annotation punctuation">@CallerSensitive</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Object</span> <span class="token function">newProxyInstance</span><span class="token punctuation">(</span><span class="token class-name">ClassLoader</span> loader<span class="token punctuation">,</span>
                                          <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> interfaces<span class="token punctuation">,</span>
                                          <span class="token class-name">InvocationHandler</span> h<span class="token punctuation">)</span>
        <span class="token keyword">throws</span> <span class="token class-name">IllegalArgumentException</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">requireNonNull</span><span class="token punctuation">(</span>h<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">final</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> intfs <span class="token operator">=</span> interfaces<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u7531\u4E8E\u6211\u4EEC\u6CA1\u6709\u914D\u7F6E\u5B89\u5168\u68C0\u67E5\u7684\u914D\u7F6E, \u56E0\u6B64sm\u4E3Anull</span>
        <span class="token keyword">final</span> <span class="token class-name">SecurityManager</span> sm <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getSecurityManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>sm <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">checkProxyAccess</span><span class="token punctuation">(</span><span class="token class-name">Reflection</span><span class="token punctuation">.</span><span class="token function">getCallerClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> loader<span class="token punctuation">,</span> intfs<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// \u83B7\u53D6\u4EE3\u7406\u7C7B\u5BF9\u8C61</span>
        <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> cl <span class="token operator">=</span> <span class="token function">getProxyClass0</span><span class="token punctuation">(</span>loader<span class="token punctuation">,</span> intfs<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>sm <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">checkNewProxyPermission</span><span class="token punctuation">(</span><span class="token class-name">Reflection</span><span class="token punctuation">.</span><span class="token function">getCallerClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> cl<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// \u83B7\u53D6\u6784\u9020\u5668, \u901A\u8FC7\u6784\u9020\u5668\u4F20\u53C2\u65B9\u5F0F\u521B\u5EFA\u4EE3\u7406\u5BF9\u8C61.</span>
            <span class="token keyword">final</span> <span class="token class-name">Constructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> cons <span class="token operator">=</span> cl<span class="token punctuation">.</span><span class="token function">getConstructor</span><span class="token punctuation">(</span>constructorParams<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">final</span> <span class="token class-name">InvocationHandler</span> ih <span class="token operator">=</span> h<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">Modifier</span><span class="token punctuation">.</span><span class="token function">isPublic</span><span class="token punctuation">(</span>cl<span class="token punctuation">.</span><span class="token function">getModifiers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">AccessController</span><span class="token punctuation">.</span><span class="token function">doPrivileged</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">PrivilegedAction</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">public</span> <span class="token class-name">Void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        cons<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// \u521B\u5EFA\u4EE3\u7406\u5BF9\u8C61, \u5E76\u5C06InvocationHandler\u4F20\u5165, \u5F53\u6211\u4EEC\u8C03\u7528\u63A5\u53E3(sell)\u65B9\u6CD5\u65F6\u5C31\u4F1A\u6267\u884CInvocationHandler\u4E2D\u7684invoke</span>
            <span class="token comment">// \u6587\u7AE0\u7684\u6700\u540E\u4E00\u8282\u6211\u4EEC\u4F1A\u770B\u770B\u4EE3\u7406\u7C7B\u7684\u5185\u5BB9</span>
            <span class="token keyword">return</span> cons<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>h<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IllegalAccessException</span><span class="token operator">|</span><span class="token class-name">InstantiationException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u4E3B\u8981\u770B<code>getProxyClass0</code>\u505A\u4E86\u4EC0\u4E48\u4E8B\u60C5, \u6BD5\u7ADF\u662F\u4ECE\u8FD9\u4E2A\u65B9\u6CD5\u6211\u4EEC\u7684\u5143\u7A7A\u95F4\u624D\u6709\u4E86\u4EE3\u7406\u7C7B\u5BF9\u8C61. \u4E4B\u540E\u90FD\u662F\u901A\u8FC7\u53CD\u5C04\u83B7\u53D6\u4EE3\u7406\u5BF9\u8C61.</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">WeakCache</span><span class="token operator">&lt;</span><span class="token class-name">ClassLoader</span><span class="token punctuation">,</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token operator">&gt;</span>
        proxyClassCache <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WeakCache</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">KeyFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">ProxyClassFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">getProxyClass0</span><span class="token punctuation">(</span><span class="token class-name">ClassLoader</span> loader<span class="token punctuation">,</span>
                                        <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> interfaces<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>interfaces<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">65535</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;interface limit exceeded&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// If the proxy class defined by the given loader implementing</span>
    <span class="token comment">// the given interfaces exists, this will simply return the cached copy;</span>
    <span class="token comment">// otherwise, it will create the proxy class via the ProxyClassFactory</span>
    <span class="token keyword">return</span> proxyClassCache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>loader<span class="token punctuation">,</span> interfaces<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>proxyClassCache.get</code>\u4ECE\u7F13\u5B58\u4E2D\u83B7\u53D6\u5DF2\u7ECF\u6839\u636E<code>loader</code>\u548C<code>interfaces</code>\u751F\u6210\u7684\u4EE3\u7406\u7C7B. \u5982\u679C\u4E0D\u5B58\u5728\u5219\u91CD\u65B0\u751F\u6210.</p><p><code>WeakCache</code>\u4F7F\u7528\u4E24\u5C42ConcurrentHashMap\u4F5C\u4E3A\u7F13\u5B58, \u7B2C\u4E00\u5C42\u7684key\u901A\u8FC7classloader\u751F\u6210, \u7B2C\u4E8C\u5C42\u7684key\u548Cvalue\u9700\u8981\u901A\u8FC7\u6784\u9020\u5668\u4F20\u5165subKey\u548Cvalue\u7684\u751F\u6210\u7B56\u7565.</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">WeakCache</span><span class="token punctuation">(</span><span class="token class-name">BiFunction</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">P</span><span class="token punctuation">,</span> <span class="token operator">?</span><span class="token punctuation">&gt;</span></span> subKeyFactory<span class="token punctuation">,</span>
                     <span class="token class-name">BiFunction</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">P</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> valueFactory<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>subKeyFactory <span class="token operator">=</span> <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">requireNonNull</span><span class="token punctuation">(</span>subKeyFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>valueFactory <span class="token operator">=</span> <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">requireNonNull</span><span class="token punctuation">(</span>valueFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>subKey\u7684\u751F\u6210\u5982\u4E0B, \u9488\u5BF9\u4E0D\u5B58\u5728\u63A5\u53E3, \u6709\u4E00\u4E2A\u63A5\u53E3, \u4E24\u4E2A\u63A5\u53E3, \u4E24\u4E2A\u63A5\u53E3\u4EE5\u4E0A\u6709\u4E0D\u540C\u7684\u5B9E\u73B0.</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Object</span> key0 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">KeyFactory</span>
    <span class="token keyword">implements</span> <span class="token class-name">BiFunction</span><span class="token operator">&lt;</span><span class="token class-name">ClassLoader</span><span class="token punctuation">,</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token operator">&gt;</span>
<span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">apply</span><span class="token punctuation">(</span><span class="token class-name">ClassLoader</span> classLoader<span class="token punctuation">,</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> interfaces<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span>interfaces<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Key1</span><span class="token punctuation">(</span>interfaces<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// the most frequent</span>
            <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Key2</span><span class="token punctuation">(</span>interfaces<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> interfaces<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span> <span class="token keyword">return</span> key0<span class="token punctuation">;</span>
            <span class="token keyword">default</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">KeyX</span><span class="token punctuation">(</span>interfaces<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>ProxyClassFactory</code>\u662F\u4EE3\u7406\u7C7B\u5BF9\u8C61\u7684\u751F\u6210\u7B56\u7565. \u901A\u8FC7\u63A5\u53E3\u7684\u5305\u8DEF\u5F84\u52A0\u4E0A<code>$Proxy</code>\u4EE5\u53CA\u4E00\u4E2A\u539F\u5B50\u8BA1\u6570\u503C\u5F97\u5230\u4E00\u4E2A\u5168\u9650\u5B9A\u540D. \u6CE8\u610F\u53EA\u6709\u975E\u516C\u5171\u63A5\u53E3(\u8BBF\u95EE\u6807\u8BC6\u4E0D\u662Fpublic)\u624D\u4F1A\u751F\u6210\u5728\u5305\u8DEF\u5F84\u4E0B. \u5BF9\u4E8E\u975E\u516C\u5171\u7684\u63A5\u53E3, \u9700\u8981\u68C0\u9A8C\u662F\u5426\u6240\u6709\u7684\u63A5\u53E3\u90FD\u5728\u540C\u4E00\u5305\u8DEF\u5F84\u4E0B(\u6BD5\u7ADF\u4F60\u7684\u63A5\u53E3\u4E0D\u662F\u516C\u5171\u7684\u4F60\u662F\u5982\u4F55\u8BBF\u95EE\u5230\u5176\u4ED6\u8DEF\u5F84\u4E0B\u7684\u63A5\u53E3\u7684?).</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">ProxyClassFactory</span>
    <span class="token keyword">implements</span> <span class="token class-name">BiFunction</span><span class="token operator">&lt;</span><span class="token class-name">ClassLoader</span><span class="token punctuation">,</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token operator">&gt;</span>
<span class="token punctuation">{</span>
    <span class="token comment">// prefix for all proxy class names</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> proxyClassNamePrefix <span class="token operator">=</span> <span class="token string">&quot;$Proxy&quot;</span><span class="token punctuation">;</span>

    <span class="token comment">// next number to use for generation of unique proxy class names</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">AtomicLong</span> nextUniqueNumber <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicLong</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">apply</span><span class="token punctuation">(</span><span class="token class-name">ClassLoader</span> loader<span class="token punctuation">,</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> interfaces<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Class</span><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span><span class="token punctuation">,</span> <span class="token class-name">Boolean</span><span class="token punctuation">&gt;</span></span> interfaceSet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">IdentityHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>interfaces<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u904D\u5386\u6240\u6709\u63A5\u53E3, \u4E3B\u8981\u8FDB\u884C\u5404\u4E2A\u63A5\u53E3\u7684\u6821\u9A8C</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> intf <span class="token operator">:</span> interfaces<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">/*
                * Verify that the class loader resolves the name of this
                * interface to the same Class object.
                */</span>
            <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> interfaceClass <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                interfaceClass <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span>intf<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> loader<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ClassNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>interfaceClass <span class="token operator">!=</span> intf<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span>
                    intf <span class="token operator">+</span> <span class="token string">&quot; is not visible from class loader&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">/*
                * Verify that the Class object actually represents an
                * interface.
                */</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>interfaceClass<span class="token punctuation">.</span><span class="token function">isInterface</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span>
                    interfaceClass<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; is not an interface&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">/*
                * Verify that this interface is not a duplicate.
                */</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>interfaceSet<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>interfaceClass<span class="token punctuation">,</span> <span class="token class-name">Boolean</span><span class="token punctuation">.</span><span class="token constant">TRUE</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span>
                    <span class="token string">&quot;repeated interface: &quot;</span> <span class="token operator">+</span> interfaceClass<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// \u4EE3\u7406\u7C7B\u7684\u5168\u9650\u5B9A\u540D, \u6700\u7EC8\u7684\u540D\u79F0\u7531\u5305\u540D+$proxy+num\u6784\u6210</span>
        <span class="token class-name">String</span> proxyPkg <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>     <span class="token comment">// package to define proxy class in</span>
        <span class="token keyword">int</span> accessFlags <span class="token operator">=</span> <span class="token class-name">Modifier</span><span class="token punctuation">.</span><span class="token constant">PUBLIC</span> <span class="token operator">|</span> <span class="token class-name">Modifier</span><span class="token punctuation">.</span><span class="token constant">FINAL</span><span class="token punctuation">;</span>

        <span class="token comment">/*
            * Record the package of a non-public proxy interface so that the
            * proxy class will be defined in the same package.  Verify that
            * all non-public proxy interfaces are in the same package.
            */</span>
        <span class="token comment">// \u904D\u5386\u6240\u6709\u63A5\u53E3\u83B7\u53D6\u5305\u540D, \u540C\u65F6\u68C0\u9A8C\u6240\u6709\u7684\u5305\u540D\u662F\u5426\u76F8\u540C\u5373\u63A5\u53E3\u662F\u5426\u5728\u540C\u4E00\u8DEF\u5F84\u4E0B</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> intf <span class="token operator">:</span> interfaces<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> flags <span class="token operator">=</span> intf<span class="token punctuation">.</span><span class="token function">getModifiers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u5224\u65AD\u8BBF\u95EE\u6807\u8BC6\u662F\u5426\u4E3Apublic</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">Modifier</span><span class="token punctuation">.</span><span class="token function">isPublic</span><span class="token punctuation">(</span>flags<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                accessFlags <span class="token operator">=</span> <span class="token class-name">Modifier</span><span class="token punctuation">.</span><span class="token constant">FINAL</span><span class="token punctuation">;</span>
                <span class="token class-name">String</span> name <span class="token operator">=</span> intf<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">int</span> n <span class="token operator">=</span> name<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token char">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">String</span> pkg <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>n <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">&quot;&quot;</span> <span class="token operator">:</span> name<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>proxyPkg <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    proxyPkg <span class="token operator">=</span> pkg<span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>pkg<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>proxyPkg<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span>
                        <span class="token string">&quot;non-public interfaces from different packages&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// \u5982\u679C\u5305\u540D\u4E0D\u5B58\u5728 \u5219\u4F7F\u7528\u9ED8\u8BA4\u7684\u5305\u540D</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>proxyPkg <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// if no non-public proxy interfaces, use com.sun.proxy package</span>
            proxyPkg <span class="token operator">=</span> <span class="token class-name">ReflectUtil</span><span class="token punctuation">.</span><span class="token constant">PROXY_PACKAGE</span> <span class="token operator">+</span> <span class="token string">&quot;.&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">/*
            * Choose a name for the proxy class to generate.
            */</span>
        <span class="token keyword">long</span> num <span class="token operator">=</span> nextUniqueNumber<span class="token punctuation">.</span><span class="token function">getAndIncrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> proxyName <span class="token operator">=</span> proxyPkg <span class="token operator">+</span> proxyClassNamePrefix <span class="token operator">+</span> num<span class="token punctuation">;</span>

        <span class="token comment">/*
            * Generate the specified proxy class.
            */</span>
        <span class="token comment">// \u751F\u6210\u4EE3\u7406\u7C7B\u7684\u4E8C\u8FDB\u5236\u5B57\u8282\u7801</span>
        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> proxyClassFile <span class="token operator">=</span> <span class="token class-name">ProxyGenerator</span><span class="token punctuation">.</span><span class="token function">generateProxyClass</span><span class="token punctuation">(</span>
            proxyName<span class="token punctuation">,</span> interfaces<span class="token punctuation">,</span> accessFlags<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u83B7\u53D6\u7C7B\u5BF9\u8C61</span>
            <span class="token keyword">return</span> <span class="token function">defineClass0</span><span class="token punctuation">(</span>loader<span class="token punctuation">,</span> proxyName<span class="token punctuation">,</span>
                                proxyClassFile<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> proxyClassFile<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ClassFormatError</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">/*
                * A ClassFormatError here means that (barring bugs in the
                * proxy class generation code) there was some other
                * invalid aspect of the arguments supplied to the proxy
                * class creation (such as virtual machine limitations
                * exceeded).
                */</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>byte[] proxyClassFile = ProxyGenerator.generateProxyClass(proxyName, interfaces, accessFlags);</code> \u8FD9\u662F\u751F\u6210\u4EE3\u7406\u7C7B\u4E8C\u8FDB\u5236\u5B57\u8282\u6D41\u7684\u5173\u952E.</p><p><code>defineClass0(loader, proxyName, proxyClassFile, 0, proxyClassFile.length);</code> \u6839\u636E\u5168\u9650\u5B9A\u540D\u548C\u4EE3\u7406\u7C7B\u5B57\u8282\u6D41\u8FD4\u56DE\u4EE3\u7406\u7C7B\u5BF9\u8C61.</p><p>\u81F3\u4E8E\u751F\u6210class\u7684\u5177\u4F53\u4EE3\u7801, \u53EF\u4EE5\u67E5\u770B<code>sun.misc.ProxyGenerator#generateClassFile</code>\u65B9\u6CD5. \u8FD9\u91CC\u4E0D\u518D\u6DF1\u7A76... \u90A3\u6BB5\u6E90\u7801\u5C31\u662F\u5728\u7EAF\u624B\u64B8class.</p><h2 id="\u4EE3\u7406\u7C7B\u6E90\u7801" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7406\u7C7B\u6E90\u7801" aria-hidden="true">#</a> \u4EE3\u7406\u7C7B\u6E90\u7801</h2><p><code>System.getProperties().setProperty(&quot;sun.misc.ProxyGenerator.saveGeneratedFiles&quot;, &quot;true&quot;);</code> \u53EF\u4EE5\u5C06\u751F\u6210\u7684\u4EE3\u7406\u7C7B(class)\u4EE5\u6587\u4EF6\u5F62\u5F0F\u4FDD\u5B58\u4E0B\u6765.</p><p>\u6CE8\u610F\u6211\u4EEC\u5728\u751F\u6210\u4EE3\u7406\u7C7B\u7684\u65F6\u5019, \u5982\u679C\u63A5\u53E3\u8BBF\u95EE\u6807\u8BC6\u4E0D\u662Fpublic(<code>!Modifier.isPublic(flags)</code>)\u624D\u4F1A\u751F\u6210\u5728\u63A5\u53E3\u76EE\u5F55\u4E2D, \u5F53\u662Fpublic\u7684\u65F6\u5019\u4F1A\u751F\u6210\u5728<code>public static final String PROXY_PACKAGE = &quot;com.sun.proxy&quot;;</code>\u76EE\u5F55\u4E2D.</p><p><img src="https://tech.nikolazhang.top/2020-06-15-04-53-40.png" alt="2020-06-15-04-53-40" loading="lazy"></p><p>\u5176\u5185\u5BB9\u5982\u4E0B, \u53EF\u4EE5\u770B\u5230\u4EE3\u7406\u7C7B\u7EE7\u627F\u4E86<code>Proxy</code>, \u5E76\u5B9E\u73B0\u4E86<code>ISell</code>\u63A5\u53E3, \u8FD9\u4E2A\u63A5\u53E3\u5C31\u662F\u6211\u4EEC\u60F3\u8981\u4EE3\u7406\u7684<code>SellTicket</code>\u5B9E\u73B0\u7684\u63A5\u53E3. \u91CD\u5199\u7684<code>sell()</code>\u65B9\u6CD5\u4E2D\u8C03\u7528\u4E86<code>InvocationHandler</code>\u4E2D\u7684<code>invoke</code>\u65B9\u6CD5.</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//</span>
<span class="token comment">// Source code recreated from a .class file by IntelliJ IDEA</span>
<span class="token comment">// (powered by Fernflower decompiler)</span>
<span class="token comment">//</span>

<span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>proxy</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">InvocationHandler</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">Method</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">Proxy</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">UndeclaredThrowableException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">proxy<span class="token punctuation">.</span></span><span class="token class-name">ISell</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> $<span class="token class-name">Proxy0</span> <span class="token keyword">extends</span> <span class="token class-name">Proxy</span> <span class="token keyword">implements</span> <span class="token class-name">ISell</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Method</span> m1<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Method</span> m2<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Method</span> m3<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Method</span> m0<span class="token punctuation">;</span>

    <span class="token comment">// \u53CD\u5C04\u901A\u8FC7\u6784\u9020\u5668\u4F20\u53C2\u4F20\u5165\u8C03\u7528\u5904\u7406\u5668InvocationHandler</span>
    <span class="token keyword">public</span> $<span class="token class-name">Proxy0</span><span class="token punctuation">(</span><span class="token class-name">InvocationHandler</span> var1<span class="token punctuation">)</span> <span class="token keyword">throws</span>  <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>var1<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">Object</span> var1<span class="token punctuation">)</span> <span class="token keyword">throws</span>  <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">Boolean</span><span class="token punctuation">)</span><span class="token keyword">super</span><span class="token punctuation">.</span>h<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> m1<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>var1<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RuntimeException</span> <span class="token operator">|</span> <span class="token class-name">Error</span> var3<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> var3<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> var4<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">UndeclaredThrowableException</span><span class="token punctuation">(</span>var4<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span>  <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token keyword">super</span><span class="token punctuation">.</span>h<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> m2<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RuntimeException</span> <span class="token operator">|</span> <span class="token class-name">Error</span> var2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> var2<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> var3<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">UndeclaredThrowableException</span><span class="token punctuation">(</span>var3<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u7EE7\u627FISell\u5E76\u5B9E\u73B0sell\u65B9\u6CD5, \u8FD9\u91CC\u5B9E\u9645\u8C03\u7528\u4E86\u8C03\u7528\u5904\u7406\u5668\u7684invoke\u65B9\u6CD5.</span>
    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">sell</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span>  <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">super</span><span class="token punctuation">.</span>h<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> m3<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RuntimeException</span> <span class="token operator">|</span> <span class="token class-name">Error</span> var2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> var2<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> var3<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">UndeclaredThrowableException</span><span class="token punctuation">(</span>var3<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span>  <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">)</span><span class="token keyword">super</span><span class="token punctuation">.</span>h<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> m0<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RuntimeException</span> <span class="token operator">|</span> <span class="token class-name">Error</span> var2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> var2<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> var3<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">UndeclaredThrowableException</span><span class="token punctuation">(</span>var3<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            m1 <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;java.lang.Object&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">&quot;equals&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;java.lang.Object&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            m2 <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;java.lang.Object&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">&quot;toString&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            m3 <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;proxy.ISell&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">&quot;sell&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            m0 <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;java.lang.Object&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">&quot;hashCode&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">NoSuchMethodException</span> var2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NoSuchMethodError</span><span class="token punctuation">(</span>var2<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ClassNotFoundException</span> var3<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NoClassDefFoundError</span><span class="token punctuation">(</span>var3<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="end" tabindex="-1"><a class="header-anchor" href="#end" aria-hidden="true">#</a> end</h2><p>\u6700\u540E\u5BF9\u8C03\u7528\u5904\u7406\u5668\u8FDB\u884C\u4E86\u4E00\u70B9\u4FEE\u6539, \u53EF\u4EE5\u53C2\u8003\u4F7F\u7528.</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">InvocationHandler</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">Method</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">Proxy</span></span><span class="token punctuation">;</span>


<span class="token doc-comment comment">/**
 * @Description:  \u4E00\u4E2A\u516C\u5171\u7684\u8C03\u7528\u5904\u7406\u5668, \u5982\u679C\u4E3A\u4E86\u66F4\u597D\u7684\u533A\u5206\u5404\u79CD\u4E1A\u52A1, object\u53EF\u4EE5\u4F7F\u7528\u6CDB\u578B\u65B9\u5F0F,
 * \u4E5F\u5C31\u662F\u8981\u591A\u5B9E\u73B0\u51E0\u4E2A\u4E0D\u540C\u7684InvocationHandler
 * @Author:       nikola
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CommonInvocationHandler</span> <span class="token keyword">implements</span> <span class="token class-name">InvocationHandler</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">Object</span> object<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">Object</span> proxy<span class="token punctuation">,</span> <span class="token class-name">Method</span> method<span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>
                <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;do something before %s&quot;</span><span class="token punctuation">,</span> method<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Object</span> res <span class="token operator">=</span> method<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>object<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>
                <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;do something after %s, return %s&quot;</span><span class="token punctuation">,</span> method<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \u83B7\u53D6\u4E00\u4E2A\u4EE3\u7406\u5BF9\u8C61
     * <span class="token keyword">@param</span> <span class="token parameter">object</span> \u88AB\u4EE3\u7406\u7684\u5BF9\u8C61, \u88AB\u4EE3\u7406\u7C7B\u4E0E\u4EE3\u7406\u7C7B\u90FD\u8981\u5B9E\u73B0\u76F8\u540C\u63A5\u53E3.
     * <span class="token keyword">@return</span> \u4EE3\u7406\u5BF9\u8C61
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">getProxy</span><span class="token punctuation">(</span><span class="token class-name">Object</span> object<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>object <span class="token operator">=</span> object<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">Proxy</span><span class="token punctuation">.</span><span class="token function">newProxyInstance</span><span class="token punctuation">(</span>object<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                object<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getInterfaces</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,64);function v(m,b){const s=l("Mermaid");return p(),t("div",null,[u,k,r,e(s,{id:"mermaid-11",code:"eNpLL0osyFAIcbLmykyMfta39Gn/4lgFXV07hcTop+vmPe/bEAuSAYsUJEY/2b34+YQ2oFABSAjCe75x94sNzc+nrLBJKrKD6Hk2beezzVPBplhzcQEAoYcuhQ=="}),d])}const g=a(i,[["render",v],["__file","\u4EE3\u7406.html.vue"]]);export{g as default};
