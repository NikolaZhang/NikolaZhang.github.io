import{_ as i}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as t,o,c,a as n,b as a,d as e,e as l}from"./app-MeKfRsNW.js";const p={},r=n("blockquote",null,[n("p",null,"这篇博客主要分享一下自己搭建这个博客中遇到的一些问题和经验。")],-1),d=n("h2",{id:"准备",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#准备","aria-hidden":"true"},"#"),a(" 准备")],-1),u=n("br",null,null,-1),h=n("br",null,null,-1),b=n("img",{src:"http://image.nikolazhang.top/20191229173723.png",alt:"gitee部署博客"},null,-1),m=n("br",null,null,-1),k=n("img",{src:"http://image.nikolazhang.top/20191229173845.png",alt:"部署详情"},null,-1),_=n("br",null,null,-1),v=n("br",null,null,-1),g={href:"https://nikolazhang.gitee.io/nikola-blog/",target:"_blank",rel:"noopener noreferrer"},f=n("br",null,null,-1),x=n("img",{src:"http://image.nikolazhang.top/20191229174157.png",alt:"域名"},null,-1),y=n("br",null,null,-1),j=n("p",null,"这个博客是搭建在阿里云服务器上的. (单核2G89 你值得拥有, 但是不得不吐槽的是2G不够用).",-1),w=n("h2",{id:"网站部署",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#网站部署","aria-hidden":"true"},"#"),a(" 网站部署")],-1),z=n("h3",{id:"一键式部署",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#一键式部署","aria-hidden":"true"},"#"),a(" 一键式部署")],-1),$={href:"https://hexo.io/zh-cn/docs/one-command-deployment",target:"_blank",rel:"noopener noreferrer"},N=n("br",null,null,-1),q=n("br",null,null,-1),V=n("code",null,"_config.yml",-1),Y=l(`<div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">deploy</span><span class="token punctuation">:</span>
  <span class="token key atrule">type</span><span class="token punctuation">:</span> git
  <span class="token key atrule">repo</span><span class="token punctuation">:</span> git@gitee.com<span class="token punctuation">:</span>NikolaZhang/nikola<span class="token punctuation">-</span>blog.git
  <span class="token key atrule">branch</span><span class="token punctuation">:</span> master
  <span class="token key atrule">message</span><span class="token punctuation">:</span> <span class="token string">&#39;web updata: {{now(&quot;YYYY-MM-DD HH/mm/ss&quot;)}}&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>博客的静态文件推送到代码库之后, 通过jenkins拉取代码, 将public/目录下的文件全部拷贝到网站的root目录下. 后面的部署过程可以说对于我们是无感的.<br> 我们只要执行以下<code>hexo g -d</code>就完成了 生成--&gt;推送--&gt;发布 整个过程 (<br> 最全的命令应该是<code>hexo clean &amp;&amp; hexo g -d</code> 先将之前生成的目录清除掉).</p><p>这种方式就带来了一个问题, 如果换个终端就要重新配置一套环境. 虽然安装的东西不多, 但是总觉得有些累赘.<br> 因此我强烈推荐你使用下面的方式.</p><h3 id="另一种部署方式" tabindex="-1"><a class="header-anchor" href="#另一种部署方式" aria-hidden="true">#</a> 另一种部署方式</h3><p>这种部署方式, 就是将环境配置到服务器去, 使用git按照正常流程提交代码, 之后的构建过程, 由服务器完成. 构建之后将, public/下文件拷贝.<br> 因此对于终端来说只要有git就可以了.</p><p>无论是哪种部署方式我们都需要jenkins帮助我们完成构建.</p><h2 id="关于静态资源文件" tabindex="-1"><a class="header-anchor" href="#关于静态资源文件" aria-hidden="true">#</a> 关于静态资源文件</h2><p>不建议将静态资源放到博客目录中, 可以放到第三方的云存储中. 比如七牛等.<br> 如果你是用vscode进行编辑文章, 建议安装<code>qiniu-upload-image</code>插件, 这个插件可以将截图,本地图片上传到七牛,并将文件的链接返回.</p><p><img src="http://image.nikolazhang.top/res.gif" alt="res"></p><h2 id="关于博客的目录与文件介绍" tabindex="-1"><a class="header-anchor" href="#关于博客的目录与文件介绍" aria-hidden="true">#</a> 关于博客的目录与文件介绍</h2><p>主要介绍一下经常操作的目录与文件</p>`,11),B=n("li",null,[a("_config.yml 博客的基本信息配置"),n("br"),a(" 具体配置信息为:可以参考"),n("code",null,"https://hexo.io/zh-cn/docs/configuration")],-1),E=n("li",null,"public/ 这个目录上面已经提到了是生成的最终的网页. 所有变动都会被覆盖, 因此不进行操作.",-1),F=n("li",null,"scaffolds是博客脚手架文件夹 配置了生成一个博客文章的模板",-1),H=n("li",null,"source是博客的源文件, 该目录下也主要用来放置我们的markdown格式的文章.",-1),I={href:"https://hexo.io/zh-cn/docs/themes",target:"_blank",rel:"noopener noreferrer"},M=n("li",null,"主题中的_config.yml用来配置该主题的样式",-1),X=n("li",null,"主题中的layout是构建博客主题的具体逻辑, 如果有什么配置不清楚基本可以在这里找到对应的代码, 大概就知道该怎么配置markdown或者yml了.",-1),D=l(`<p>总的来说, 我们最常操作的无非就是我们的博客文件(.md)还有配置文件(.yml)</p><h2 id="使用域名及访问" tabindex="-1"><a class="header-anchor" href="#使用域名及访问" aria-hidden="true">#</a> 使用域名及访问</h2><p>域名可以在阿里云上申请, 注意申请之后要进行备案. 我也是最近刚进行备案, 时长大概有13-20天, 只有备案之后才可使用80端口进行访问. 因此目前我使用nginx配置了81端口进行访问博客. 我的nginx配置如下:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>server <span class="token punctuation">{</span>
    listen          <span class="token number">81</span><span class="token punctuation">;</span>
    server_name     blog.nikolazhang.top<span class="token punctuation">;</span>

    location / <span class="token punctuation">{</span>
        root        /home/nikola/app/blog/nikola-blog/public<span class="token punctuation">;</span>
        index       index.html<span class="token punctuation">;</span>
        try_files <span class="token variable">$uri</span> <span class="token variable">$uri</span>/ /index.html<span class="token punctuation">;</span>
        proxy_set_header   Host             <span class="token variable">$host</span><span class="token punctuation">;</span>
        proxy_set_header   X-Real-IP        <span class="token variable">$remote_addr</span><span class="token punctuation">;</span>
        proxy_set_header   X-Forwarded-For  <span class="token variable">$proxy_add_x_forwarded_for</span><span class="token punctuation">;</span>
        proxy_set_header   X-Forwarded-Proto  <span class="token variable">$scheme</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="jenkins配置" tabindex="-1"><a class="header-anchor" href="#jenkins配置" aria-hidden="true">#</a> jenkins配置</h2><p>再介绍一下jenkins的配置方式:</p><ol><li>首先要指定代码库位置:<br><img src="http://image.nikolazhang.top/20191229200856.png" alt="配置git"></li><li>使用钩子作为构建触发器<br><img src="http://image.nikolazhang.top/20191229201112.png" alt="触发器"></li><li>构建的脚本, 主要就是在服务器上进行博客的生成和目录迁移.</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /var/lib/jenkins/workspace/nikola-blog<span class="token punctuation">;</span>
cnpm <span class="token function">install</span><span class="token punctuation">;</span>
<span class="token builtin class-name">cd</span> /var/lib/jenkins/workspace/nikola-blog/themes/sakura<span class="token punctuation">;</span>
cnpm <span class="token function">install</span><span class="token punctuation">;</span>
<span class="token builtin class-name">cd</span> /var/lib/jenkins/workspace/nikola-blog<span class="token punctuation">;</span>
hexo clean<span class="token punctuation">;</span>
hexo g<span class="token punctuation">;</span>
<span class="token function">rm</span> <span class="token parameter variable">-rf</span> /home/nikola/app/blog/public<span class="token punctuation">;</span>
<span class="token function">mkdir</span> /home/nikola/app/blog/public<span class="token punctuation">;</span>
<span class="token function">cp</span> <span class="token parameter variable">-r</span> /var/lib/jenkins/workspace/nikola-blog/public /home/nikola/app/blog/nikola-blog/<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="bug及注意事项" tabindex="-1"><a class="header-anchor" href="#bug及注意事项" aria-hidden="true">#</a> bug及注意事项</h2><ul><li>根目录下_config.yml中的relative_link要设置为false. 否则分页会出现问题.</li><li>clone项目到本地之后, 根目录和主题目录下都要执行npm install命令. 否则生成的index.html中将没有内容.</li></ul><h2 id="致谢" tabindex="-1"><a class="header-anchor" href="#致谢" aria-hidden="true">#</a> 致谢</h2><p>最后致敬Mashiro和honjun的付出和开源精神. Thank you ~</p>`,12);function G(L,P){const s=t("ExternalLinkIcon");return o(),c("div",null,[r,d,n("p",null,[a("之前曾使用hexo搭建过一个简易的博客. 这个博客就是在之前的基础上搭建的. 但是不同之处在于这次博客不再依赖于代码仓库(像github,gitee都会支持静态页面之类的部署)."),u,a(" gitee部署博客可以通过gitee pages进行. 如下图所示:"),h,b,m,k,_,a(" 但是部署之后域名都会是相关平台的域名."),v,n("a",g,[a("gitee 部署的博客"),e(s)]),f,x,y,a(" 没有灵魂的感觉~当然也可以有其他方法去替换. 这不是重点就不说了.")]),j,w,z,n("p",null,[a("hexo 支持"),n("a",$,[a("一键式博客部署"),e(s)]),a(","),N,a(" 注意一键式部署会将 public 目录中的文件和目录推送至 _config.yml 中指定的远端仓库和分支中，并且完全覆盖该分支下的已有内容。"),q,a(" 我的"),V,a("配置如下:")]),Y,n("ol",null,[B,E,F,H,n("li",null,[a("themes 下放置"),n("a",I,[a("主题"),e(s)]),a("文件")]),M,X]),D])}const R=i(p,[["render",G],["__file","博客搭建及部署.html.vue"]]);export{R as default};
