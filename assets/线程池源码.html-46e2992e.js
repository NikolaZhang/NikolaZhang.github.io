const e=JSON.parse('{"key":"v-1a6522ce","path":"/posts/thread/%E7%BA%BF%E7%A8%8B%E6%B1%A0%E6%BA%90%E7%A0%81.html","title":"ThreadPoolExecutor线程池源码阅读","lang":"en-US","frontmatter":{"isOriginal":true,"title":"ThreadPoolExecutor线程池源码阅读","tag":["thread pool","ThreadPoolExecutor"],"category":"源码","date":"2021-07-15T00:00:00.000Z","description":"线程池源码阅读","image":"https://tech.nikolazhang.top/2020-04-05-17-52-06.png","sticky":false,"timeline":true,"article":true,"star":true,"head":[["meta",{"property":"og:url","content":"https://nikolazhang.github.io/posts/thread/%E7%BA%BF%E7%A8%8B%E6%B1%A0%E6%BA%90%E7%A0%81.html"}],["meta",{"property":"og:title","content":"ThreadPoolExecutor线程池源码阅读"}],["meta",{"property":"og:description","content":"线程池源码阅读"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-06-09T00:57:17.000Z"}],["meta",{"property":"article:author","content":"我小叮当、"}],["meta",{"property":"article:tag","content":"thread pool"}],["meta",{"property":"article:tag","content":"ThreadPoolExecutor"}],["meta",{"property":"article:published_time","content":"2021-07-15T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-09T00:57:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ThreadPoolExecutor线程池源码阅读\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-07-15T00:00:00.000Z\\",\\"dateModified\\":\\"2023-06-09T00:57:17.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"我小叮当、\\",\\"url\\":\\"https://nikolazhang.github.io\\"}]}"]]},"headers":[{"level":2,"title":"线程池状态","slug":"线程池状态","link":"#线程池状态","children":[]},{"level":2,"title":"线程池的初始化","slug":"线程池的初始化","link":"#线程池的初始化","children":[]},{"level":2,"title":"execute","slug":"execute","link":"#execute","children":[]},{"level":2,"title":"addWorker","slug":"addworker","link":"#addworker","children":[]},{"level":2,"title":"线程执行","slug":"线程执行","link":"#线程执行","children":[{"level":3,"title":"processWorkerExit","slug":"processworkerexit","link":"#processworkerexit","children":[]},{"level":3,"title":"getTask","slug":"gettask","link":"#gettask","children":[]},{"level":3,"title":"tryTerminate","slug":"tryterminate","link":"#tryterminate","children":[]}]},{"level":2,"title":"终止线程池","slug":"终止线程池","link":"#终止线程池","children":[{"level":3,"title":"shutdownNow & shutdown","slug":"shutdownnow-shutdown","link":"#shutdownnow-shutdown","children":[]}]}],"git":{"createdTime":1686272237000,"updatedTime":1686272237000,"contributors":[{"name":"dewy yr","email":"nikolazhang@163.com","commits":1}]},"readingTime":{"minutes":15.65,"words":4694},"filePathRelative":"posts/thread/线程池源码.md","localizedDate":"July 15, 2021","excerpt":"<blockquote>\\n<p>有关于线程池的源码分析</p>\\n</blockquote>\\n<h2> 线程池状态</h2>\\n<p>线程池有以下状态<code>RUNNING</code>、<code>SHUTDOWN</code>、<code>STOP</code>、<code>TIDYING</code>、<code>TERMINATED</code>，其定义如下。但在实际使用中，由于线程状态会因为池中线程数的影响发生改变。为了原子性控制这两个变量，因此使用<code>AtomicInteger</code>定义<code>ctl</code>，该对象是线程池状态与当前线程数或运算的结果，并通过<code>ctlOf(RUNNING, 0)</code>进行初始化。线程池也提供了一些用于操作<code>ctl</code>的方法。</p>"}');export{e as data};
