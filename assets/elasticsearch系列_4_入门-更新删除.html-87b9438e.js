import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,e}from"./app-633915bb.js";const t={},o=e(`<h2 id="更新文档" tabindex="-1"><a class="header-anchor" href="#更新文档" aria-hidden="true">#</a> 更新文档</h2><p>文档在elasticsearch中是不可变的. 但是可以通过重建索引进行替换.</p><p><img src="https://tech.nikolazhang.top/2020-02-01-20-17-00.png" alt="2020-02-01-20-17-00"></p><p>如果我们要修改上面截图中的<code>age</code>字段, 可以将之前的PUT方法中的<code>age</code>值修改并重新运行, 即可. <img src="https://tech.nikolazhang.top/2020-02-01-20-18-20.png" alt="2020-02-01-20-18-20"></p><p>注意此时的_version字段会增加1, 这个设计如同数据库中我们使用乐观锁. 都是通过版本号实现.</p><h3 id="局部更新" tabindex="-1"><a class="header-anchor" href="#局部更新" aria-hidden="true">#</a> 局部更新</h3><p>上面通过全文更新过于繁琐. 现在就介绍一种更加简单的方式进行更新.</p><p><img src="https://tech.nikolazhang.top/2020-02-03-15-46-28.png" alt="2020-02-03-15-46-28"></p><p>比如更改上面文档中的age:</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>POST /megacorp/employee/<span class="token number">3</span>/_update
<span class="token punctuation">{</span>
    <span class="token property">&quot;doc&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;age&quot;</span> <span class="token operator">:</span>  <span class="token number">40</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行之后, 重新查询: <img src="https://tech.nikolazhang.top/2020-02-03-15-48-23.png" alt="2020-02-03-15-48-23"> 结果已经变成我们设置的值了.</p><h4 id="通过脚本更新" tabindex="-1"><a class="header-anchor" href="#通过脚本更新" aria-hidden="true">#</a> 通过脚本更新</h4><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>POST /megacorp/employee/<span class="token number">3</span>/_update
<span class="token punctuation">{</span>
    <span class="token property">&quot;script&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;ctx._source.age+=1&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>ctx._source</code>表示的是<code>_source</code></p><p>注意如果不确定更新的字段是否存在, 可以使用<code>upsert</code>指定初始值创建.</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>POST /megacorp/employee/<span class="token number">1</span>/_update
<span class="token punctuation">{</span>
   <span class="token property">&quot;script&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;ctx._source.views+=1&quot;</span><span class="token punctuation">,</span>
   <span class="token property">&quot;upsert&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
       <span class="token property">&quot;views&quot;</span><span class="token operator">:</span> <span class="token number">1</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="更新和冲突" tabindex="-1"><a class="header-anchor" href="#更新和冲突" aria-hidden="true">#</a> 更新和冲突</h4><p>如果版本号发生冲突, 并且在更新先后不重要的情况下. 可以尝试再次更新. 这可以通过设置参数 <code>retry_on_conflict</code> 来自动完成, 这个参数规定了失败之前 update 应该重试的次数, 它的默认值为0 。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>POST /megacorp/employee/<span class="token number">1</span>/_update?retry_on_conflict=<span class="token number">5</span>
<span class="token punctuation">{</span>
   <span class="token property">&quot;script&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;ctx._source.views+=1&quot;</span><span class="token punctuation">,</span>
   <span class="token property">&quot;upsert&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
       <span class="token property">&quot;views&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="删除" tabindex="-1"><a class="header-anchor" href="#删除" aria-hidden="true">#</a> 删除</h2><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>DELETE /school-demo/school/<span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="https://tech.nikolazhang.top/2020-02-01-20-51-52.png" alt="2020-02-01-20-51-52"></p>`,22),p=[o];function c(i,r){return s(),a("div",null,p)}const u=n(t,[["render",c],["__file","elasticsearch系列_4_入门-更新删除.html.vue"]]);export{u as default};
