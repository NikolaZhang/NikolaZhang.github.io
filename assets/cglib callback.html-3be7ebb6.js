const n=JSON.parse('{"key":"v-53078477","path":"/posts/springboot/cglib%20callback.html","title":"cglib回调器","lang":"en-US","frontmatter":{"isOriginal":true,"title":"cglib回调器","tag":["proxy","cglib","回调"],"category":"cglib","date":"2020-06-21T00:00:00.000Z","description":"cglib的回调器类型及使用方法","image":"https://tech.nikolazhang.top/040156dd297fb60e53d475e3ac4425af.png","sticky":false,"timeline":true,"article":true,"star":false,"head":[["meta",{"property":"og:url","content":"https://nikolazhang.github.io/posts/springboot/cglib%20callback.html"}],["meta",{"property":"og:title","content":"cglib回调器"}],["meta",{"property":"og:description","content":"cglib的回调器类型及使用方法"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-06-08T15:09:36.000Z"}],["meta",{"property":"article:author","content":"我小叮当、"}],["meta",{"property":"article:tag","content":"proxy"}],["meta",{"property":"article:tag","content":"cglib"}],["meta",{"property":"article:tag","content":"回调"}],["meta",{"property":"article:published_time","content":"2020-06-21T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-08T15:09:36.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"cglib回调器\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-06-21T00:00:00.000Z\\",\\"dateModified\\":\\"2023-06-08T15:09:36.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"我小叮当、\\",\\"url\\":\\"https://nikolazhang.github.io\\"}]}"]]},"headers":[{"level":2,"title":"MethodInterceptor","slug":"methodinterceptor","link":"#methodinterceptor","children":[]},{"level":2,"title":"NoOp","slug":"noop","link":"#noop","children":[]},{"level":2,"title":"FixedValue","slug":"fixedvalue","link":"#fixedvalue","children":[]},{"level":2,"title":"Dispatcher","slug":"dispatcher","link":"#dispatcher","children":[]},{"level":2,"title":"LazyLoader","slug":"lazyloader","link":"#lazyloader","children":[]},{"level":2,"title":"ProxyRefDispatcher","slug":"proxyrefdispatcher","link":"#proxyrefdispatcher","children":[]},{"level":2,"title":"InvocationHandler","slug":"invocationhandler","link":"#invocationhandler","children":[]}],"git":{"createdTime":1686236976000,"updatedTime":1686236976000,"contributors":[{"name":"nikola","email":"nikolazhang@163.com","commits":1}]},"readingTime":{"minutes":1.69,"words":507},"filePathRelative":"posts/springboot/cglib callback.md","localizedDate":"June 21, 2020","excerpt":"<blockquote>\\n<p>使用Enhance的callback方法可以指定回调, 方法的参数类型为Callback类型. 这篇文章就分析这些callback的使用情景</p>\\n</blockquote>\\n<p>我们可以看到Callback接口一共有7种实现.</p>\\n<p><img src=\\"https://tech.nikolazhang.top/2020-06-25-16-48-08.png\\" alt=\\"2020-06-25-16-48-08\\"></p>\\n<h2> MethodInterceptor</h2>\\n<p>这是一种可以实现环绕增强的回调类型.</p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token annotation punctuation\\">@Test</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">testMethodInterceptor</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token class-name\\">Enhancer</span> enhancer <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Enhancer</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    enhancer<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">setSuperclass</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">UserService</span><span class=\\"token punctuation\\">.</span><span class=\\"token keyword\\">class</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    enhancer<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">setCallback</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">MethodInterceptor</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">(</span>obj<span class=\\"token punctuation\\">,</span> method<span class=\\"token punctuation\\">,</span> args<span class=\\"token punctuation\\">,</span> proxy<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">-&gt;</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token class-name\\">System</span><span class=\\"token punctuation\\">.</span>out<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">println</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"====== begin\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token class-name\\">Object</span> object <span class=\\"token operator\\">=</span> proxy<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">invokeSuper</span><span class=\\"token punctuation\\">(</span>obj<span class=\\"token punctuation\\">,</span> args<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token class-name\\">System</span><span class=\\"token punctuation\\">.</span>out<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">println</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"====== end\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">return</span> object<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token class-name\\">UserService</span> userServiceProxy <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">UserService</span><span class=\\"token punctuation\\">)</span> enhancer<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">create</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    userServiceProxy<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getInfo</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{n as data};
