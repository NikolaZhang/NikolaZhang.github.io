import{_ as r}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as a,o as c,c as l,a as e,d as s,b as n,e as o}from"./app-hBvT3lHz.js";const p={},d=e("blockquote",null,[e("p",null,[s("实现爬虫时最经常提到的需求就是能合适的保存爬取到的数据，或者说，生成一个带有爬取数据的”输出文件”(通常叫做”输出feed”)，来供其他系统使用。"),e("br"),s(" Scrapy自带了Feed输出，并且支持多种序列化格式(serialization format)及存储方式(storage backends)。")])],-1),i=e("p",null,"可以通过 FEED_EXPORTERS 设置扩展支持的属性。",-1),h=e("strong",null,[e("strong",null,"JSON")],-1),u=e("br",null,null,-1),_=e("strong",null,[e("code",null,"[FEED_FORMAT](https://scrapy-chs.readthedocs.io/zh_CN/latest/topics/feed-exports.html#std:setting-FEED_FORMAT)")],-1),g=e("code",null,"json",-1),E=e("br",null,null,-1),m=e("strong",null,[e("code",null,"[JsonItemExporter](https://scrapy-chs.readthedocs.io/zh_CN/latest/topics/exporters.html#scrapy.contrib.exporter.JsonItemExporter)")],-1),f=e("br",null,null,-1),x={href:"https://scrapy-chs.readthedocs.io/zh_CN/latest/topics/exporters.html#json-with-large-data",target:"_blank",rel:"noopener noreferrer"},b=o('<p><strong><strong>JSON lines</strong></strong><br> • <strong><code>[FEED_FORMAT](https://scrapy-chs.readthedocs.io/zh_CN/latest/topics/feed-exports.html#std:setting-FEED_FORMAT)</code></strong>: <code>jsonlines</code><br> • 使用的exporter: <strong><code>[JsonLinesItemExporter](https://scrapy-chs.readthedocs.io/zh_CN/latest/topics/exporters.html#scrapy.contrib.exporter.JsonLinesItemExporter)</code></strong></p><p><strong><strong>CSV</strong></strong><br> • <strong><code>[FEED_FORMAT](https://scrapy-chs.readthedocs.io/zh_CN/latest/topics/feed-exports.html#std:setting-FEED_FORMAT)</code></strong>: <code>csv</code><br> • 使用的exporter: <strong><code>[CsvItemExporter](https://scrapy-chs.readthedocs.io/zh_CN/latest/topics/exporters.html#scrapy.contrib.exporter.CsvItemExporter)</code></strong></p><p><strong><strong>XML</strong></strong><br> • <strong><code>[FEED_FORMAT](https://scrapy-chs.readthedocs.io/zh_CN/latest/topics/feed-exports.html#std:setting-FEED_FORMAT)</code></strong>: <code>xml</code><br> • 使用的exporter: <strong><code>[XmlItemExporter](https://scrapy-chs.readthedocs.io/zh_CN/latest/topics/exporters.html#scrapy.contrib.exporter.XmlItemExporter)</code></strong></p><p><strong><strong>Pickle</strong></strong><br> • <strong><code>[FEED_FORMAT](https://scrapy-chs.readthedocs.io/zh_CN/latest/topics/feed-exports.html#std:setting-FEED_FORMAT)</code></strong>: <code>pickle</code><br> • 使用的exporter: <strong><code>[PickleItemExporter](https://scrapy-chs.readthedocs.io/zh_CN/latest/topics/exporters.html#scrapy.contrib.exporter.PickleItemExporter)</code></strong></p><p><strong><strong>Marshal</strong></strong><br> • <strong><code>[FEED_FORMAT](https://scrapy-chs.readthedocs.io/zh_CN/latest/topics/feed-exports.html#std:setting-FEED_FORMAT)</code></strong>: <code>marshal</code><br> • 使用的exporter: <strong><code>MarshalItemExporter</code></strong></p><h2 id="存储" tabindex="-1"><a class="header-anchor" href="#存储" aria-hidden="true">#</a> 存储</h2><blockquote><p>使用feed输出时您可以通过使用 URI (通过 FEED_URI 设置) 来定义存储端。 feed输出支持URI方式支持的多种存储后端类型。</p></blockquote><p>自带支持的存储后端有:</p><ol><li>本地文件系统</li><li>FTP</li><li>S3 (需要 boto)</li><li>标准输出</li></ol>',9),k={href:"http://code.google.com/p/boto/",target:"_blank",rel:"noopener noreferrer"},F=e("h2",{id:"存储uri参数",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#存储uri参数","aria-hidden":"true"},"#"),s(" 存储URI参数")],-1),S=e("p",null,"存储URI也包含参数。当feed被创建时这些参数可以被覆盖:",-1),R=e("ul",null,[e("li",null,[e("code",null,"%(time)s"),s(" - 当feed被创建时被timestamp覆盖")]),e("li",null,[e("code",null,"%(name)s"),s(" - 被spider的名字覆盖")])],-1),y=e("p",null,"其他命名的参数会被spider同名的属性所覆盖。例如， 当feed被创建时， %(site_id)s 将会被 spider.site_id 属性所覆盖。",-1),v=e("p",null,"下面用一些例子来说明:",-1),I=e("li",null,[e("p",null,"存储在FTP，每个spider一个目录:"),e("p",null,[e("code",null,"ftp://user:password@ftp.example.com/scraping/feeds/%(name)s/%(time)s.json")])],-1),D=e("p",null,"存储在S3，每一个spider一个目录:",-1),T=e("p",null,[e("code",null,"s3://mybucket/scraping/feeds/%(name)s/%(time)s.json")],-1),C=e("h2",{id:"存储端",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#存储端","aria-hidden":"true"},"#"),s(" 存储端")],-1),A=o("<li><p>本地文件系统</p><p>将feed存储在本地系统。</p><ul><li>URI scheme: <code>file</code></li><li>URI样例: <code>file:///tmp/export.csv</code></li><li>需要的外部依赖库: none</li></ul><p>注意: (只有)存储在本地文件系统时，您可以指定一个绝对路径 /tmp/export.csv 并忽略协议(scheme)。不过这仅仅只能在Unix系统中工作。</p></li><li><p>FTP</p><p>将feed存储在FTP服务器。</p><p>• URI scheme: <code>ftp</code><br> • URI样例: <code>ftp://user:pass@ftp.example.com/path/to/export.csv</code><br> • 需要的外部依赖库: none</p></li>",2),O=e("p",null,"S3",-1),N=e("p",null,"将feed存储在 Amazon S3 。",-1),z=e("li",null,[s("URI scheme: "),e("code",null,"s3")],-1),M=e("li",null,[s("URI样例: "),e("ul",null,[e("li",null,[e("code",null,"s3://mybucket/path/to/export.csv")]),e("li",null,[e("code",null,"s3://aws_key:aws_secret@mybucket/path/to/export.csv")])])],-1),U={href:"http://code.google.com/p/boto/",target:"_blank",rel:"noopener noreferrer"},P=e("p",null,"您可以通过在URI中传递user/pass来完成AWS认证，或者也可以通过下列的设置来完成:",-1),X=e("ul",null,[e("li",null,[e("strong",null,[e("code",null,"[AWS_ACCESS_KEY_ID](https://scrapy-chs.readthedocs.io/zh_CN/latest/topics/settings.html#std:setting-AWS_ACCESS_KEY_ID)")])]),e("li",null,[e("strong",null,[e("code",null,"[AWS_SECRET_ACCESS_KEY](https://scrapy-chs.readthedocs.io/zh_CN/latest/topics/settings.html#std:setting-AWS_SECRET_ACCESS_KEY)")])])],-1),J=e("li",null,[e("p",null,"标准输出"),e("p",null,"feed输出到Scrapy进程的标准输出。"),e("ul",null,[e("li",null,[s("URI scheme: "),e("code",null,"stdout")]),e("li",null,[s("URI样例: "),e("code",null,"stdout:")]),e("li",null,"需要的外部依赖库: none")])],-1),j=o('<h2 id="设定" tabindex="-1"><a class="header-anchor" href="#设定" aria-hidden="true">#</a> 设定</h2><p>这些是配置feed输出的设定:</p><ul><li><strong><code>[FEED_URI](https://scrapy-chs.readthedocs.io/zh_CN/latest/topics/feed-exports.html#std:setting-FEED_URI)</code></strong> (必须)</li><li><strong><code>[FEED_FORMAT](https://scrapy-chs.readthedocs.io/zh_CN/latest/topics/feed-exports.html#std:setting-FEED_FORMAT)</code></strong></li><li><strong><code>[FEED_STORAGES](https://scrapy-chs.readthedocs.io/zh_CN/latest/topics/feed-exports.html#std:setting-FEED_STORAGES)</code></strong></li><li><strong><code>[FEED_EXPORTERS](https://scrapy-chs.readthedocs.io/zh_CN/latest/topics/feed-exports.html#std:setting-FEED_EXPORTERS)</code></strong></li><li><strong><code>[FEED_STORE_EMPTY](https://scrapy-chs.readthedocs.io/zh_CN/latest/topics/feed-exports.html#std:setting-FEED_STORE_EMPTY)</code></strong></li></ul><h3 id="feed-uri" tabindex="-1"><a class="header-anchor" href="#feed-uri" aria-hidden="true">#</a> <strong>FEED_URI</strong></h3><p>Default: <code>None</code></p>',5),Y={href:"https://scrapy-chs.readthedocs.io/zh_CN/latest/topics/feed-exports.html#topics-feed-storage-backends",target:"_blank",rel:"noopener noreferrer"},B=e("p",null,"为了启用feed输出，该设定是必须的。",-1),L=e("h3",{id:"feed-format",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#feed-format","aria-hidden":"true"},"#"),s(),e("strong",null,"FEED_FORMAT")],-1),V={href:"https://scrapy-chs.readthedocs.io/zh_CN/latest/topics/feed-exports.html#topics-feed-format",target:"_blank",rel:"noopener noreferrer"},W=o(`<h3 id="feed-store-empty" tabindex="-1"><a class="header-anchor" href="#feed-store-empty" aria-hidden="true">#</a> <strong>FEED_STORE_EMPTY</strong></h3><p>Default: <code>False</code></p><p>是否输出空feed(没有item的feed)。</p><h3 id="feed-storages" tabindex="-1"><a class="header-anchor" href="#feed-storages" aria-hidden="true">#</a> <strong>FEED_STORAGES</strong></h3><p>Default:: <code>{}</code></p><p>包含项目支持的额外feed存储端的字典。 字典的键(key)是URI协议(scheme)，值是存储类(storage class)的路径。</p><h3 id="feed-storages-base" tabindex="-1"><a class="header-anchor" href="#feed-storages-base" aria-hidden="true">#</a> <strong>FEED_STORAGES_BASE</strong></h3><p>Default:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token punctuation">{</span>
    <span class="token string">&#39;&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;scrapy.contrib.feedexport.FileFeedStorage&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;file&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;scrapy.contrib.feedexport.FileFeedStorage&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;stdout&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;scrapy.contrib.feedexport.StdoutFeedStorage&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;s3&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;scrapy.contrib.feedexport.S3FeedStorage&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;ftp&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;scrapy.contrib.feedexport.FTPFeedStorage&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>包含Scrapy内置支持的feed存储端的字典。</p><h3 id="feed-exporters" tabindex="-1"><a class="header-anchor" href="#feed-exporters" aria-hidden="true">#</a> <strong>FEED_EXPORTERS</strong></h3><p>Default: <code>{}</code></p>`,12),w={href:"https://scrapy-chs.readthedocs.io/zh_CN/latest/topics/exporters.html#topics-exporters",target:"_blank",rel:"noopener noreferrer"},G=o(`<h3 id="feed-exporters-base" tabindex="-1"><a class="header-anchor" href="#feed-exporters-base" aria-hidden="true">#</a> <strong>FEED_EXPORTERS_BASE</strong></h3><p>Default:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>FEED_EXPORTERS_BASE <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;json&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;scrapy.contrib.exporter.JsonItemExporter&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;jsonlines&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;scrapy.contrib.exporter.JsonLinesItemExporter&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;csv&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;scrapy.contrib.exporter.CsvItemExporter&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;xml&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;scrapy.contrib.exporter.XmlItemExporter&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;marshal&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;scrapy.contrib.exporter.MarshalItemExporter&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>包含Scrapy内置支持的feed输出器(exporter)的字典。</p>`,4);function K(q,H){const t=a("ExternalLinkIcon");return c(),l("div",null,[d,i,e("p",null,[h,u,s(" • "),_,s(": "),g,E,s(" • 使用的exporter: "),m,f,s(" • 大数据量情况下使用JSON请参见 "),e("a",x,[s("这个警告"),n(t)])]),b,e("p",null,[s("有些存储后端会因所需的外部库未安装而不可用。例如，S3只有在 "),e("a",k,[s("boto"),n(t)]),s(" 库安装的情况下才可使用。")]),F,S,R,y,v,e("ul",null,[I,e("li",null,[D,T,C,e("ol",null,[A,e("li",null,[O,N,e("ul",null,[z,M,e("li",null,[s("需要的外部依赖库: "),e("a",U,[s("boto"),n(t)])])]),P,X]),J]),j,e("p",null,[s("输出feed的URI。支持的URI协议请参见 "),e("a",Y,[s("存储端(Storage backends)"),n(t)]),s(" 。")]),B,L,e("p",null,[s("输出feed的序列化格式。可用的值请参见 "),e("a",V,[s("序列化方式(Serialization formats)"),n(t)]),s(" 。")]),W,e("p",null,[s("包含项目支持的额外输出器(exporter)的字典。 该字典的键(key)是URI协议(scheme)，值是 "),e("a",w,[s("Item输出器(exporter)"),n(t)]),s(" 类的路径。")]),G])])])}const $=r(p,[["render",K],["__file","Feed exports.html.vue"]]);export{$ as default};
