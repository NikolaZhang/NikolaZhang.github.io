import{_ as t}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as p,c as e,a as n,b as s,d as o,w as c,e as l,r as u}from"./app.e7c9cb9e.js";const i={},k=n("br",null,null,-1),r=n("code",null,"MapperAnnotationBuilder",-1),d=n("code",null,"package",-1),m=n("br",null,null,-1),v=n("code",null,"XMLMapperBuilder",-1),b=n("code",null,"mapper",-1),g=l(`<h2 id="mapperannotationbuilder" tabindex="-1"><a class="header-anchor" href="#mapperannotationbuilder" aria-hidden="true">#</a> MapperAnnotationBuilder</h2><h3 id="\u6784\u9020\u5668" tabindex="-1"><a class="header-anchor" href="#\u6784\u9020\u5668" aria-hidden="true">#</a> \u6784\u9020\u5668</h3><p><code>MapperAnnotationBuilder</code>\u7684\u5B9E\u4F8B\u5316\u9700\u8981\u6307\u5B9A<code>Configuration</code>, \u4EE5\u53CA\u5F53\u524D\u89E3\u6790\u7684\u7C7B<code>Class&lt;?&gt; type</code>.</p><p><code>MapperBuilderAssistant</code>\u4E2D\u5305\u542B\u4E86\u901A\u8FC7<code>configuration</code>\u914D\u7F6E\u7C7B\u4E2D\u83B7\u53D6\u7684\u522B\u540D\u6CE8\u518C\u5668<code>TypeAliasRegistry</code>, \u4EE5\u53CA\u7C7B\u578B\u8F6C\u6362\u6CE8\u518C\u5668<code>TypeHandlerRegistry</code>. \u4E4B\u540E\u4F1A\u7528\u4E8E\u5904\u7406mapper\u4E2D\u7684\u522B\u540D\u4EE5\u53CA\u8F6C\u6362\u5668\u914D\u7F6E.</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>  <span class="token keyword">public</span> <span class="token class-name">MapperAnnotationBuilder</span><span class="token punctuation">(</span><span class="token class-name">Configuration</span> configuration<span class="token punctuation">,</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> resource <span class="token operator">=</span> type<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token char">&#39;.&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;/&#39;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;.java (best guess)&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>assistant <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MapperBuilderAssistant</span><span class="token punctuation">(</span>configuration<span class="token punctuation">,</span> resource<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>configuration <span class="token operator">=</span> configuration<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>type <span class="token operator">=</span> type<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="mapperannotationbuilder\u7684parse\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#mapperannotationbuilder\u7684parse\u65B9\u6CD5" aria-hidden="true">#</a> <code>MapperAnnotationBuilder</code>\u7684parse\u65B9\u6CD5</h3><p>parse\u65B9\u6CD5\u7684\u5177\u4F53\u903B\u8F91\u89C1\u4E0B, \u6CE8\u91CA\u662F\u65B9\u6CD5\u4E2D\u5404\u4E2A\u6B65\u9AA4\u7684\u542B\u4E49</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> resource <span class="token operator">=</span> type<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5224\u65AD\u662F\u5426\u5DF2\u7ECF\u89E3\u6790\u4E86\u5F53\u524D\u7684resource, resource\u5373\u7C7B\u5168\u9650\u5B9A\u540D(\u542B\u6709\u524D\u7F00interface or class or \u7A7A\u5B57\u7B26(\u5BF9\u4E8E\u539F\u59CB\u7C7B\u578B))</span>
    <span class="token comment">// \u5DF2\u7ECF\u89E3\u6790\u8FC7\u7684\u7C7B\u7684\u5168\u9650\u5B9A\u540D\u4F1A\u5B58\u653E\u5230\`Set&lt;String&gt; loadedResources = new HashSet&lt;&gt;()\`\u4E2D.</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>configuration<span class="token punctuation">.</span><span class="token function">isResourceLoaded</span><span class="token punctuation">(</span>resource<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u901A\u5E38\u6211\u4EEC\u7684\u63A5\u53E3\u4F1A\u5BF9\u5E94\u4E00\u4E2Axml\u6587\u4EF6, \`loadXmlResource()\`\u5C31\u662F\u7528\u4E8E\u83B7\u53D6\u8BE5xml\u6587\u4EF6\u5E76\u8FDB\u884C\u89E3\u6790\u7684\u65B9\u6CD5.</span>
      <span class="token function">loadXmlResource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// \u5C06\u5F53\u524D\u7C7B\u52A0\u5230loadedResources\u96C6\u5408\u4E2D, \u9632\u6B62\u91CD\u590D\u89E3\u6790</span>
      configuration<span class="token punctuation">.</span><span class="token function">addLoadedResource</span><span class="token punctuation">(</span>resource<span class="token punctuation">)</span><span class="token punctuation">;</span>
      assistant<span class="token punctuation">.</span><span class="token function">setCurrentNamespace</span><span class="token punctuation">(</span>type<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">parseCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">parseCacheRef</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Method</span> method <span class="token operator">:</span> type<span class="token punctuation">.</span><span class="token function">getMethods</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u6B64\u5904\u7528\u4E8E\u5224\u65AD\u63A5\u53E3\u4E2D\u7684\u65B9\u6CD5\u662F\u5426\u662Fdefault\u4FEE\u9970 \u6216\u8005\u662F\u7531\u4E8E\u4F7F\u7528\u6CDB\u578B\u751F\u6210\u7684\u6865\u63A5\u65B9\u6CD5</span>
        <span class="token comment">// \u8FD9\u4E24\u79CD\u7C7B\u578B\u7684\u65B9\u6CD5\u90FD\u4E0D\u4F1A\u8FDB\u884C\u5904\u7406</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">canHaveStatement</span><span class="token punctuation">(</span>method<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">continue</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u5982\u679C\u65B9\u6CD5\u4E0A\u542B\u6709@Select @SelectProvider \u6CE8\u89E3 \u4F46\u662F\u6CA1\u6709\u6307\u5B9A @ResultMap</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">getAnnotationWrapper</span><span class="token punctuation">(</span>method<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token class-name">Select</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">SelectProvider</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isPresent</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token operator">&amp;&amp;</span> method<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span><span class="token class-name">ResultMap</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">parseResultMap</span><span class="token punctuation">(</span>method<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
          <span class="token function">parseStatement</span><span class="token punctuation">(</span>method<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IncompleteElementException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          configuration<span class="token punctuation">.</span><span class="token function">addIncompleteMethod</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MethodResolver</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> method<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token function">parsePendingMethods</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0B\u9762\u5BF9\u65B9\u6CD5\u7684\u7EC6\u8282\u8FDB\u884C\u4ECB\u7ECD:</p><h4 id="getannotationwrapper" tabindex="-1"><a class="header-anchor" href="#getannotationwrapper" aria-hidden="true">#</a> getAnnotationWrapper</h4><p>\u8BE5\u65B9\u6CD5\u8FD4\u56DE<code>Optional&lt;AnnotationWrapper&gt;</code>, <code>AnnotationWrapper</code>\u662F\u65B9\u6CD5\u4E0A\u6CE8\u89E3\u4FE1\u606F\u7684\u5C01\u88C5, \u800C\u6CE8\u89E3\u7684\u8303\u56F4\u7531<code>Collection&lt;Class&lt;? extends Annotation&gt;&gt; targetTypes</code>\u53C2\u6570\u8FDB\u884C\u9650\u5236. <code>Method method</code>\u53C2\u6570\u7528\u4E8E\u53CD\u5C04\u83B7\u53D6\u65B9\u6CD5\u6CE8\u89E3.</p><p><code>targetTypes</code>\u662F\u6240\u6709\u9700\u8981\u5904\u7406\u7684\u6CE8\u89E3\u7C7B\u7684\u96C6\u5408, \u65B9\u6CD5\u4E2D\u7684\u7B2C\u4E8C\u4E2A\u53C2\u6570\u7528\u4E8E\u5728\u6CA1\u6709\u5339\u914D\u7684\u6CE8\u89E3\u65F6\u662F\u5426\u629B\u51FA\u5F02\u5E38.</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">AnnotationWrapper</span><span class="token punctuation">&gt;</span></span> <span class="token function">getAnnotationWrapper</span><span class="token punctuation">(</span><span class="token class-name">Method</span> method<span class="token punctuation">,</span> <span class="token keyword">boolean</span> errorIfNoMatch<span class="token punctuation">,</span>
      <span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Class</span><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Annotation</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> targetTypes<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> databaseId <span class="token operator">=</span> configuration<span class="token punctuation">.</span><span class="token function">getDatabaseId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 1. \u9996\u5148\u83B7\u53D6\u65B9\u6CD5\u4E0A, \u6240\u6709\u5728targetTypes\u8303\u56F4\u4E2D\u7684\u6CE8\u89E3</span>
    <span class="token comment">// 2. \u4E4B\u540E\u6839\u636E\u4E0A\u4E00\u6B65\u83B7\u53D6\u5230\u7684Annotation, \u521B\u5EFAAnnotationWrapper\u5BF9\u8C61</span>
    <span class="token comment">// 3. \u6700\u540E\u7EC4\u5408\u4E3Amap\u7ED3\u6784, key\u4E3A\u6570\u636E\u5E93\u5382\u5546\u6807\u8BC6, value\u4E3AAnnotationWrapper\u5BF9\u8C61</span>
    <span class="token comment">// \u5982\u679C\u51FA\u73B0\u91CD\u590D\u7684\u6CE8\u89E3\u76F4\u63A5\u629B\u51FA\u5F02\u5E38</span>
    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">AnnotationWrapper</span><span class="token punctuation">&gt;</span></span> statementAnnotations <span class="token operator">=</span> targetTypes<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span>x <span class="token operator">-&gt;</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span>method<span class="token punctuation">.</span><span class="token function">getAnnotationsByType</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">AnnotationWrapper</span><span class="token operator">::</span><span class="token keyword">new</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toMap</span><span class="token punctuation">(</span><span class="token class-name">AnnotationWrapper</span><span class="token operator">::</span><span class="token function">getDatabaseId</span><span class="token punctuation">,</span> x <span class="token operator">-&gt;</span> x<span class="token punctuation">,</span> <span class="token punctuation">(</span>existing<span class="token punctuation">,</span> duplicate<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BuilderException</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;Detected conflicting annotations &#39;%s&#39; and &#39;%s&#39; on &#39;%s&#39;.&quot;</span><span class="token punctuation">,</span>
              existing<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> duplicate<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
              method<span class="token punctuation">.</span><span class="token function">getDeclaringClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;.&quot;</span> <span class="token operator">+</span> method<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u4E4B\u540E\u7684\u6B65\u9AA4\u662F\u7528\u4E8E: </span>
    <span class="token comment">// \u83B7\u53D6\u5F53\u524D\u6570\u636E\u5E93\u5382\u5546\u6807\u8BC6\u6240\u652F\u6301\u7684AnnotationWrapper</span>
    <span class="token class-name">AnnotationWrapper</span> annotationWrapper <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>databaseId <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      annotationWrapper <span class="token operator">=</span> statementAnnotations<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>databaseId<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5982\u679C\u6CA1\u6709\u53D6\u5230 \u5219\u83B7\u53D6\u6CA1\u6709\u914D\u7F6E\u6570\u636E\u5E93\u5382\u5546\u6807\u8BC6\u7684\u6240\u6709AnnotationWrapper</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>annotationWrapper <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      annotationWrapper <span class="token operator">=</span> statementAnnotations<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5982\u679C</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>errorIfNoMatch <span class="token operator">&amp;&amp;</span> annotationWrapper <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>statementAnnotations<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// Annotations exist, but there is no matching one for the specified databaseId</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BuilderException</span><span class="token punctuation">(</span>
          <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>
              <span class="token string">&quot;Could not find a statement annotation that correspond a current database or default statement on method &#39;%s.%s&#39;. Current database id is [%s].&quot;</span><span class="token punctuation">,</span>
              method<span class="token punctuation">.</span><span class="token function">getDeclaringClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> method<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> databaseId<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span>annotationWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>AnnotationWrapper</code> \u662Fmybatis sql\u6620\u5C04\u6CE8\u89E3\u4FE1\u606F\u7684\u5C01\u88C5. \u5B83\u5305\u542B\u4E09\u4E2A\u6210\u5458\u53D8\u91CF:</p><ul><li>sql\u6620\u5C04\u6CE8\u89E3\u7C7B: private final Annotation annotation;</li><li>\u6570\u636E\u5E93\u5382\u5546\u6807\u8BC6: private final String databaseId;</li><li>sql\u547D\u4EE4\u7C7B\u578B\u679A\u4E3E(\u5305\u62ECUNKNOWN, INSERT, UPDATE, DELETE, SELECT, FLUSH):<br> private final SqlCommandType sqlCommandType;</li></ul><p>\u4EE5\u4E0A\u53C2\u6570\u7684\u521D\u59CB\u5316\u5728\u6784\u9020\u5668\u4E2D\u5B8C\u6210. \u5373<code>map(AnnotationWrapper::new)</code>. \u4E0B\u9762\u662F\u6784\u9020\u5668\u7684\u5177\u4F53\u5185\u5BB9:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">AnnotationWrapper</span><span class="token punctuation">(</span><span class="token class-name">Annotation</span> annotation<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>annotation <span class="token operator">=</span> annotation<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>annotation <span class="token keyword">instanceof</span> <span class="token class-name">Select</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    databaseId <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Select</span><span class="token punctuation">)</span> annotation<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">databaseId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    sqlCommandType <span class="token operator">=</span> <span class="token class-name">SqlCommandType</span><span class="token punctuation">.</span><span class="token constant">SELECT</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>annotation <span class="token keyword">instanceof</span> <span class="token class-name">Update</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    databaseId <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Update</span><span class="token punctuation">)</span> annotation<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">databaseId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    sqlCommandType <span class="token operator">=</span> <span class="token class-name">SqlCommandType</span><span class="token punctuation">.</span><span class="token constant">UPDATE</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>annotation <span class="token keyword">instanceof</span> <span class="token class-name">Insert</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    databaseId <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Insert</span><span class="token punctuation">)</span> annotation<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">databaseId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    sqlCommandType <span class="token operator">=</span> <span class="token class-name">SqlCommandType</span><span class="token punctuation">.</span><span class="token constant">INSERT</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>annotation <span class="token keyword">instanceof</span> <span class="token class-name">Delete</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    databaseId <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Delete</span><span class="token punctuation">)</span> annotation<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">databaseId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    sqlCommandType <span class="token operator">=</span> <span class="token class-name">SqlCommandType</span><span class="token punctuation">.</span><span class="token constant">DELETE</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>annotation <span class="token keyword">instanceof</span> <span class="token class-name">SelectProvider</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    databaseId <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">SelectProvider</span><span class="token punctuation">)</span> annotation<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">databaseId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    sqlCommandType <span class="token operator">=</span> <span class="token class-name">SqlCommandType</span><span class="token punctuation">.</span><span class="token constant">SELECT</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>annotation <span class="token keyword">instanceof</span> <span class="token class-name">UpdateProvider</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    databaseId <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">UpdateProvider</span><span class="token punctuation">)</span> annotation<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">databaseId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    sqlCommandType <span class="token operator">=</span> <span class="token class-name">SqlCommandType</span><span class="token punctuation">.</span><span class="token constant">UPDATE</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>annotation <span class="token keyword">instanceof</span> <span class="token class-name">InsertProvider</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    databaseId <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">InsertProvider</span><span class="token punctuation">)</span> annotation<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">databaseId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    sqlCommandType <span class="token operator">=</span> <span class="token class-name">SqlCommandType</span><span class="token punctuation">.</span><span class="token constant">INSERT</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>annotation <span class="token keyword">instanceof</span> <span class="token class-name">DeleteProvider</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    databaseId <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">DeleteProvider</span><span class="token punctuation">)</span> annotation<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">databaseId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    sqlCommandType <span class="token operator">=</span> <span class="token class-name">SqlCommandType</span><span class="token punctuation">.</span><span class="token constant">DELETE</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    sqlCommandType <span class="token operator">=</span> <span class="token class-name">SqlCommandType</span><span class="token punctuation">.</span><span class="token constant">UNKNOWN</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>annotation <span class="token keyword">instanceof</span> <span class="token class-name">Options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      databaseId <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Options</span><span class="token punctuation">)</span> annotation<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">databaseId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>annotation <span class="token keyword">instanceof</span> <span class="token class-name">SelectKey</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      databaseId <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">SelectKey</span><span class="token punctuation">)</span> annotation<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">databaseId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      databaseId <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parseresultmap" tabindex="-1"><a class="header-anchor" href="#parseresultmap" aria-hidden="true">#</a> parseResultMap</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>  <span class="token keyword">private</span> <span class="token class-name">String</span> <span class="token function">parseResultMap</span><span class="token punctuation">(</span><span class="token class-name">Method</span> method<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> returnType <span class="token operator">=</span> <span class="token function">getReturnType</span><span class="token punctuation">(</span>method<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// mybatis\u652F\u6301\u4E24\u79CD\u65B9\u5F0F\u7684\u7ED3\u679C\u6620\u5C04\u6CE8\u89E3 @Arg \u6216\u8005 @Result</span>
    <span class="token class-name">Arg</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args <span class="token operator">=</span> method<span class="token punctuation">.</span><span class="token function">getAnnotationsByType</span><span class="token punctuation">(</span><span class="token class-name">Arg</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Result</span><span class="token punctuation">[</span><span class="token punctuation">]</span> results <span class="token operator">=</span> method<span class="token punctuation">.</span><span class="token function">getAnnotationsByType</span><span class="token punctuation">(</span><span class="token class-name">Result</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u7C7B\u578B\u9274\u522B\u5668 \u5F53\u67D0\u4E2A\u5B57\u6BB5\u503C\u7B26\u5408case\u4E2D\u7684\u503C\u65F6\u4F7F\u7528\u8BE5case\u7684\u7ED3\u679C\u4F5C\u4E3A\u8FD4\u56DE</span>
    <span class="token comment">// \u53EF\u4EE5\u53C2\u8003 https://mybatis.org/mybatis-3/zh/sqlmap-xml.html \u4E2D \u9274\u522B\u5668\u4E00\u8282</span>
    <span class="token class-name">TypeDiscriminator</span> typeDiscriminator <span class="token operator">=</span> method<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span><span class="token class-name">TypeDiscriminator</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u751F\u6210\u4E00\u4E2A\u552F\u4E00\u7684ResultMapId</span>
    <span class="token class-name">String</span> resultMapId <span class="token operator">=</span> <span class="token function">generateResultMapName</span><span class="token punctuation">(</span>method<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">applyResultMap</span><span class="token punctuation">(</span>resultMapId<span class="token punctuation">,</span> returnType<span class="token punctuation">,</span> args<span class="token punctuation">,</span> results<span class="token punctuation">,</span> typeDiscriminator<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> resultMapId<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">private</span> <span class="token class-name">String</span> <span class="token function">generateResultMapName</span><span class="token punctuation">(</span><span class="token class-name">Method</span> method<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Results</span> results <span class="token operator">=</span> method<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span><span class="token class-name">Results</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5982\u679C@Results\u6CE8\u89E3\u4E2D\u6307\u5B9A\u4E86id\u8FD9\u76F4\u63A5\u4F7F\u7528\u8BE5\u7C7B\u540D+id\u4F5C\u4E3A\u7ED3\u679C</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>results <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>results<span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> type<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;.&quot;</span> <span class="token operator">+</span> results<span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5426\u5219: \u4F7F\u7528\u65B9\u6CD5\u53C2\u6570\u7C7B\u578B\u62FC\u63A5 \u4F5C\u4E3A\u540E\u7F00</span>
    <span class="token class-name">StringBuilder</span> suffix <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> c <span class="token operator">:</span> method<span class="token punctuation">.</span><span class="token function">getParameterTypes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      suffix<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;-&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      suffix<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span><span class="token function">getSimpleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5982\u679C\u6CA1\u6709\u53C2\u6570 \u5219\u4F7F\u7528-void \u4F5C\u4E3A\u540E\u7F00</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>suffix<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      suffix<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;-void&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u4F7F\u7528\u7C7B\u540D+\u65B9\u6CD5\u540D+\u540E\u7F00\u4F5C\u4E3A\u7ED3\u679C</span>
    <span class="token keyword">return</span> type<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;.&quot;</span> <span class="token operator">+</span> method<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> suffix<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">applyResultMap</span><span class="token punctuation">(</span><span class="token class-name">String</span> resultMapId<span class="token punctuation">,</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> returnType<span class="token punctuation">,</span> <span class="token class-name">Arg</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">,</span> <span class="token class-name">Result</span><span class="token punctuation">[</span><span class="token punctuation">]</span> results<span class="token punctuation">,</span> <span class="token class-name">TypeDiscriminator</span> discriminator<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u7528\u4E8E\u5B58\u653E @Arg \u548C @Result \u5BF9\u5E94\u7684 ResultMapping\u5BF9\u8C61</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ResultMapping</span><span class="token punctuation">&gt;</span></span> resultMappings <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u751F\u6210@Arg\u6CE8\u89E3\u5BF9\u5E94\u7684 ResultMapping\u5BF9\u8C61</span>
    <span class="token function">applyConstructorArgs</span><span class="token punctuation">(</span>args<span class="token punctuation">,</span> returnType<span class="token punctuation">,</span> resultMappings<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u751F\u6210@Result\u6CE8\u89E3\u5BF9\u5E94\u7684 ResultMapping\u5BF9\u8C61</span>
    <span class="token function">applyResults</span><span class="token punctuation">(</span>results<span class="token punctuation">,</span> returnType<span class="token punctuation">,</span> resultMappings<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u751F\u6210\u9274\u522B\u5668\u7C7B Discriminator</span>
    <span class="token class-name">Discriminator</span> disc <span class="token operator">=</span> <span class="token function">applyDiscriminator</span><span class="token punctuation">(</span>resultMapId<span class="token punctuation">,</span> returnType<span class="token punctuation">,</span> discriminator<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u521B\u5EFAResultMap \u5E76\u6DFB\u52A0\u5230configuration\u4E2D\u7684 Map&lt;String, ResultMap&gt; resultMaps \u4E2D</span>
    assistant<span class="token punctuation">.</span><span class="token function">addResultMap</span><span class="token punctuation">(</span>resultMapId<span class="token punctuation">,</span> returnType<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> disc<span class="token punctuation">,</span> resultMappings<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u9274\u522B\u5668 \u6839\u636E\u5B57\u6BB5\u503C\u8FDB\u884C\u5339\u914D\u5BF9\u5E94\u7684\u7ED3\u679Ccase\u540E \u4E4B\u540E\u540C\u6837\u4F1A\u6267\u884C applyConstructorArgs applyResults assistant.addResultMap</span>
    <span class="token function">createDiscriminatorResultMaps</span><span class="token punctuation">(</span>resultMapId<span class="token punctuation">,</span> returnType<span class="token punctuation">,</span> discriminator<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">createDiscriminatorResultMaps</span><span class="token punctuation">(</span><span class="token class-name">String</span> resultMapId<span class="token punctuation">,</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> resultType<span class="token punctuation">,</span> <span class="token class-name">TypeDiscriminator</span> discriminator<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>discriminator <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Case</span> c <span class="token operator">:</span> discriminator<span class="token punctuation">.</span><span class="token function">cases</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> caseResultMapId <span class="token operator">=</span> resultMapId <span class="token operator">+</span> <span class="token string">&quot;-&quot;</span> <span class="token operator">+</span> c<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ResultMapping</span><span class="token punctuation">&gt;</span></span> resultMappings <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// issue #136</span>
        <span class="token function">applyConstructorArgs</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span><span class="token function">constructArgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> resultType<span class="token punctuation">,</span> resultMappings<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">applyResults</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span><span class="token function">results</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> resultType<span class="token punctuation">,</span> resultMappings<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// TODO add AutoMappingBehaviour</span>
        assistant<span class="token punctuation">.</span><span class="token function">addResultMap</span><span class="token punctuation">(</span>caseResultMapId<span class="token punctuation">,</span> c<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> resultMapId<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> resultMappings<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u901A\u8FC7\u4EE5\u4E0A\u5206\u6790\u53EF\u77E5, mybatis\u652F\u6301\u4F7F\u7528@Result \u4EE5\u53CA @Arg \u8FDB\u884C\u6784\u5EFA\u7ED3\u679C\u6620\u5C04\u5BF9\u8C61. \u9274\u522B\u5668\u53EF\u4EE5\u6839\u636E\u5B57\u6BB5\u7684\u503C, \u52A8\u6001\u5339\u914D\u4E0D\u540C\u7684\u6620\u5C04\u7ED3\u679C.</p><p>\u4E0B\u9762\u518D\u770B\u4E00\u4E0B <code>assistant.addResultMap</code> \u65B9\u6CD5:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>  <span class="token keyword">public</span> <span class="token class-name">ResultMap</span> <span class="token function">addResultMap</span><span class="token punctuation">(</span>
      <span class="token class-name">String</span> id<span class="token punctuation">,</span>
      <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> type<span class="token punctuation">,</span>
      <span class="token class-name">String</span> extend<span class="token punctuation">,</span>
      <span class="token class-name">Discriminator</span> discriminator<span class="token punctuation">,</span>
      <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ResultMapping</span><span class="token punctuation">&gt;</span></span> resultMappings<span class="token punctuation">,</span>
      <span class="token class-name">Boolean</span> autoMapping<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    id <span class="token operator">=</span> <span class="token function">applyCurrentNamespace</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    extend <span class="token operator">=</span> <span class="token function">applyCurrentNamespace</span><span class="token punctuation">(</span>extend<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u5C06extend\u5BF9\u5E94\u7684ResultMapping\u96C6\u5408, \u90FD\u6DFB\u52A0\u5230resultMappings\u4E2D\u5E76\u4E14\u79FB\u9664\u4E24\u8005\u516C\u5171\u7684.</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>extend <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>configuration<span class="token punctuation">.</span><span class="token function">hasResultMap</span><span class="token punctuation">(</span>extend<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IncompleteElementException</span><span class="token punctuation">(</span><span class="token string">&quot;Could not find a parent resultmap with id &#39;&quot;</span> <span class="token operator">+</span> extend <span class="token operator">+</span> <span class="token string">&quot;&#39;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token class-name">ResultMap</span> resultMap <span class="token operator">=</span> configuration<span class="token punctuation">.</span><span class="token function">getResultMap</span><span class="token punctuation">(</span>extend<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ResultMapping</span><span class="token punctuation">&gt;</span></span> extendedResultMappings <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>resultMap<span class="token punctuation">.</span><span class="token function">getResultMappings</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// \u79FB\u9664extendedResultMappings\u4E2D\u542B\u6709\u7684resultMappings\u7684\u90E8\u5206</span>
      extendedResultMappings<span class="token punctuation">.</span><span class="token function">removeAll</span><span class="token punctuation">(</span>resultMappings<span class="token punctuation">)</span><span class="token punctuation">;</span>
      
      <span class="token comment">// \u79FB\u9664extendedResultMappings\u4E2D\u542B\u6709resultMappings\u6784\u9020\u5668\u6620\u5C04\u7684ResultMapping</span>
      <span class="token comment">// Remove parent constructor if this resultMap declares a constructor.</span>
      <span class="token keyword">boolean</span> declaresConstructor <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">ResultMapping</span> resultMapping <span class="token operator">:</span> resultMappings<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>resultMapping<span class="token punctuation">.</span><span class="token function">getFlags</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token class-name">ResultFlag</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          declaresConstructor <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
          <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>declaresConstructor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        extendedResultMappings<span class="token punctuation">.</span><span class="token function">removeIf</span><span class="token punctuation">(</span>resultMapping <span class="token operator">-&gt;</span> resultMapping<span class="token punctuation">.</span><span class="token function">getFlags</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token class-name">ResultFlag</span><span class="token punctuation">.</span><span class="token constant">CONSTRUCTOR</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token comment">// \u5C06\u79FB\u9664\u5E72\u51C0\u540E\u7684extendedResultMappings \u6DFB\u52A0\u5230resultMappings\u96C6\u5408\u4E2D</span>
      resultMappings<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>extendedResultMappings<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u6784\u5EFAResultMap\u5BF9\u8C61\u5E76\u4EA4\u7ED9configuration\u8FDB\u884C\u7BA1\u7406</span>
    <span class="token comment">// addResultMap \u4F1A\u5C06ResultMap\u5BF9\u8C61\u52A0\u5165\u5230Map&lt;String, ResultMap&gt; resultMaps\u4E2D\u5E76\u4F7F\u7528ResultMap\u7684id\u4F5C\u4E3Akey</span>
    <span class="token class-name">ResultMap</span> resultMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ResultMap<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span>configuration<span class="token punctuation">,</span> id<span class="token punctuation">,</span> type<span class="token punctuation">,</span> resultMappings<span class="token punctuation">,</span> autoMapping<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">discriminator</span><span class="token punctuation">(</span>discriminator<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    configuration<span class="token punctuation">.</span><span class="token function">addResultMap</span><span class="token punctuation">(</span>resultMap<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> resultMap<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="parsestatement" tabindex="-1"><a class="header-anchor" href="#parsestatement" aria-hidden="true">#</a> parseStatement</h4><p>\u8BE5\u65B9\u6CD5\u7528\u4E8E\u5C06\u63A5\u53E3\u4E0A\u7684sql\u6CE8\u89E3\u4E2D\u7684\u4FE1\u606F, \u8F6C\u6362\u6210<code>MappedStatement</code>\u7C7B\u578B, \u5E76\u4F7F\u7528<code>Map&lt;String, MappedStatement&gt; mappedStatements</code>\u7BA1\u7406\u5DF2\u7ECF\u89E3\u6790\u8FC7\u7684statement.</p><p>\u5728<code>MappedStatement</code>\u7C7B\u4E2D\u6BD4\u8F83\u91CD\u8981\u7684\u7C7B\u6709:</p><ol><li><code>StatementType statementType</code>: sql\u8BED\u53E5\u7684\u7C7B\u578B, \u6709STATEMENT(\u4E0D\u8FDB\u884C\u9884\u7F16\u8BD1), PREPARED(\u9884\u7F16\u8BD1), CALLABLE(\u5B58\u50A8\u8FC7\u7A0B)</li><li><code>SqlSource</code>: \u5B83\u63D0\u4F9B\u4E86\u7528\u4E8E\u83B7\u53D6\u5BF9sql\u8BED\u53E5\u7684BoundSql\u7684\u65B9\u6CD5. BoundSql\u7684sql\u53C2\u6570\u4E3A\u8F6C\u6362\u5360\u4F4D\u7B26\u540E\u7684sql\u8BED\u53E5</li><li><code>String parameterMap, Class&lt;?&gt; parameterType</code>: sql\u4E2D\u53C2\u6570\u7684\u6620\u5C04\u7C7B\u578B</li><li><code>Class&lt;?&gt; resultType</code>: \u8FD4\u56DE\u7C7B</li><li><code>String resultMap</code>: \u5BF9\u5E94\u7684\u7ED3\u679CresultMapId</li><li><code>KeyGenerator keyGenerator</code>: key\u751F\u6210\u7B56\u7565</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>
  <span class="token keyword">void</span> <span class="token function">parseStatement</span><span class="token punctuation">(</span><span class="token class-name">Method</span> method<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> parameterTypeClass <span class="token operator">=</span> <span class="token function">getParameterType</span><span class="token punctuation">(</span>method<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">final</span> <span class="token class-name">LanguageDriver</span> languageDriver <span class="token operator">=</span> <span class="token function">getLanguageDriver</span><span class="token punctuation">(</span>method<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u6B64\u5904\u7684getAnnotationWrapper\u65B9\u6CD5\u903B\u8F91\u540C\u4E0A\uFF0CstatementAnnotationTypes\u7684\u6CE8\u89E3\u8303\u56F4\u4E3A\uFF1A</span>
    <span class="token comment">// Select.class, Update.class, Insert.class, Delete.class, </span>
    <span class="token comment">// SelectProvider.class, UpdateProvider.class, InsertProvider.class, DeleteProvider.class</span>
    <span class="token function">getAnnotationWrapper</span><span class="token punctuation">(</span>method<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> statementAnnotationTypes<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ifPresent</span><span class="token punctuation">(</span>statementAnnotation <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">// SqlSource\u63D0\u4F9B\u4E86getBoundSql\u65B9\u6CD5, \u7528\u4E8E\u83B7\u53D6BoundSql. BoundSql\u662Fsql\u6CE8\u89E3(xml)\u7684\u5C01\u88C5, \u5305\u542B\u5982\u4E0B\u5C5E\u6027:</span>
      <span class="token comment">// sql: \u7ECF\u8FC7\u8F6C\u6362\u540E\u7684sql\u5B57\u7B26\u4E32(\u9884\u7F16\u8BD1\u683C\u5F0F\u7684, \u800C\u975E\u539F\u59CB\u7684\u5B57\u7B26\u4E32, \u5DF2\u7ECF\u5C06\u5360\u4F4D\u7B26\u8FDB\u884C\u5904\u7406)</span>
      <span class="token comment">// parameterMappings: \u53C2\u6570\u6620\u5C04\u5217\u8868. List&lt;ParameterMapping&gt;\u7C7B\u578B. ParameterMapping\u7C7B\u5305\u542B\u4E86\u53C2\u6570\u7684\u540D\u79F0, javaType, jdbcType, \u7C7B\u578B\u8F6C\u6362\u5668\u7B49.</span>
      <span class="token comment">// </span>
      <span class="token keyword">final</span> <span class="token class-name">SqlSource</span> sqlSource <span class="token operator">=</span> <span class="token function">buildSqlSource</span><span class="token punctuation">(</span>statementAnnotation<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> parameterTypeClass<span class="token punctuation">,</span> languageDriver<span class="token punctuation">,</span> method<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// SqlCommandType\u4E3A\u679A\u4E3E\u7C7B\u578B\u5F53\u751F\u6210AnnotationWrapper\u65F6 \u5BF9\u4E0D\u540C\u7684\u6CE8\u89E3\u8FDB\u884C\u8BBE\u7F6ESqlCommandType\u7684\u503C.</span>
      <span class="token comment">// \u6BD4\u5982: </span>
      <span class="token comment">// if (annotation instanceof Select) {</span>
      <span class="token comment">//   databaseId = ((Select) annotation).databaseId();</span>
      <span class="token comment">//   sqlCommandType = SqlCommandType.SELECT;</span>
      <span class="token comment">// }</span>
      <span class="token keyword">final</span> <span class="token class-name">SqlCommandType</span> sqlCommandType <span class="token operator">=</span> statementAnnotation<span class="token punctuation">.</span><span class="token function">getSqlCommandType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">final</span> <span class="token class-name">Options</span> options <span class="token operator">=</span> <span class="token function">getAnnotationWrapper</span><span class="token punctuation">(</span>method<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token class-name">Options</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>x <span class="token operator">-&gt;</span> <span class="token punctuation">(</span><span class="token class-name">Options</span><span class="token punctuation">)</span>x<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">final</span> <span class="token class-name">String</span> mappedStatementId <span class="token operator">=</span> type<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;.&quot;</span> <span class="token operator">+</span> method<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// \u5BF9\u4E8EInsert\u548CUpdate\u53EF\u4EE5\u914D\u7F6ESelectKey\u6CE8\u89E3\u7528\u4E8E\u751F\u6210\u4E3B\u952E, \u8FD9\u91CC\u8FDB\u884CKeyGenerator\u7684\u5B9E\u4F8B\u5316.</span>
      <span class="token keyword">final</span> <span class="token class-name">KeyGenerator</span> keyGenerator<span class="token punctuation">;</span>
      <span class="token class-name">String</span> keyProperty <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
      <span class="token class-name">String</span> keyColumn <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">SqlCommandType</span><span class="token punctuation">.</span><span class="token constant">INSERT</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>sqlCommandType<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token class-name">SqlCommandType</span><span class="token punctuation">.</span><span class="token constant">UPDATE</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>sqlCommandType<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// first check for SelectKey annotation - that overrides everything else</span>
        <span class="token class-name">SelectKey</span> selectKey <span class="token operator">=</span> <span class="token function">getAnnotationWrapper</span><span class="token punctuation">(</span>method<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token class-name">SelectKey</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>x <span class="token operator">-&gt;</span> <span class="token punctuation">(</span><span class="token class-name">SelectKey</span><span class="token punctuation">)</span>x<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>selectKey <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          keyGenerator <span class="token operator">=</span> <span class="token function">handleSelectKeyAnnotation</span><span class="token punctuation">(</span>selectKey<span class="token punctuation">,</span> mappedStatementId<span class="token punctuation">,</span> <span class="token function">getParameterType</span><span class="token punctuation">(</span>method<span class="token punctuation">)</span><span class="token punctuation">,</span> languageDriver<span class="token punctuation">)</span><span class="token punctuation">;</span>
          keyProperty <span class="token operator">=</span> selectKey<span class="token punctuation">.</span><span class="token function">keyProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>options <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          keyGenerator <span class="token operator">=</span> configuration<span class="token punctuation">.</span><span class="token function">isUseGeneratedKeys</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token class-name">Jdbc3KeyGenerator</span><span class="token punctuation">.</span><span class="token constant">INSTANCE</span> <span class="token operator">:</span> <span class="token class-name">NoKeyGenerator</span><span class="token punctuation">.</span><span class="token constant">INSTANCE</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          keyGenerator <span class="token operator">=</span> options<span class="token punctuation">.</span><span class="token function">useGeneratedKeys</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token class-name">Jdbc3KeyGenerator</span><span class="token punctuation">.</span><span class="token constant">INSTANCE</span> <span class="token operator">:</span> <span class="token class-name">NoKeyGenerator</span><span class="token punctuation">.</span><span class="token constant">INSTANCE</span><span class="token punctuation">;</span>
          keyProperty <span class="token operator">=</span> options<span class="token punctuation">.</span><span class="token function">keyProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          keyColumn <span class="token operator">=</span> options<span class="token punctuation">.</span><span class="token function">keyColumn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        keyGenerator <span class="token operator">=</span> <span class="token class-name">NoKeyGenerator</span><span class="token punctuation">.</span><span class="token constant">INSTANCE</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token class-name">Integer</span> fetchSize <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
      <span class="token class-name">Integer</span> timeout <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
      <span class="token comment">// \u4F7F\u7528\u9884\u7F16\u8BD1\u7C7B\u578B\u7684statement</span>
      <span class="token class-name">StatementType</span> statementType <span class="token operator">=</span> <span class="token class-name">StatementType</span><span class="token punctuation">.</span><span class="token constant">PREPARED</span><span class="token punctuation">;</span>
      <span class="token class-name">ResultSetType</span> resultSetType <span class="token operator">=</span> configuration<span class="token punctuation">.</span><span class="token function">getDefaultResultSetType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// \u5982\u679C\u662Fselect\u7C7B\u578B\u5219\u652F\u6301\u4F7F\u7528\u7F13\u5B58</span>
      <span class="token keyword">boolean</span> isSelect <span class="token operator">=</span> sqlCommandType <span class="token operator">==</span> <span class="token class-name">SqlCommandType</span><span class="token punctuation">.</span><span class="token constant">SELECT</span><span class="token punctuation">;</span>
      <span class="token keyword">boolean</span> flushCache <span class="token operator">=</span> <span class="token operator">!</span>isSelect<span class="token punctuation">;</span>
      <span class="token keyword">boolean</span> useCache <span class="token operator">=</span> isSelect<span class="token punctuation">;</span>
      <span class="token comment">// \u5982\u679C\u6709Options\u6CE8\u89E3\u7684\u914D\u7F6E \u5219\u8FDB\u884C\u540E\u7EED\u5904\u7406, \u8986\u76D6\u9ED8\u8BA4\u7684flushCache useCache fetchSize statementType resultSetType\u503C</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>options <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">FlushCachePolicy</span><span class="token punctuation">.</span><span class="token constant">TRUE</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span><span class="token function">flushCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          flushCache <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">FlushCachePolicy</span><span class="token punctuation">.</span><span class="token constant">FALSE</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span><span class="token function">flushCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          flushCache <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        useCache <span class="token operator">=</span> options<span class="token punctuation">.</span><span class="token function">useCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        fetchSize <span class="token operator">=</span> options<span class="token punctuation">.</span><span class="token function">fetchSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">||</span> options<span class="token punctuation">.</span><span class="token function">fetchSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token constant">MIN_VALUE</span> <span class="token operator">?</span> options<span class="token punctuation">.</span><span class="token function">fetchSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token comment">//issue #348</span>
        timeout <span class="token operator">=</span> options<span class="token punctuation">.</span><span class="token function">timeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">?</span> options<span class="token punctuation">.</span><span class="token function">timeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        statementType <span class="token operator">=</span> options<span class="token punctuation">.</span><span class="token function">statementType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">.</span><span class="token function">resultSetType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token class-name">ResultSetType</span><span class="token punctuation">.</span><span class="token constant">DEFAULT</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          resultSetType <span class="token operator">=</span> options<span class="token punctuation">.</span><span class="token function">resultSetType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>

      <span class="token class-name">String</span> resultMapId <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>isSelect<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ResultMap</span> resultMapAnnotation <span class="token operator">=</span> method<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span><span class="token class-name">ResultMap</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>resultMapAnnotation <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          resultMapId <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">,</span> resultMapAnnotation<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          resultMapId <span class="token operator">=</span> <span class="token function">generateResultMapName</span><span class="token punctuation">(</span>method<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>

      <span class="token comment">// \u4F7F\u7528Map&lt;String, MappedStatement&gt; mappedStatements\u7BA1\u7406\u5DF2\u7ECF\u89E3\u6790\u8FC7\u7684statement</span>
      assistant<span class="token punctuation">.</span><span class="token function">addMappedStatement</span><span class="token punctuation">(</span>
          mappedStatementId<span class="token punctuation">,</span>
          sqlSource<span class="token punctuation">,</span>
          statementType<span class="token punctuation">,</span>
          sqlCommandType<span class="token punctuation">,</span>
          fetchSize<span class="token punctuation">,</span>
          timeout<span class="token punctuation">,</span>
          <span class="token comment">// ParameterMapID</span>
          <span class="token keyword">null</span><span class="token punctuation">,</span>
          parameterTypeClass<span class="token punctuation">,</span>
          resultMapId<span class="token punctuation">,</span>
          <span class="token function">getReturnType</span><span class="token punctuation">(</span>method<span class="token punctuation">)</span><span class="token punctuation">,</span>
          resultSetType<span class="token punctuation">,</span>
          flushCache<span class="token punctuation">,</span>
          useCache<span class="token punctuation">,</span>
          <span class="token comment">// TODO gcode issue #577</span>
          <span class="token boolean">false</span><span class="token punctuation">,</span>
          keyGenerator<span class="token punctuation">,</span>
          keyProperty<span class="token punctuation">,</span>
          keyColumn<span class="token punctuation">,</span>
          statementAnnotation<span class="token punctuation">.</span><span class="token function">getDatabaseId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
          languageDriver<span class="token punctuation">,</span>
          <span class="token comment">// ResultSets</span>
          options <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token function">nullOrEmpty</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span><span class="token function">resultSets</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="xmlmapperbuilder" tabindex="-1"><a class="header-anchor" href="#xmlmapperbuilder" aria-hidden="true">#</a> XMLMapperBuilder</h2><p>mapper\u8282\u70B9\u914D\u7F6E, \u4F7F\u7528url\u6216\u8005resource\u5C5E\u6027\u90FD\u4F1A\u4F7F\u7528\u8BE5\u7C7B\u8FDB\u884C\u89E3\u6790xml\u914D\u7F6E.</p><p>\u76F8\u6BD4\u8F83\u4E8EMapperAnnotationBuilder, \u7531\u4E8Exml\u4E0D\u662Fjava\u7F16\u8BD1\u5668\u6240\u7406\u89E3\u7684\u4E1C\u897F. \u56E0\u6B64\u9700\u8981\u5BF9xml\u5728\u52A0\u8F7D\u7684\u65F6\u5019\u8FDB\u884C\u89E3\u6790\u4E3A\u76F8\u5E94\u7684\u5BF9\u8C61\u624D\u80FD\u591F\u4F7F\u7528. <code>XPathParser</code>\u5C31\u662F\u4E00\u79CD\u901A\u8FC7xpath\u8FDB\u884Cxml\u8282\u70B9\u53CA\u5C5E\u6027\u83B7\u53D6\u7684\u5DE5\u5177.</p><p>XMLMapperBuilder\u6784\u9020\u5668\u4E3A:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token class-name">XMLMapperBuilder</span><span class="token punctuation">(</span><span class="token class-name">XPathParser</span> parser<span class="token punctuation">,</span> <span class="token class-name">Configuration</span> configuration<span class="token punctuation">,</span> <span class="token class-name">String</span> resource<span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">XNode</span><span class="token punctuation">&gt;</span></span> sqlFragments<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span>configuration<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>builderAssistant <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MapperBuilderAssistant</span><span class="token punctuation">(</span>configuration<span class="token punctuation">,</span> resource<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>parser <span class="token operator">=</span> parser<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>sqlFragments <span class="token operator">=</span> sqlFragments<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>resource <span class="token operator">=</span> resource<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="parse" tabindex="-1"><a class="header-anchor" href="#parse" aria-hidden="true">#</a> parse</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">parse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>configuration<span class="token punctuation">.</span><span class="token function">isResourceLoaded</span><span class="token punctuation">(</span>resource<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">configurationElement</span><span class="token punctuation">(</span>parser<span class="token punctuation">.</span><span class="token function">evalNode</span><span class="token punctuation">(</span><span class="token string">&quot;/mapper&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      configuration<span class="token punctuation">.</span><span class="token function">addLoadedResource</span><span class="token punctuation">(</span>resource<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">bindMapperForNamespace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">parsePendingResultMaps</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">parsePendingCacheRefs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">parsePendingStatements</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>configurationElement\u65B9\u6CD5\u7528\u4E8E\u89E3\u6790mapper\u8282\u70B9\u4E2D\u7684\u914D\u7F6E. \u8BE5\u65B9\u6CD5\u7684\u4EE3\u7801\u89C1\u4E0B:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>  <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">configurationElement</span><span class="token punctuation">(</span><span class="token class-name">XNode</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token class-name">String</span> namespace <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getStringAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;namespace&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>namespace <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> namespace<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BuilderException</span><span class="token punctuation">(</span><span class="token string">&quot;Mapper&#39;s namespace cannot be empty&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      builderAssistant<span class="token punctuation">.</span><span class="token function">setCurrentNamespace</span><span class="token punctuation">(</span>namespace<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">cacheRefElement</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">evalNode</span><span class="token punctuation">(</span><span class="token string">&quot;cache-ref&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">cacheElement</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">evalNode</span><span class="token punctuation">(</span><span class="token string">&quot;cache&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">parameterMapElement</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">evalNodes</span><span class="token punctuation">(</span><span class="token string">&quot;/mapper/parameterMap&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">resultMapElements</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">evalNodes</span><span class="token punctuation">(</span><span class="token string">&quot;/mapper/resultMap&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">sqlElement</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">evalNodes</span><span class="token punctuation">(</span><span class="token string">&quot;/mapper/sql&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">buildStatementFromContext</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">evalNodes</span><span class="token punctuation">(</span><span class="token string">&quot;select|insert|update|delete&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BuilderException</span><span class="token punctuation">(</span><span class="token string">&quot;Error parsing Mapper XML. The XML location is &#39;&quot;</span> <span class="token operator">+</span> resource <span class="token operator">+</span> <span class="token string">&quot;&#39;. Cause: &quot;</span> <span class="token operator">+</span> e<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>parameterMapElement</code>\u65B9\u6CD5\u7528\u4E8E\u89E3\u6790<code>parameterMap</code>\u8282\u70B9. \u89E3\u6790\u7684\u7ED3\u679C\u4F1A\u901A\u8FC7<code>ParameterMap</code>\u8FDB\u884C\u5C01\u88C5, <code>id</code>\u4E3A\u8BE5\u6620\u5C04\u7684\u552F\u4E00id, <code>type</code>\u4E3A\u6620\u5C04\u5BF9\u5E94\u7684java\u7C7B\u578B, <code>parameterMappings</code>\u4E3A\u5404\u4E2A\u5C5E\u6027\u7684\u6620\u5C04\u4FE1\u606F, \u6BCF\u4E2A\u5C5E\u6027\u7684\u6620\u5C04\u4FE1\u606F\u90FD\u662F\u4E00\u4E2A<code>ParameterMapping</code>\u5BF9\u8C61. \u6700\u540E\u8BE5<code>ParameterMap</code>\u4EA4\u7ED9configuration\u7684<code>Map&lt;String, ParameterMap&gt; parameterMaps</code>\u8FDB\u884C\u7BA1\u7406.</p><p><code>resultMapElement</code>\u65B9\u6CD5\u7528\u4E8E\u89E3\u6790<code>resultMap</code>\u8282\u70B9, \u8BE5\u8282\u70B9\u7684\u5B9A\u4E49\u89C1\u4E0B(\u53EA\u7C98\u8D34\u4E86\u90E8\u5206)</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>!ELEMENT</span> <span class="token attr-name">resultMap</span> <span class="token attr-name">(constructor?,id*,result*,association*,collection*,</span> <span class="token attr-name">discriminator?)</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>!ATTLIST</span> <span class="token attr-name">resultMap</span>
<span class="token attr-name">id</span> <span class="token attr-name">CDATA</span> <span class="token attr-name">#REQUIRED</span>
<span class="token attr-name">type</span> <span class="token attr-name">CDATA</span> <span class="token attr-name">#REQUIRED</span>
<span class="token attr-name">extends</span> <span class="token attr-name">CDATA</span> <span class="token attr-name">#IMPLIED</span>
<span class="token attr-name">autoMapping</span> <span class="token attr-name">(true|false)</span> <span class="token attr-name">#IMPLIED</span>
<span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>!ELEMENT</span> <span class="token attr-name">constructor</span> <span class="token attr-name">(idArg*,arg*)</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>!ELEMENT</span> <span class="token attr-name">id</span> <span class="token attr-name">EMPTY</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>!ATTLIST</span> <span class="token attr-name">id</span>
<span class="token attr-name">property</span> <span class="token attr-name">CDATA</span> <span class="token attr-name">#IMPLIED</span>
<span class="token attr-name">javaType</span> <span class="token attr-name">CDATA</span> <span class="token attr-name">#IMPLIED</span>
<span class="token attr-name">column</span> <span class="token attr-name">CDATA</span> <span class="token attr-name">#IMPLIED</span>
<span class="token attr-name">jdbcType</span> <span class="token attr-name">CDATA</span> <span class="token attr-name">#IMPLIED</span>
<span class="token attr-name">typeHandler</span> <span class="token attr-name">CDATA</span> <span class="token attr-name">#IMPLIED</span>
<span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>!ELEMENT</span> <span class="token attr-name">result</span> <span class="token attr-name">EMPTY</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>!ATTLIST</span> <span class="token attr-name">result</span>
<span class="token attr-name">property</span> <span class="token attr-name">CDATA</span> <span class="token attr-name">#IMPLIED</span>
<span class="token attr-name">javaType</span> <span class="token attr-name">CDATA</span> <span class="token attr-name">#IMPLIED</span>
<span class="token attr-name">column</span> <span class="token attr-name">CDATA</span> <span class="token attr-name">#IMPLIED</span>
<span class="token attr-name">jdbcType</span> <span class="token attr-name">CDATA</span> <span class="token attr-name">#IMPLIED</span>
<span class="token attr-name">typeHandler</span> <span class="token attr-name">CDATA</span> <span class="token attr-name">#IMPLIED</span>
<span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8B6C\u5982, xml\u4E2D\u6211\u4EEC\u6709\u5982\u4E0B\u7684\u914D\u7F6E</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resultMap</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>chatUserResultMap<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>chatUser<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>id<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>id<span class="token punctuation">&quot;</span></span> <span class="token attr-name">javaType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>long<span class="token punctuation">&quot;</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>BIGINT<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>user_id<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>userId<span class="token punctuation">&quot;</span></span> <span class="token attr-name">javaType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>long<span class="token punctuation">&quot;</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>BIGINT<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>room_id<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>roomId<span class="token punctuation">&quot;</span></span> <span class="token attr-name">javaType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>long<span class="token punctuation">&quot;</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>BIGINT<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>message<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>message<span class="token punctuation">&quot;</span></span> <span class="token attr-name">javaType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>string<span class="token punctuation">&quot;</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>VARCHAR<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>type<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>type<span class="token punctuation">&quot;</span></span> <span class="token attr-name">javaType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>messageTypeEnum<span class="token punctuation">&quot;</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>TINYINT<span class="token punctuation">&quot;</span></span> <span class="token attr-name">typeHandler</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>defaultEnumHandler<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>status<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>status<span class="token punctuation">&quot;</span></span> <span class="token attr-name">javaType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>statusEnum<span class="token punctuation">&quot;</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>TINYINT<span class="token punctuation">&quot;</span></span> <span class="token attr-name">typeHandler</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>defaultEnumHandler<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>create_time<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>createTime<span class="token punctuation">&quot;</span></span> <span class="token attr-name">javaType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>date<span class="token punctuation">&quot;</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>TIMESTAMP<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>update_time<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>updateTime<span class="token punctuation">&quot;</span></span> <span class="token attr-name">javaType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>date<span class="token punctuation">&quot;</span></span> <span class="token attr-name">jdbcType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>TIMESTAMP<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resultMap</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0B\u9762\u6765\u5206\u6790\u89E3\u6790\u7684\u4EE3\u7801, \u9996\u5148\u83B7\u53D6\u7ED3\u679C\u6620\u5C04\u5BF9\u5E94\u7684\u7C7B<code>Class&lt;?&gt; typeClass</code>. \u4F18\u5148\u4ECEDTD\u4E2D\u5B9A\u4E49\u7684type\u5C5E\u6027\u4E0A\u83B7\u53D6, \u5426\u5219\u83B7\u53D6ofType, resultType, javaType\u5C5E\u6027, \u5F53\u7136\u540E\u8005\u5728\u4E0A\u9762\u7684\u89C4\u8303\u4E2D\u5E76\u4E0D\u5B58\u5728, \u4F46\u4F7F\u7528\u8005\u4ECD\u65E7\u53EF\u4EE5\u914D\u7F6E.</p><p>for\u5FAA\u73AF\u904D\u5386<code>resultChildren</code>, \u7528\u4E8E\u5904\u7406<code>resultMap</code>\u7684\u5B50\u8282\u70B9, \u5E76\u5C06\u6BCF\u4E2A\u5B50\u8282\u70B9\u5C01\u88C5\u4E3A<code>ResultMapping</code>\u5BF9\u8C61.</p><p><code>extends</code>\u5C5E\u6027\u8868\u793A\u5F53\u524D<code>resultMap</code>\u7EE7\u627F\u7684\u7236<code>resultMap</code>\u6620\u5C04\u914D\u7F6E. \u5728<code>ResultMapResolver</code>\u7684<code>resolve</code>\u65B9\u6CD5\u4E2D\u4F1A\u83B7\u53D6\u6240\u7EE7\u627F\u7684<code>resultMap</code>, \u5E76\u79FB\u9664\u76F8\u540C\u7684<code>ResultMapping</code>\u5F97\u5230\u6700\u7EC8\u7684<code>List&lt;ResultMapping&gt;</code>, \u5E76\u6784\u5EFA<code>ResultMap</code>\u5BF9\u8C61. \u4EA4\u7531configuration\u7684<code>Map&lt;String, ResultMap&gt; resultMaps</code>\u7BA1\u7406.</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token class-name">ResultMap</span> <span class="token function">resultMapElement</span><span class="token punctuation">(</span><span class="token class-name">XNode</span> resultMapNode<span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ResultMapping</span><span class="token punctuation">&gt;</span></span> additionalResultMappings<span class="token punctuation">,</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> enclosingType<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">ErrorContext</span><span class="token punctuation">.</span><span class="token function">instance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">activity</span><span class="token punctuation">(</span><span class="token string">&quot;processing &quot;</span> <span class="token operator">+</span> resultMapNode<span class="token punctuation">.</span><span class="token function">getValueBasedIdentifier</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> type <span class="token operator">=</span> resultMapNode<span class="token punctuation">.</span><span class="token function">getStringAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;type&quot;</span><span class="token punctuation">,</span>
        resultMapNode<span class="token punctuation">.</span><span class="token function">getStringAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;ofType&quot;</span><span class="token punctuation">,</span>
            resultMapNode<span class="token punctuation">.</span><span class="token function">getStringAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;resultType&quot;</span><span class="token punctuation">,</span>
                resultMapNode<span class="token punctuation">.</span><span class="token function">getStringAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;javaType&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> typeClass <span class="token operator">=</span> <span class="token function">resolveClass</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>typeClass <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      typeClass <span class="token operator">=</span> <span class="token function">inheritEnclosingType</span><span class="token punctuation">(</span>resultMapNode<span class="token punctuation">,</span> enclosingType<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">Discriminator</span> discriminator <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ResultMapping</span><span class="token punctuation">&gt;</span></span> resultMappings <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>additionalResultMappings<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">XNode</span><span class="token punctuation">&gt;</span></span> resultChildren <span class="token operator">=</span> resultMapNode<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">XNode</span> resultChild <span class="token operator">:</span> resultChildren<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&quot;constructor&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>resultChild<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">processConstructorElement</span><span class="token punctuation">(</span>resultChild<span class="token punctuation">,</span> typeClass<span class="token punctuation">,</span> resultMappings<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&quot;discriminator&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>resultChild<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        discriminator <span class="token operator">=</span> <span class="token function">processDiscriminatorElement</span><span class="token punctuation">(</span>resultChild<span class="token punctuation">,</span> typeClass<span class="token punctuation">,</span> resultMappings<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ResultFlag</span><span class="token punctuation">&gt;</span></span> flags <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>resultChild<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          flags<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">ResultFlag</span><span class="token punctuation">.</span><span class="token constant">ID</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        resultMappings<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token function">buildResultMappingFromContext</span><span class="token punctuation">(</span>resultChild<span class="token punctuation">,</span> typeClass<span class="token punctuation">,</span> flags<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">String</span> id <span class="token operator">=</span> resultMapNode<span class="token punctuation">.</span><span class="token function">getStringAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span>
            resultMapNode<span class="token punctuation">.</span><span class="token function">getValueBasedIdentifier</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> extend <span class="token operator">=</span> resultMapNode<span class="token punctuation">.</span><span class="token function">getStringAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;extends&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Boolean</span> autoMapping <span class="token operator">=</span> resultMapNode<span class="token punctuation">.</span><span class="token function">getBooleanAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;autoMapping&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">ResultMapResolver</span> resultMapResolver <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ResultMapResolver</span><span class="token punctuation">(</span>builderAssistant<span class="token punctuation">,</span> id<span class="token punctuation">,</span> typeClass<span class="token punctuation">,</span> extend<span class="token punctuation">,</span> discriminator<span class="token punctuation">,</span> resultMappings<span class="token punctuation">,</span> autoMapping<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> resultMapResolver<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IncompleteElementException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      configuration<span class="token punctuation">.</span><span class="token function">addIncompleteResultMap</span><span class="token punctuation">(</span>resultMapResolver<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">throw</span> e<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sqlelement" tabindex="-1"><a class="header-anchor" href="#sqlelement" aria-hidden="true">#</a> sqlElement</h3><p><code>sqlElement</code>\u662F\u7528\u4E8E\u89E3\u6790sql\u7247\u6BB5\u7684\u65B9\u6CD5.</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>  <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">sqlElement</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">XNode</span><span class="token punctuation">&gt;</span></span> list<span class="token punctuation">,</span> <span class="token class-name">String</span> requiredDatabaseId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">XNode</span> context <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">String</span> databaseId <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getStringAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;databaseId&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">String</span> id <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getStringAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      id <span class="token operator">=</span> builderAssistant<span class="token punctuation">.</span><span class="token function">applyCurrentNamespace</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">databaseIdMatchesCurrent</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> databaseId<span class="token punctuation">,</span> requiredDatabaseId<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        sqlFragments<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> context<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9700\u8981\u6CE8\u610F\u7684\u662F, sql\u7247\u6BB5\u4EA4\u7ED9\u7684XMLMapperBuilder\u7C7B\u7684<code>Map&lt;String, XNode&gt; sqlFragments</code>\u8FDB\u884C\u7BA1\u7406. \u6211\u4EEC\u53EF\u4EE5\u731C\u6D4B\u5B83\u7684\u610F\u56FE\u5728\u4E8E\u540E\u7EED\u89E3\u6790sql\u8BED\u53E5\u4E2D\u9047\u5230\u4E86include\u5F15\u5165sql\u7247\u6BB5\u65F6, \u76F4\u63A5\u6839\u636Eid\u83B7\u53D6\u76F8\u5E94\u7684sql\u7247\u6BB5\u8282\u70B9\u5BF9\u8C61.</p><h3 id="buildstatementfromcontext" tabindex="-1"><a class="header-anchor" href="#buildstatementfromcontext" aria-hidden="true">#</a> buildStatementFromContext</h3><p>\u8BE5\u65B9\u6CD5\u5BF9<code>select|insert|update|delete</code> \u8FD94\u79CD\u8282\u70B9\u8FDB\u884C\u5904\u7406.</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>  <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">buildStatementFromContext</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">XNode</span><span class="token punctuation">&gt;</span></span> list<span class="token punctuation">,</span> <span class="token class-name">String</span> requiredDatabaseId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">XNode</span> context <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">final</span> <span class="token class-name">XMLStatementBuilder</span> statementParser <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLStatementBuilder</span><span class="token punctuation">(</span>configuration<span class="token punctuation">,</span> builderAssistant<span class="token punctuation">,</span> context<span class="token punctuation">,</span> requiredDatabaseId<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        statementParser<span class="token punctuation">.</span><span class="token function">parseStatementNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IncompleteElementException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        configuration<span class="token punctuation">.</span><span class="token function">addIncompleteStatement</span><span class="token punctuation">(</span>statementParser<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6BCF\u4E2Asql\u8282\u70B9\u90FD\u4F1A\u521B\u5EFA\u4E00\u4E2A<code>XMLStatementBuilder</code>\u5BF9\u8C61, \u5E76\u8C03\u7528<code>parseStatementNode</code>\u65B9\u6CD5\u8FDB\u884C\u89E3\u6790.</p><p>\u4E0Ejava\u6CE8\u89E3\u65B9\u5F0F\u7C7B\u4F3C\uFF0C\u540C\u6837\u9700\u8981\u6784\u5EFA<code>MappedStatement</code>\u5BF9\u8C61\uFF0C\u5E76\u653E\u5165<code>Map&lt;String, MappedStatement&gt; mappedStatements</code>\u4E2D\uFF0C\u4F46\u7531\u4E8Exml\u4E2D\u53EF\u4EE5\u4F7F\u7528sql\u7247\u6BB5\u56E0\u6B64\u9700\u8981\u4F7F\u7528<code>XMLIncludeTransformer</code>\u5BF9sql\u7247\u6BB5\u8FDB\u884C\u5904\u7406\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">parseStatementNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">String</span> id <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getStringAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">String</span> databaseId <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getStringAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;databaseId&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">databaseIdMatchesCurrent</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> databaseId<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>requiredDatabaseId<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token class-name">String</span> nodeName <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getNodeName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">SqlCommandType</span> sqlCommandType <span class="token operator">=</span> <span class="token class-name">SqlCommandType</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>nodeName<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token class-name">Locale</span><span class="token punctuation">.</span><span class="token constant">ENGLISH</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">boolean</span> isSelect <span class="token operator">=</span> sqlCommandType <span class="token operator">==</span> <span class="token class-name">SqlCommandType</span><span class="token punctuation">.</span><span class="token constant">SELECT</span><span class="token punctuation">;</span>
  <span class="token keyword">boolean</span> flushCache <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getBooleanAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;flushCache&quot;</span><span class="token punctuation">,</span> <span class="token operator">!</span>isSelect<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">boolean</span> useCache <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getBooleanAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;useCache&quot;</span><span class="token punctuation">,</span> isSelect<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">boolean</span> resultOrdered <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getBooleanAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;resultOrdered&quot;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Include Fragments before parsing</span>
  <span class="token class-name">XMLIncludeTransformer</span> includeParser <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLIncludeTransformer</span><span class="token punctuation">(</span>configuration<span class="token punctuation">,</span> builderAssistant<span class="token punctuation">)</span><span class="token punctuation">;</span>
  includeParser<span class="token punctuation">.</span><span class="token function">applyIncludes</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">getNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token class-name">String</span> parameterType <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getStringAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;parameterType&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> parameterTypeClass <span class="token operator">=</span> <span class="token function">resolveClass</span><span class="token punctuation">(</span>parameterType<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token class-name">String</span> lang <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getStringAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;lang&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">LanguageDriver</span> langDriver <span class="token operator">=</span> <span class="token function">getLanguageDriver</span><span class="token punctuation">(</span>lang<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Parse selectKey after includes and remove them.</span>
  <span class="token function">processSelectKeyNodes</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> parameterTypeClass<span class="token punctuation">,</span> langDriver<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Parse the SQL (pre: &lt;selectKey&gt; and &lt;include&gt; were parsed and removed)</span>
  <span class="token class-name">KeyGenerator</span> keyGenerator<span class="token punctuation">;</span>
  <span class="token class-name">String</span> keyStatementId <span class="token operator">=</span> id <span class="token operator">+</span> <span class="token class-name">SelectKeyGenerator</span><span class="token punctuation">.</span><span class="token constant">SELECT_KEY_SUFFIX</span><span class="token punctuation">;</span>
  keyStatementId <span class="token operator">=</span> builderAssistant<span class="token punctuation">.</span><span class="token function">applyCurrentNamespace</span><span class="token punctuation">(</span>keyStatementId<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>configuration<span class="token punctuation">.</span><span class="token function">hasKeyGenerator</span><span class="token punctuation">(</span>keyStatementId<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    keyGenerator <span class="token operator">=</span> configuration<span class="token punctuation">.</span><span class="token function">getKeyGenerator</span><span class="token punctuation">(</span>keyStatementId<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    keyGenerator <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getBooleanAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;useGeneratedKeys&quot;</span><span class="token punctuation">,</span>
        configuration<span class="token punctuation">.</span><span class="token function">isUseGeneratedKeys</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token class-name">SqlCommandType</span><span class="token punctuation">.</span><span class="token constant">INSERT</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>sqlCommandType<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token operator">?</span> <span class="token class-name">Jdbc3KeyGenerator</span><span class="token punctuation">.</span><span class="token constant">INSTANCE</span> <span class="token operator">:</span> <span class="token class-name">NoKeyGenerator</span><span class="token punctuation">.</span><span class="token constant">INSTANCE</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token class-name">SqlSource</span> sqlSource <span class="token operator">=</span> langDriver<span class="token punctuation">.</span><span class="token function">createSqlSource</span><span class="token punctuation">(</span>configuration<span class="token punctuation">,</span> context<span class="token punctuation">,</span> parameterTypeClass<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">StatementType</span> statementType <span class="token operator">=</span> <span class="token class-name">StatementType</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">getStringAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;statementType&quot;</span><span class="token punctuation">,</span> <span class="token class-name">StatementType</span><span class="token punctuation">.</span><span class="token constant">PREPARED</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">Integer</span> fetchSize <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getIntAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;fetchSize&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">Integer</span> timeout <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getIntAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;timeout&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">String</span> parameterMap <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getStringAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;parameterMap&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">String</span> resultType <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getStringAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;resultType&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> resultTypeClass <span class="token operator">=</span> <span class="token function">resolveClass</span><span class="token punctuation">(</span>resultType<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">String</span> resultMap <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getStringAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;resultMap&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">String</span> resultSetType <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getStringAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;resultSetType&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">ResultSetType</span> resultSetTypeEnum <span class="token operator">=</span> <span class="token function">resolveResultSetType</span><span class="token punctuation">(</span>resultSetType<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>resultSetTypeEnum <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    resultSetTypeEnum <span class="token operator">=</span> configuration<span class="token punctuation">.</span><span class="token function">getDefaultResultSetType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token class-name">String</span> keyProperty <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getStringAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;keyProperty&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">String</span> keyColumn <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getStringAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;keyColumn&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">String</span> resultSets <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getStringAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;resultSets&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  builderAssistant<span class="token punctuation">.</span><span class="token function">addMappedStatement</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> sqlSource<span class="token punctuation">,</span> statementType<span class="token punctuation">,</span> sqlCommandType<span class="token punctuation">,</span>
      fetchSize<span class="token punctuation">,</span> timeout<span class="token punctuation">,</span> parameterMap<span class="token punctuation">,</span> parameterTypeClass<span class="token punctuation">,</span> resultMap<span class="token punctuation">,</span> resultTypeClass<span class="token punctuation">,</span>
      resultSetTypeEnum<span class="token punctuation">,</span> flushCache<span class="token punctuation">,</span> useCache<span class="token punctuation">,</span> resultOrdered<span class="token punctuation">,</span>
      keyGenerator<span class="token punctuation">,</span> keyProperty<span class="token punctuation">,</span> keyColumn<span class="token punctuation">,</span> databaseId<span class="token punctuation">,</span> langDriver<span class="token punctuation">,</span> resultSets<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u50CF\u662F\u5982\u4E0B\u7684\u4EE3\u7801:</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>sql</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>chatUserColumns<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>trim</span><span class="token punctuation">&gt;</span></span>
            \${alias}.id,
            \${alias}.user_id,
            \${alias}.room_id,
            \${alias}.message,
            \${alias}.\`type\`,
            \${alias}.status,
            \${alias}.create_time,
            \${alias}.update_time
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>trim</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>sql</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>selectChatUserList<span class="token punctuation">&quot;</span></span> <span class="token attr-name">resultMap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>chatUserResultMap<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        select
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span> <span class="token attr-name">refid</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>chatUserColumns<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>alias<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cu<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">&gt;</span></span>
        from chat_user cu
        where cu.user_id = #{userId}
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6267\u884C\u8FC7include\u66FF\u6362\u4E4B\u540E, \u4F1A\u53D8\u6210\u4E0B\u56FE\u4E2D\u7684\u7ED3\u679C. \u4E4B\u540E\u8FDB\u884CsqlSource\u7684\u521B\u5EFA\u7B49\u6B65\u9AA4\u4E0E\u4E4B\u524D\u6CE8\u89E3\u65B9\u5F0F\u76F8\u5DEE\u4E0D\u5927.</p><p><img src="https://tech-nikola.oss-cn-shanghai.aliyuncs.com/code/include\u66FF\u6362.png" alt="include\u66FF\u6362" loading="lazy"></p><h3 id="\u540E\u7EED\u6B65\u9AA4" tabindex="-1"><a class="header-anchor" href="#\u540E\u7EED\u6B65\u9AA4" aria-hidden="true">#</a> \u540E\u7EED\u6B65\u9AA4</h3><p>\u89E3\u6790\u8FC7\u5F53\u524D\u7684resource\u540E, <code>Set&lt;String&gt; loadedResources</code>\u4F1A\u8BB0\u5F55\u5F53\u524D\u7684resource.</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token function">parsePendingResultMaps</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">parsePendingCacheRefs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">parsePendingStatements</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E09\u4E2A\u65B9\u6CD5\u7528\u4E8E\u5904\u7406\u4E4B\u524D\u89E3\u6790\u8FC7\u7A0B\u4E2D\u51FA\u73B0\u5F02\u5E38\u6CA1\u6709\u5B8C\u6210\u89E3\u6790\u7684\u5BF9\u8C61.</p>`,63);function y(f,q){const a=u("RouterLink");return p(),e("div",null,[n("blockquote",null,[n("p",null,[s("\u4E4B\u524D\u8C08\u5230"),o(a,{to:"/category/mybatis/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%A7%A3%E6%9E%90.html#mappers%E8%8A%82%E7%82%B9"},{default:c(()=>[s("\u914D\u7F6E\u6587\u4EF6\u89E3\u6790\u7684mappers\u8282\u70B9")]),_:1}),s("\u65F6, \u8BF4\u5230\u4E24\u79CD\u89E3\u6790\u65B9\u5F0F\u5373:"),k,r,s("\u7528\u4E8E\u89E3\u6790"),d,s("\u914D\u7F6E\u65B9\u5F0F\u6307\u5B9A\u7684\u63A5\u53E3\u7C7B"),m,v,s("\u7528\u4E8E\u89E3\u6790"),b,s("\u914D\u7F6E\u65B9\u5F0F\u6307\u5B9A\u7684xml \u672C\u6587\u8BE6\u7EC6\u4ECB\u7ECD\u8FD9\u4E24\u79CD\u65B9\u5F0F\u7684\u89E3\u6790\u65B9\u6CD5")])]),g])}const S=t(i,[["render",y],["__file","Sql\u6620\u5C04\u6587\u4EF6\u89E3\u6790.html.vue"]]);export{S as default};
