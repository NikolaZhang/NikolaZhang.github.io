const n=JSON.parse('{"key":"v-01254cb4","path":"/posts/springboot/%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E7%9A%84%E4%BD%BF%E7%94%A8%E6%9E%9A%E4%B8%BE2.html","title":"如何优雅的使用枚举[2]以及函数式编程","lang":"en-US","frontmatter":{"isOriginal":true,"title":"如何优雅的使用枚举[2]以及函数式编程","tag":["enum","函数式编程"],"category":"java","description":"在枚举中嵌入业务处理, 以及函数式编程介绍","image":"https://tech.nikolazhang.top/2020-01-30-14-37-25.png","date":"2020-01-30T00:00:00.000Z","sticky":false,"timeline":true,"article":true,"star":false,"head":[["meta",{"property":"og:url","content":"https://nikolazhang.github.io/posts/springboot/%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E7%9A%84%E4%BD%BF%E7%94%A8%E6%9E%9A%E4%B8%BE2.html"}],["meta",{"property":"og:title","content":"如何优雅的使用枚举[2]以及函数式编程"}],["meta",{"property":"og:description","content":"在枚举中嵌入业务处理, 以及函数式编程介绍"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-06-09T00:57:17.000Z"}],["meta",{"property":"article:author","content":"我小叮当、"}],["meta",{"property":"article:tag","content":"enum"}],["meta",{"property":"article:tag","content":"函数式编程"}],["meta",{"property":"article:published_time","content":"2020-01-30T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-09T00:57:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"如何优雅的使用枚举[2]以及函数式编程\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-01-30T00:00:00.000Z\\",\\"dateModified\\":\\"2023-06-09T00:57:17.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"我小叮当、\\",\\"url\\":\\"https://nikolazhang.github.io\\"}]}"]]},"headers":[{"level":2,"title":"不好的代码","slug":"不好的代码","link":"#不好的代码","children":[]},{"level":2,"title":"转换为枚举方式处理","slug":"转换为枚举方式处理","link":"#转换为枚举方式处理","children":[{"level":3,"title":"定义枚举类","slug":"定义枚举类","link":"#定义枚举类","children":[]}]},{"level":2,"title":"函数式编程","slug":"函数式编程","link":"#函数式编程","children":[]},{"level":2,"title":"自定义函数接口","slug":"自定义函数接口","link":"#自定义函数接口","children":[{"level":3,"title":"定义函数","slug":"定义函数","link":"#定义函数","children":[]},{"level":3,"title":"测试","slug":"测试","link":"#测试","children":[]},{"level":3,"title":"结果","slug":"结果","link":"#结果","children":[]}]},{"level":2,"title":"end","slug":"end","link":"#end","children":[]}],"git":{"createdTime":1686272237000,"updatedTime":1686272237000,"contributors":[{"name":"dewy yr","email":"nikolazhang@163.com","commits":1}]},"readingTime":{"minutes":4.18,"words":1254},"filePathRelative":"posts/springboot/如何优雅的使用枚举2.md","localizedDate":"January 30, 2020","excerpt":"<blockquote>\\n<p>这篇文章通过一个例子探讨如何减少条件判断的出现. 并介绍一下函数式编程.</p>\\n</blockquote>\\n<h2> 不好的代码</h2>\\n<p>注意下面打印日志的地方我们可以做很多的业务处理.</p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">private</span> <span class=\\"token keyword\\">static</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">dealWorkByAge</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Integer</span> age<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Objects</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">isNull</span><span class=\\"token punctuation\\">(</span>age<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">||</span> age <span class=\\"token operator\\">&lt;=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">throw</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">IllegalArgumentException</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">String</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">format</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"[dealWorkByAge]年龄不能为空或小于等于0, age: [%s]\\"</span><span class=\\"token punctuation\\">,</span> age<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>age <span class=\\"token operator\\">&lt;=</span> <span class=\\"token number\\">20</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        log<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">debug</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"人生得意马蹄急\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>age <span class=\\"token operator\\">&lt;=</span> <span class=\\"token number\\">50</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        log<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">debug</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"人到中年不得已\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>age<span class=\\"token operator\\">&lt;=</span><span class=\\"token number\\">100</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        log<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">debug</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"一寸光阴一寸金\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token punctuation\\">{</span>\\n        log<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">debug</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"阅尽尘世经风雨\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{n as data};
