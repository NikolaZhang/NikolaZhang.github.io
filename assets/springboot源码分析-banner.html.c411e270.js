import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,e as t}from"./app.4001f435.js";const p={},e=t(`<blockquote><p>springboot \u542F\u52A8\u65F6\u662F\u5982\u4F55\u6253\u5370banner\u7684, \u4EE5\u53CA\u5982\u4F55\u914D\u7F6E\u4E00\u4E2A\u81EA\u5DF1\u7684banner.</p></blockquote><h2 id="\u5165\u53E3\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u5165\u53E3\u65B9\u6CD5" aria-hidden="true">#</a> \u5165\u53E3\u65B9\u6CD5</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token class-name">Banner</span> <span class="token function">printBanner</span><span class="token punctuation">(</span><span class="token class-name">ConfigurableEnvironment</span> environment<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>bannerMode <span class="token operator">==</span> <span class="token class-name">Banner<span class="token punctuation">.</span>Mode</span><span class="token punctuation">.</span><span class="token constant">OFF</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token class-name">ResourceLoader</span> resourceLoader <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>resourceLoader <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token keyword">this</span><span class="token punctuation">.</span>resourceLoader
      <span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">DefaultResourceLoader</span><span class="token punctuation">(</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">SpringApplicationBannerPrinter</span> bannerPrinter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SpringApplicationBannerPrinter</span><span class="token punctuation">(</span>resourceLoader<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>banner<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>bannerMode <span class="token operator">==</span> <span class="token class-name">Mode</span><span class="token punctuation">.</span><span class="token constant">LOG</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> bannerPrinter<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>environment<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>mainApplicationClass<span class="token punctuation">,</span> logger<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> bannerPrinter<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>environment<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>mainApplicationClass<span class="token punctuation">,</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>printBanner</code>\u662Fbanner\u6253\u5370\u7684\u5165\u53E3\u65B9\u6CD5, \u8BE5\u65B9\u6CD5\u6839\u636E\u4E0D\u540C\u7684<code>Banner.Mode</code>\u4E3A\u679A\u4E3E\u7C7B\u578B, \u503C\u6709<code>OFF</code>, <code>CONSOLE</code>, <code>LOG</code>, \u5206\u522B\u5BF9\u5E94\u4E0D\u6253\u5370, \u63A7\u5236\u53F0\u8F93\u51FA, \u8F93\u51FA\u5230\u65E5\u5FD7\u6587\u4EF6. \u5BF9\u4E8E<code>CONSOLE</code>\u548C<code>LOG</code>\u7C7B\u578B\u9700\u8981\u901A\u8FC7<code>ResourceLoader resourceLoader</code>\u52A0\u8F7Dbanner\u8D44\u6E90. banner\u6253\u5370\u9700\u8981\u901A\u8FC7<code>SpringApplicationBannerPrinter</code>\u7C7B\u4E2D\u7684<code>print</code>\u65B9\u6CD5(\u91CD\u8F7D)\u8FDB\u884C\u5904\u7406, \u5BF9\u4E8E<code>CONSOLE</code>\u7C7B\u578B, \u7B2C\u4E09\u4E2A\u53C2\u6570\u4E3A<code>PrintStream</code>\u7C7B\u578B, \u4F20\u5165<code>System.out</code>\u8FDB\u884C\u5904\u7406, <code>LOG</code>\u7C7B\u578B\u5219\u901A\u8FC7\u65E5\u5FD7\u5BF9\u8C61<code>logger</code>(\u5176\u5B9A\u4E49\u4E3Aprivate static final Log logger = LogFactory.getLog(SpringApplication.class);)\u8FDB\u884C\u5904\u7406. \u4E0D\u8FC7\u4E24\u4E2A\u91CD\u8F7D\u65B9\u6CD5\u903B\u8F91\u662F\u4E00\u81F4\u7684.</p><h2 id="print" tabindex="-1"><a class="header-anchor" href="#print" aria-hidden="true">#</a> print</h2><p>\u4EE5<code>CONSOLE</code>\u7C7B\u578B\u4E3A\u4F8B, \u5176\u4EE3\u7801\u4E3A:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Banner</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token class-name">Environment</span> environment<span class="token punctuation">,</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> sourceClass<span class="token punctuation">,</span> <span class="token class-name">PrintStream</span> out<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">Banner</span> banner <span class="token operator">=</span> <span class="token function">getBanner</span><span class="token punctuation">(</span>environment<span class="token punctuation">)</span><span class="token punctuation">;</span>
  banner<span class="token punctuation">.</span><span class="token function">printBanner</span><span class="token punctuation">(</span>environment<span class="token punctuation">,</span> sourceClass<span class="token punctuation">,</span> out<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">PrintedBanner</span><span class="token punctuation">(</span>banner<span class="token punctuation">,</span> sourceClass<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9996\u5148\u8981\u83B7\u53D6\u4E00\u4E2ABanner\u5BF9\u8C61(\u51FD\u6570\u5F0F), \u8C03\u7528\u6253\u5370\u65B9\u6CD5<code>printBanner</code>\u8F93\u51FAbanner, \u6253\u5370\u5B8C\u6BD5, \u6784\u9020\u4E00\u4E2A<code>PrintedBanner</code>\u7EE7\u627F\u4E8E<code>Banner</code>\u8FD4\u56DE.</p><p>\u4E0B\u9762\u5177\u4F53\u770B\u4E00\u4E0B<code>getBanner</code>\u65B9\u6CD5:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token class-name">Banner</span> <span class="token function">getBanner</span><span class="token punctuation">(</span><span class="token class-name">Environment</span> environment<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">Banners</span> banners <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Banners</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  banners<span class="token punctuation">.</span><span class="token function">addIfNotNull</span><span class="token punctuation">(</span><span class="token function">getImageBanner</span><span class="token punctuation">(</span>environment<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  banners<span class="token punctuation">.</span><span class="token function">addIfNotNull</span><span class="token punctuation">(</span><span class="token function">getTextBanner</span><span class="token punctuation">(</span>environment<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>banners<span class="token punctuation">.</span><span class="token function">hasAtLeastOneBanner</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> banners<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>fallbackBanner <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>fallbackBanner<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token constant">DEFAULT_BANNER</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Banners</code>\u7C7B\u662F<code>Banner</code>\u63A5\u53E3\u7684\u5B9E\u73B0, \u5185\u90E8\u7EF4\u62A4\u4E00\u4E2A<code>private final List&lt;Banner&gt; banners = new ArrayList&lt;&gt;();</code>\u7528\u6765\u5B58\u653E\u6240\u6709\u7684Banner, \u8BE5\u7C7B\u4E5F\u91CD\u5199<code>printBanner</code>\u4E3A:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">printBanner</span><span class="token punctuation">(</span><span class="token class-name">Environment</span> environment<span class="token punctuation">,</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> sourceClass<span class="token punctuation">,</span> <span class="token class-name">PrintStream</span> out<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Banner</span> banner <span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>banners<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    banner<span class="token punctuation">.</span><span class="token function">printBanner</span><span class="token punctuation">(</span>environment<span class="token punctuation">,</span> sourceClass<span class="token punctuation">,</span> out<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5373: \u5C06banners\u4E2D\u7684banner\u5BF9\u8C61\u5168\u90E8\u6253\u5370. \u800Cbanners\u4E2D\u7684banner\u6765\u81EA\u4E8E<code>getImageBanner</code>\u548C<code>getTextBanner</code>\u52A0\u8F7D\u7684\u8D44\u6E90. \u4E0B\u9762\u5206\u522B\u6765\u770B\u4E00\u4E0B\u8FD9\u4E24\u4E2A\u65B9\u6CD5.</p><h2 id="getimagebanner" tabindex="-1"><a class="header-anchor" href="#getimagebanner" aria-hidden="true">#</a> getImageBanner</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>
<span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">BANNER_IMAGE_LOCATION_PROPERTY</span> <span class="token operator">=</span> <span class="token string">&quot;spring.banner.image.location&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">private</span> <span class="token class-name">Banner</span> <span class="token function">getImageBanner</span><span class="token punctuation">(</span><span class="token class-name">Environment</span> environment<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">String</span> location <span class="token operator">=</span> environment<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token constant">BANNER_IMAGE_LOCATION_PROPERTY</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">hasLength</span><span class="token punctuation">(</span>location<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Resource</span> resource <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>resourceLoader<span class="token punctuation">.</span><span class="token function">getResource</span><span class="token punctuation">(</span>location<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> resource<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token keyword">new</span> <span class="token class-name">ImageBanner</span><span class="token punctuation">(</span>resource<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> ext <span class="token operator">:</span> <span class="token constant">IMAGE_EXTENSION</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Resource</span> resource <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>resourceLoader<span class="token punctuation">.</span><span class="token function">getResource</span><span class="token punctuation">(</span><span class="token string">&quot;banner.&quot;</span> <span class="token operator">+</span> ext<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>resource<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ImageBanner</span><span class="token punctuation">(</span>resource<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>BANNER_IMAGE_LOCATION_PROPERTY</code>\u914D\u7F6E\u7528\u6765\u8868\u793A\u56FE\u7247\u7C7B\u578Bbanner\u8D44\u6E90\u7684\u52A0\u8F7D\u4F4D\u7F6E, \u4E4B\u540E<code>resourceLoader</code>\u4F1A\u751F\u6210\u4E00\u4E2A\u5BF9\u5E94\u4F4D\u7F6E\u8D44\u6E90\u7684\u64CD\u4F5C\u5BF9\u8C61<code>Resource resource</code>. \u5982\u679C\u8BE5\u4F4D\u7F6E\u4E0B\u5B58\u5728\u8D44\u6E90\u5219\u8FD4\u56DE<code>ImageBanner</code>\u7C7B\u578B\u7684\u5BF9\u8C61, \u8BE5\u7C7B\u4E5F\u662F<code>Banner</code>\u7684\u4E00\u4E2A\u5B9E\u73B0.</p><p>\u5982\u679C\u6CA1\u6709\u5B9A\u4E49<code>BANNER_IMAGE_LOCATION_PROPERTY</code>\u5219<code>resourceLoader</code>\u52A0\u8F7D\u4EE5<code>banner</code>\u4E3A\u524D\u7F00, <code>&quot;gif&quot;, &quot;jpg&quot;, &quot;png&quot;</code>\u7B49\u683C\u5F0F\u7684\u6587\u4EF6. \u5982\u679C\u5B58\u5728\u5219\u76F4\u63A5\u8FD4\u56DE\u4E00\u4E2A<code>ImageBanner</code>\u7C7B\u578B\u7684\u5BF9\u8C61.</p><p>\u6CE8\u610F\u5982\u679C\u4E0D\u5B58\u5728\u7531\u4E8E<code>addIfNotNull</code>\u4F1A\u5224\u65AD<code>Banner</code>\u662F\u5426\u4E3Anull, \u662F\u5219\u4E0D\u4F1A\u5C06\u5176\u653E\u5165<code>banners</code>\u4E2D.</p><h2 id="gettextbanner" tabindex="-1"><a class="header-anchor" href="#gettextbanner" aria-hidden="true">#</a> getTextBanner</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>
<span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">BANNER_LOCATION_PROPERTY</span> <span class="token operator">=</span> <span class="token string">&quot;spring.banner.location&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">DEFAULT_BANNER_LOCATION</span> <span class="token operator">=</span> <span class="token string">&quot;banner.txt&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">private</span> <span class="token class-name">Banner</span> <span class="token function">getTextBanner</span><span class="token punctuation">(</span><span class="token class-name">Environment</span> environment<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">String</span> location <span class="token operator">=</span> environment<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token constant">BANNER_LOCATION_PROPERTY</span><span class="token punctuation">,</span> <span class="token constant">DEFAULT_BANNER_LOCATION</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">Resource</span> resource <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>resourceLoader<span class="token punctuation">.</span><span class="token function">getResource</span><span class="token punctuation">(</span>location<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>resource<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ResourceBanner</span><span class="token punctuation">(</span>resource<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6B64\u65F6\u4F1A\u4ECE<code>BANNER_LOCATION_PROPERTY</code>\u51FA\u52A0\u8F7D<code>banner.txt</code>\u6587\u4EF6, \u5E76\u8FD4\u56DE<code>ResourceBanner</code>\u5BF9\u8C61.</p><p>\u5BF9\u4E8E\u4E00\u4E2A\u9ED8\u8BA4\u7684\u7CFB\u7EDF\u914D\u7F6E, \u65E0\u6CD5\u52A0\u8F7D\u56FE\u7247\u548C\u6587\u672Cbanner\u6B64\u65F6\u76F4\u63A5\u8FD4\u56DE\u4E00\u4E2A\u9ED8\u8BA4\u7684<code>DEFAULT_BANNER</code>, \u5176\u4E3A<code>SpringBootBanner</code>\u7C7B\u578B. \u8BE5\u7C7B\u5B9A\u4E49\u5982\u4E0B, \u53EF\u4EE5\u770B\u5230<code>BANNER</code>\u4E3A\u7CFB\u7EDF\u7684\u9ED8\u8BA4 \u8F93\u51FA.</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">SpringBootBanner</span> <span class="token keyword">implements</span> <span class="token class-name">Banner</span> <span class="token punctuation">{</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token constant">BANNER</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;  .   ____          _            __ _ _&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot; /\\\\\\\\ / ___&#39;_ __ _ _(_)_ __  __ _ \\\\ \\\\ \\\\ \\\\&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;( ( )\\\\___ | &#39;_ | &#39;_| | &#39;_ \\\\/ _\` | \\\\ \\\\ \\\\ \\\\&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot; \\\\\\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;  &#39;  |____| .__|_| |_|_| |_\\\\__, | / / / /&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot; =========|_|==============|___/=/_/_/_/&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">SPRING_BOOT</span> <span class="token operator">=</span> <span class="token string">&quot; :: Spring Boot :: &quot;</span><span class="token punctuation">;</span>

<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">STRAP_LINE_SIZE</span> <span class="token operator">=</span> <span class="token number">42</span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">printBanner</span><span class="token punctuation">(</span><span class="token class-name">Environment</span> environment<span class="token punctuation">,</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> sourceClass<span class="token punctuation">,</span> <span class="token class-name">PrintStream</span> printStream<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> line <span class="token operator">:</span> <span class="token constant">BANNER</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    printStream<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token class-name">String</span> version <span class="token operator">=</span> <span class="token class-name">SpringBootVersion</span><span class="token punctuation">.</span><span class="token function">getVersion</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  version <span class="token operator">=</span> <span class="token punctuation">(</span>version <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">&quot; (v&quot;</span> <span class="token operator">+</span> version <span class="token operator">+</span> <span class="token string">&quot;)&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
  <span class="token class-name">StringBuilder</span> padding <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>padding<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token constant">STRAP_LINE_SIZE</span> <span class="token operator">-</span> <span class="token punctuation">(</span>version<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token constant">SPRING_BOOT</span><span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    padding<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  printStream<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">AnsiOutput</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token class-name">AnsiColor</span><span class="token punctuation">.</span><span class="token constant">GREEN</span><span class="token punctuation">,</span> <span class="token constant">SPRING_BOOT</span><span class="token punctuation">,</span> <span class="token class-name">AnsiColor</span><span class="token punctuation">.</span><span class="token constant">DEFAULT</span><span class="token punctuation">,</span> padding<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token class-name">AnsiStyle</span><span class="token punctuation">.</span><span class="token constant">FAINT</span><span class="token punctuation">,</span> version<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  printStream<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u81EA\u5B9A\u4E49banner" tabindex="-1"><a class="header-anchor" href="#\u81EA\u5B9A\u4E49banner" aria-hidden="true">#</a> \u81EA\u5B9A\u4E49banner</h2><p>\u4ECE\u4E0A\u9762\u7684\u5206\u6790\u6211\u4EEC\u53EF\u77E5, banner\u6709\u4E09\u79CD\u5F62\u5F0F:</p><ol><li>\u56FE\u7247<code>ImageBanner</code>, banner\u662F\u5728<code>spring.banner.image.location</code>\u4F4D\u7F6E\u4E0B\u7684, \u6216\u8005\u662F\u9ED8\u8BA4\u8DEF\u5F84\u4E0B\u7684<code>banner.png|gif|jpg</code>\u6587\u4EF6</li><li>\u6587\u672C<code>ResourceBanner</code>, banner\u662F\u5728<code>spring.banner.location</code>\u4F4D\u7F6E\u4E0B\u7684, \u6216\u8005\u662F\u9ED8\u8BA4\u8DEF\u5F84\u4E0B\u7684<code>banner.txt</code>\u6587\u4EF6.</li><li>\u7CFB\u7EDF\u9ED8\u8BA4<code>SpringBootBanner</code>, banner\u6837\u5F0F\u662F\u5199\u5728\u4E00\u4E2AString\u6570\u7EC4\u4E2D\u7684</li></ol><p>\u5BF9\u4E8E\u56FE\u7247, \u5728\u8D44\u6E90\u76EE\u5F55\u4E0B\u6DFB\u52A0\u4E00\u4E2A<code>banner.png</code>\u6587\u4EF6, \u8FD0\u884C: <img src="https://tech.nikolazhang.top/2020-05-10-14-04-01.png" alt="2020-05-10-14-04-01" loading="lazy"></p><p>\u53E6\u5916springboot\u8FD8\u63D0\u4F9B\u4E86\u56FE\u7247\u6253\u5370\u7684\u4E00\u4E9B\u53C2\u6570\u63A7\u5236, \u6BD4\u5982\u957F\u5EA6,\u5BBD\u5EA6,<code>bitdepth</code>(\u503C\u4E3A4, 8, \u5206\u522B\u53EA16\u8272\u548C256\u8272), <code>pixelmode</code>(\u503C\u4E3Ablock, \u9ED8\u8BA4text, \u5206\u522B\u5BF9\u5E94\u65B9\u5757\u8F93\u51FA\u548C\u5B57\u7B26\u753B) \u4E00\u901A\u914D\u7F6E\u4E4B\u540E\u7684\u6253\u5370banner. <img src="https://tech.nikolazhang.top/2020-05-10-14-10-34.png" alt="2020-05-10-14-10-34" loading="lazy"></p><p>\u90A3\u4E48, \u8FD9\u4E9B\u53C2\u6570\u53C8\u662F\u5728\u4EC0\u4E48\u65F6\u5019\u751F\u6548\u7684\u5462? \u8FD9\u5C31\u8981\u770BImageBanner\u4E2D\u91CD\u5199\u7684<code>printBanner</code></p><p>\u4E0B\u9762\u7684\u65B9\u6CD5\u662F\u6838\u5FC3\u65B9\u6CD5, \u5C31\u4E0D\u5206\u6790\u4E86.</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">printBanner</span><span class="token punctuation">(</span><span class="token class-name">Environment</span> environment<span class="token punctuation">,</span> <span class="token class-name">PrintStream</span> out<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
  <span class="token keyword">int</span> width <span class="token operator">=</span> <span class="token function">getProperty</span><span class="token punctuation">(</span>environment<span class="token punctuation">,</span> <span class="token string">&quot;width&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token number">76</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">int</span> height <span class="token operator">=</span> <span class="token function">getProperty</span><span class="token punctuation">(</span>environment<span class="token punctuation">,</span> <span class="token string">&quot;height&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">int</span> margin <span class="token operator">=</span> <span class="token function">getProperty</span><span class="token punctuation">(</span>environment<span class="token punctuation">,</span> <span class="token string">&quot;margin&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">boolean</span> invert <span class="token operator">=</span> <span class="token function">getProperty</span><span class="token punctuation">(</span>environment<span class="token punctuation">,</span> <span class="token string">&quot;invert&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Boolean</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">BitDepth</span> bitDepth <span class="token operator">=</span> <span class="token function">getBitDepthProperty</span><span class="token punctuation">(</span>environment<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">PixelMode</span> pixelMode <span class="token operator">=</span> <span class="token function">getPixelModeProperty</span><span class="token punctuation">(</span>environment<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">Frame</span><span class="token punctuation">[</span><span class="token punctuation">]</span> frames <span class="token operator">=</span> <span class="token function">readFrames</span><span class="token punctuation">(</span>width<span class="token punctuation">,</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> frames<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">resetCursor</span><span class="token punctuation">(</span>frames<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getImage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> out<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">printBanner</span><span class="token punctuation">(</span>frames<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getImage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> margin<span class="token punctuation">,</span> invert<span class="token punctuation">,</span> bitDepth<span class="token punctuation">,</span> pixelMode<span class="token punctuation">,</span> out<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">sleep</span><span class="token punctuation">(</span>frames<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getDelayTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5BF9\u4E8E\u6587\u672C, \u5728\u8D44\u6E90\u76EE\u5F55\u4E0B\u6DFB\u52A0<code>banner.txt</code>\u6587\u4EF6. \u8FD0\u884C: <img src="https://tech.nikolazhang.top/2020-05-10-13-52-09.png" alt="2020-05-10-13-52-09" loading="lazy"></p>`,32),o=[e];function c(l,i){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","springboot\u6E90\u7801\u5206\u6790-banner.html.vue"]]);export{k as default};
