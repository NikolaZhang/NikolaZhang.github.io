import{_ as t}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as e,c as o,a as s,b as n,d as c,e as a,r as l}from"./app.e7c9cb9e.js";const u={},i=a(`<h2 id="remove" tabindex="-1"><a class="header-anchor" href="#remove" aria-hidden="true">#</a> remove</h2><p>\u5728\u4ECB\u7ECD<code>balanceDeletion</code>\u4E4B\u524D\u6211\u4EEC\u5148\u5206\u6790\u4E00\u4E0B, \u4ECEHashMap\u4E2D\u5220\u9664\u4E00\u4E2A\u8282\u70B9\u7684\u903B\u8F91.</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">V</span> <span class="token function">remove</span><span class="token punctuation">(</span><span class="token class-name">Object</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>e <span class="token operator">=</span> <span class="token function">removeNode</span><span class="token punctuation">(</span><span class="token function">hash</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span>
        <span class="token keyword">null</span> <span class="token operator">:</span> e<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E3B\u8981\u770B\u4E00\u4E0B<code>removeNode</code>\u8FD9\u4E2A\u65B9\u6CD5:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">final</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token function">removeNode</span><span class="token punctuation">(</span><span class="token keyword">int</span> hash<span class="token punctuation">,</span> <span class="token class-name">Object</span> key<span class="token punctuation">,</span> <span class="token class-name">Object</span> value<span class="token punctuation">,</span>
                            <span class="token keyword">boolean</span> matchValue<span class="token punctuation">,</span> <span class="token keyword">boolean</span> movable<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab<span class="token punctuation">;</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> p<span class="token punctuation">;</span> <span class="token keyword">int</span> n<span class="token punctuation">,</span> index<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>tab <span class="token operator">=</span> table<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>n <span class="token operator">=</span> tab<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span>
        <span class="token punctuation">(</span>p <span class="token operator">=</span> tab<span class="token punctuation">[</span>index <span class="token operator">=</span> <span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> hash<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> node <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> e<span class="token punctuation">;</span> <span class="token class-name">K</span> k<span class="token punctuation">;</span> <span class="token class-name">V</span> v<span class="token punctuation">;</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E2A\u6761\u4EF6\u4E0D\u89E3\u91CA\u4E86, \u5220\u9664\u5F97\u786E\u5B9A\u662F\u6709\u624D\u80FD\u5220\u9664, \u5426\u5219\u76F4\u63A5\u8FD4\u56DEnull; \u552F\u4E00\u6709\u70B9\u96BE\u5EA6\u7684<code>tab[index = (n - 1) &amp; hash]</code>\u8FD9\u4E2A\u4E4B\u524D\u6211\u4EEC\u4E5F\u8BF4\u4E86.</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>p<span class="token punctuation">.</span>hash <span class="token operator">==</span> hash <span class="token operator">&amp;&amp;</span>
    <span class="token punctuation">(</span><span class="token punctuation">(</span>k <span class="token operator">=</span> p<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">==</span> key <span class="token operator">||</span> <span class="token punctuation">(</span>key <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    node <span class="token operator">=</span> p<span class="token punctuation">;</span>
<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e <span class="token operator">=</span> p<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token keyword">instanceof</span> <span class="token class-name">TreeNode</span><span class="token punctuation">)</span>
        node <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>p<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTreeNode</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">do</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>hash <span class="token operator">==</span> hash <span class="token operator">&amp;&amp;</span>
                <span class="token punctuation">(</span><span class="token punctuation">(</span>k <span class="token operator">=</span> e<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">==</span> key <span class="token operator">||</span>
                    <span class="token punctuation">(</span>key <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                node <span class="token operator">=</span> e<span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            p <span class="token operator">=</span> e<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e <span class="token operator">=</span> e<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>\u5982\u679C\u6570\u7EC4\u4E2D\u8BE5\u4F4D\u7F6E\u7684key\u548C\u76EE\u6807key\u76F8\u540C, \u5C31\u627E\u5230\u4E86.</li><li>\u5982\u679C\u4E0D\u76F8\u540C, \u5224\u65AD\u5F53\u524D\u4F4D\u7F6E\u662F\u5426\u542B\u6709\u5B50\u8282\u70B9. \u5982\u679C\u6709\u5206\u6210\u6811\u548C\u94FE\u8868\u5206\u522B\u8FDB\u884C\u67E5\u627E, \u627E\u5230\u4E4B\u540E\u8FD4\u56DE\u5BF9\u5E94\u8282\u70B9. <code>getTreeNode</code>\u4E2D\u8C03\u7528\u4E86\u7EA2\u9ED1\u6811<code>find</code>\u65B9\u6CD5</li></ol><p>\u4E4B\u540E\u8FDB\u884C\u5982\u4E0B\u5904\u7406:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>node <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token operator">!</span>matchValue <span class="token operator">||</span> <span class="token punctuation">(</span>v <span class="token operator">=</span> node<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token operator">==</span> value <span class="token operator">||</span>
                                 <span class="token punctuation">(</span>value <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> value<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>node <span class="token keyword">instanceof</span> <span class="token class-name">TreeNode</span><span class="token punctuation">)</span>
        <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>node<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeTreeNode</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> tab<span class="token punctuation">,</span> movable<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>node <span class="token operator">==</span> p<span class="token punctuation">)</span>
        tab<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> node<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token keyword">else</span>
        p<span class="token punctuation">.</span>next <span class="token operator">=</span> node<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token operator">++</span>modCount<span class="token punctuation">;</span>
    <span class="token operator">--</span>size<span class="token punctuation">;</span>
    <span class="token function">afterNodeRemoval</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> node<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>matchValue</code>\u662F\u6307\u5F53\u503C\u76F8\u540C\u7684\u65F6\u5019\u624D\u79FB\u9664. \u5982\u679C\u8BBE\u7F6E\u5176\u4E3Atrue, \u90A3\u4E48\u53EA\u8981key\u76F8\u540C\u5C31\u53EF\u4EE5\u79FB\u9664. \u800C\u4E0D\u7528\u5224\u65AD\u503C\u662F\u5426\u76F8\u540C. <code>(v = node.value) == value || (value != null &amp;&amp; value.equals(v))</code></p><ol><li>\u5F53\u6211\u4EEC\u4E0A\u4E00\u6B65\u67E5\u5230\u7684\u8282\u70B9\u662FTreeNode\u7684\u5B9E\u73B0\u90A3\u4E48\u4F7F\u7528<code>removeTreeNode</code>\u8FDB\u884C\u8282\u70B9\u7684\u79FB\u9664.</li><li>\u540E\u9762\u7684\u6761\u4EF6\u90FD\u662F\u94FE\u8868\u5904\u7406, \u5F53\u8FD9\u4E2A\u8282\u70B9\u662F\u5934\u8282\u70B9, \u90A3\u4E48\u5C06\u8BE5\u8282\u70B9\u7684next\u8282\u70B9\u653E\u5230table\u6570\u7EC4index\u4F4D\u7F6E\u4E0A\u53BB. \u5426\u5219\u5C06next\u8282\u70B9\u6307\u5411\u5230p. \u8FD9\u5C31\u662F\u4ECE\u94FE\u8868\u4E2D\u5220\u9664\u4E00\u4E2A\u8282\u70B9\u7684\u903B\u8F91. \u6BD5\u7ADF\u8FD9\u662F\u4E00\u4E2A\u5355\u5411\u94FE\u8868.</li><li>\u6700\u540E\u8BB0\u5F55\u64CD\u4F5C\u6570, \u7528\u4E8Efastfail. \u6570\u91CF\u51CF\u4E00. \u8C03\u7528\u4E00\u4E2A\u7A7A\u65B9\u6CD5. \u8FD4\u56DE\u5220\u9664\u6389\u7684\u8282\u70B9. \u903B\u8F91\u5F88\u6E05\u6670\u4E5F\u5F88\u597D\u7406\u89E3.</li></ol><h2 id="removetreenode" tabindex="-1"><a class="header-anchor" href="#removetreenode" aria-hidden="true">#</a> removeTreeNode</h2><p>\u4E0A\u4E00\u8282\u6211\u4EEC\u5BF9\u4ECE\u7EA2\u9ED1\u6811\u4E2D\u5220\u9664\u8282\u70B9\u7684\u65B9\u6CD5<code>removeTreeNode</code>\u4E00\u7B14\u5E26\u8FC7\u4E86. \u8FD9\u4E00\u8282\u8FDB\u884C\u8BE6\u7EC6\u5206\u6790.</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">removeTreeNode</span><span class="token punctuation">(</span><span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> map<span class="token punctuation">,</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab<span class="token punctuation">,</span>
                            <span class="token keyword">boolean</span> movable<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> n<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>tab <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token punctuation">(</span>n <span class="token operator">=</span> tab<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> index <span class="token operator">=</span> <span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> hash<span class="token punctuation">;</span>
    <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> first <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>tab<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">,</span> root <span class="token operator">=</span> first<span class="token punctuation">,</span> rl<span class="token punctuation">;</span>
    <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> succ <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>next<span class="token punctuation">,</span> pred <span class="token operator">=</span> prev<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>pred <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        tab<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> first <span class="token operator">=</span> succ<span class="token punctuation">;</span>
    <span class="token keyword">else</span>
        pred<span class="token punctuation">.</span>next <span class="token operator">=</span> succ<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>succ <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        succ<span class="token punctuation">.</span>prev <span class="token operator">=</span> pred<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>first <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>root<span class="token punctuation">.</span>parent <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        root <span class="token operator">=</span> root<span class="token punctuation">.</span><span class="token function">root</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>root <span class="token operator">==</span> <span class="token keyword">null</span>
        <span class="token operator">||</span> <span class="token punctuation">(</span>movable
            <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>root<span class="token punctuation">.</span>right <span class="token operator">==</span> <span class="token keyword">null</span>
                <span class="token operator">||</span> <span class="token punctuation">(</span>rl <span class="token operator">=</span> root<span class="token punctuation">.</span>left<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span>
                <span class="token operator">||</span> rl<span class="token punctuation">.</span>left <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        tab<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> first<span class="token punctuation">.</span><span class="token function">untreeify</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// too small</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u8981\u63D0\u53CA\u4E00\u4E0B, hash, next, prev\u7B49\u90FD\u662F\u8C03\u7528\u8FD9\u4E2A\u65B9\u6CD5\u7684\u5BF9\u8C61\u4E2D\u7684\u5C5E\u6027(\u5168\u5C40), \u8FD9\u4E5F\u662F\u5BFC\u81F4hashmap\u7EBF\u7A0B\u4E0D\u5B89\u5168\u7684\u539F\u56E0. \u8FD9\u4E9B\u5C5E\u6027\u662F\u8C03\u7528\u8FD9\u4E2A\u65B9\u6CD5\u7684node\u8282\u70B9(\u5C06\u8981\u5220\u9664\u6389\u7684\u5F53\u524D\u8282\u70B9)\u7684.</p><ol><li>\u5982\u679C\u5F53\u524D\u8282\u70B9\u7684\u524D\u4E00\u4E2A\u8282\u70B9\u4E3A\u7A7A, \u90A3\u5F53\u524D\u8282\u70B9\u4E5F\u5C31\u662F\u5934\u8282\u70B9. \u8FD9\u4E2A\u65F6\u5019\u76F4\u63A5\u5C06\u5F53\u524D\u8282\u70B9\u7684next\u8282\u70B9\u653E\u5230table\u7684index\u4F4D\u7F6E\u4E0A\u5373\u53EF.</li><li>\u5982\u679C\u5F53\u524D\u8282\u70B9\u4E0D\u662F\u5934\u8282\u70B9\u5219\u6253\u65AD\u5176\u548C\u524D\u4E00\u4E2A\u8282\u70B9\u7684\u8054\u7CFB, \u5E76\u5EFA\u7ACB\u524D\u4E00\u4E2A\u8282\u70B9\u548C\u540E\u4E00\u4E2A\u8282\u70B9\u7684\u8054\u7CFB. \u8FD9\u4E2A\u8054\u7CFB\u53EA\u662F\u5C06\u524D\u4E00\u4E2A\u8282\u70B9\u7684next\u6307\u5411\u5230\u540E\u4E00\u4E2A\u8282\u70B9(\u4E0D\u7528\u8003\u8651\u540E\u4E00\u4E2A\u8282\u70B9\u662F\u5426\u5B58\u5728)</li><li>\u5982\u679C\u540E\u4E00\u4E2A\u8282\u70B9\u4E0D\u662F\u7A7A, \u5C31\u5C06\u540E\u4E00\u4E2A\u8282\u70B9\u7684\u524D\u4E00\u4E2A\u8282\u70B9\u8BBE\u7F6E\u4E3A2\u4E2D\u7684\u90A3\u4E2A\u524D\u4E00\u4E2A\u8282\u70B9. 2,3 \u4E24\u6B65\u7684\u5B9E\u8D28\u5C31\u662F\u94FE\u8868\u7684\u5220\u9664.</li><li><code>first == null</code>\u5934\u8282\u70B9\u4E3A\u7A7A, \u5219\u76F4\u63A5\u9000\u51FA, \u56E0\u4E3A\u4E4B\u524D\u5728pred\u4E3A\u7A7A\u7684\u65F6\u5019\u6211\u4EEC\u5C06\u540E\u9762\u7684\u8282\u70B9succ\u8BBE\u7F6E\u5230first, \u5982\u679Csucc\u4E3A\u7A7A, \u5219\u5904\u7406\u5B8C\u6BD5.</li><li><code>root.parent != null</code>\u4E3A\u4EC0\u4E48\u6839\u8282\u70B9\u7684\u7236\u8282\u70B9\u4F1A\u51FA\u5148\u4E3A\u975E\u7A7A\u7684\u60C5\u51B5, \u56E0\u4E3A: \u5F53\u6211\u4EEC\u8BBE\u7F6E<code>tab[index] = first = succ</code>\u7684\u65F6\u5019, \u5C31\u5DF2\u7ECF\u6539\u53D8\u4E86root. \u6B64\u65F6\u4E3A\u4E86\u91CD\u65B0\u83B7\u53D6\u6839\u8282\u70B9\u5C31\u9700\u8981\u8C03\u7528root().</li><li>\u5982\u679C\u6839\u8282\u70B9\u4E3A\u7A7A\u6216\u8005\u6811\u8282\u70B9\u8F83\u5C11(\u7B97\u662F\u6211\u7684\u731C\u6D4B\u5427, \u5982\u679C\u7EA2\u9ED1\u6811\u53F3\u8282\u70B9,\u5DE6\u8282\u70B9\u975E\u7A7A, \u5728\u5DE6\u8282\u70B9\u7684\u5DE6\u5B50\u6811\u4E3A\u7A7A\u7684\u60C5\u51B5\u4E0B, \u8FD9\u4E2A\u6811\u6700\u591A\u4F1A\u542B\u67099\u4E2A\u8282\u70B9). \u8282\u70B9\u6570\u91CF\u5C11, \u5219\u91CD\u65B0\u751F\u6210\u94FE\u8868, \u5E76\u5C06\u5934\u8282\u70B9\u653E\u5230table\u4E0A\u540E\u8FD4\u56DE. (\u6BCF\u5F53hashmap\u7684size\u53D1\u751F\u53D8\u52A8\u7684\u65F6\u5019\u90FD\u8981\u8BD5\u7740\u8FDB\u884C\u6570\u636E\u7ED3\u6784\u8F6C\u6362) <img src="https://tech.nikolazhang.top/2020-01-21-21-32-09.png" alt="2020-01-21-21-32-09" loading="lazy"></li></ol><p>\u4EE5\u4E0A\u662F\u89E3\u9664\u5F53\u524D\u8282\u70B9\u548C\u94FE\u8868\u4E4B\u95F4\u7684\u5173\u7CFB. \u4E4B\u540E\u8981\u89E3\u9664\u8282\u70B9\u548C\u6811\u4E2D\u8282\u70B9\u7684\u5173\u7CFB, \u4EE5\u53CA\u8FDB\u884C\u7EA2\u9ED1\u6811\u7684\u81EA\u5E73\u8861.</p><p>\u5220\u9664\u5F53\u524D\u7EA2\u9ED1\u6811\u5F53\u524D\u8282\u70B9\u6211\u4EEC\u60F3\u7684\u4E0D\u662F\u53D6\u76F4\u63A5\u5220\u6389\u8BE5\u8282\u70B9\u800C\u662F\u627E\u5230\u4E00\u4E2A\u8282\u70B9\u7528\u5B83\u6765\u66FF\u6362\u539F\u6765\u8282\u70B9\u7684\u503C. \u4E4B\u540E\u4E3A\u4E86\u83B7\u53D6\u66FF\u6362\u5F53\u524D\u8282\u70B9\u7684<code>replacement</code>\u8282\u70B9, \u5206\u56DB\u79CD\u60C5\u51B5\u8FDB\u884C\u5904\u7406:</p><ol><li>\u5F53\u524D\u8282\u70B9\u7684\u5B69\u5B50\u8282\u70B9\u90FD\u5B58\u5728</li><li>\u53EA\u5B58\u5728\u5DE6\u8282\u70B9</li><li>\u53EA\u5B58\u5728\u53F3\u8282\u70B9</li><li>\u6CA1\u6709\u5B69\u5B50</li></ol><p>\u4E0B\u9762\u6211\u4EEC\u4F9D\u6B21\u770B\u4E0B:</p><h3 id="\u5B69\u5B50\u8282\u70B9\u90FD\u5B58\u5728" tabindex="-1"><a class="header-anchor" href="#\u5B69\u5B50\u8282\u70B9\u90FD\u5B58\u5728" aria-hidden="true">#</a> \u5B69\u5B50\u8282\u70B9\u90FD\u5B58\u5728</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>pl <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> pr <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> s <span class="token operator">=</span> pr<span class="token punctuation">,</span> sl<span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>sl <span class="token operator">=</span> s<span class="token punctuation">.</span>left<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token comment">// find successor</span>
        s <span class="token operator">=</span> sl<span class="token punctuation">;</span>
    <span class="token keyword">boolean</span> c <span class="token operator">=</span> s<span class="token punctuation">.</span>red<span class="token punctuation">;</span> s<span class="token punctuation">.</span>red <span class="token operator">=</span> p<span class="token punctuation">.</span>red<span class="token punctuation">;</span> p<span class="token punctuation">.</span>red <span class="token operator">=</span> c<span class="token punctuation">;</span> <span class="token comment">// swap colors</span>
    <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> sr <span class="token operator">=</span> s<span class="token punctuation">.</span>right<span class="token punctuation">;</span>
    <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> pp <span class="token operator">=</span> p<span class="token punctuation">.</span>parent<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>s <span class="token operator">==</span> pr<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// p was s&#39;s direct parent</span>
        p<span class="token punctuation">.</span>parent <span class="token operator">=</span> s<span class="token punctuation">;</span>
        s<span class="token punctuation">.</span>right <span class="token operator">=</span> p<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> sp <span class="token operator">=</span> s<span class="token punctuation">.</span>parent<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>parent <span class="token operator">=</span> sp<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>s <span class="token operator">==</span> sp<span class="token punctuation">.</span>left<span class="token punctuation">)</span>
                sp<span class="token punctuation">.</span>left <span class="token operator">=</span> p<span class="token punctuation">;</span>
            <span class="token keyword">else</span>
                sp<span class="token punctuation">.</span>right <span class="token operator">=</span> p<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>right <span class="token operator">=</span> pr<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            pr<span class="token punctuation">.</span>parent <span class="token operator">=</span> s<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    p<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>right <span class="token operator">=</span> sr<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        sr<span class="token punctuation">.</span>parent <span class="token operator">=</span> p<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>left <span class="token operator">=</span> pl<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        pl<span class="token punctuation">.</span>parent <span class="token operator">=</span> s<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>parent <span class="token operator">=</span> pp<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        root <span class="token operator">=</span> s<span class="token punctuation">;</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">==</span> pp<span class="token punctuation">.</span>left<span class="token punctuation">)</span>
        pp<span class="token punctuation">.</span>left <span class="token operator">=</span> s<span class="token punctuation">;</span>
    <span class="token keyword">else</span>
        pp<span class="token punctuation">.</span>right <span class="token operator">=</span> s<span class="token punctuation">;</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E00\u90E8\u5206\u7684\u903B\u8F91\u4E3B\u8981\u662F\u4E3A\u4E86\u5BFB\u627E\u4E00\u4E2A\u540E\u7EE7\u8282\u70B9\u53BB\u66FF\u6362p\u8282\u70B9. \u8FD9\u4E2A\u540E\u7EE7\u8282\u70B9\u5BFB\u627E\u7684\u89C4\u5219\u662F:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>sl <span class="token operator">=</span> s<span class="token punctuation">.</span>left<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token comment">// find successor</span>
    s <span class="token operator">=</span> sl<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5176\u5B9E\u4E0D\u96BE\u7406\u89E3\u66FF\u6362\u4E00\u4E2A\u5C40\u90E8\u6839\u8282\u70B9\u7684\u540E\u7EE7\u8282\u70B9\u5E94\u8BE5\u4E3A\u5DE6\u5B50\u6811\u7684\u6700\u5927\u53F6\u5B50\u8282\u70B9\u6216\u8005\u4E3A\u53F3\u5B50\u6811\u6700\u5C0F\u53F6\u5B50\u8282\u70B9. \u5982\u679C\u53F6\u5B50\u4E3A\u7A7A\u90A3\u4E48\u5E94\u8BE5\u4F7F\u7528\u5176\u7236\u8282\u70B9. \u4E0B\u9762\u7684\u622A\u56FE\u5C55\u793A\u4E86<code>s != pr</code>\u65F6\u7684\u53D8\u6362\u60C5\u51B5. \u6211\u4EEC\u53EF\u4EE5\u770B\u5230\u6700\u7EC8\u7684\u6548\u679C\u662Fs\u548Cp\u4EA4\u6362\u4E86\u4F4D\u7F6E. <img src="https://tech.nikolazhang.top/2020-01-27-11-34-50.png" alt="2020-01-27-11-34-50" loading="lazy"><code>s==pr</code>\u60C5\u51B5\u6BD4\u8F83\u7B80\u5355, \u6B64\u65F6pr\u548Cp\u4EA4\u6362\u4E86\u4F4D\u7F6E, \u89C1\u4E0B\u56FE: <img src="https://tech.nikolazhang.top/2020-01-27-12-26-39.png" alt="2020-01-27-12-26-39" loading="lazy"></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>sr <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
    replacement <span class="token operator">=</span> sr<span class="token punctuation">;</span>
<span class="token keyword">else</span>
    replacement <span class="token operator">=</span> p<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E2A\u5730\u65B9\u5982\u679C\u5220\u9664\u8282\u70B9p\u7684sr\u8282\u70B9\u5B58\u5728(\u6CE8\u610F\u4EA4\u6362p\u548Cs\u4E4B\u540Esr\u4E3Ap\u7684\u5B50\u8282\u70B9),\u5219\u4F7F\u7528sr\u4F5C\u4E3A<code>replacement</code>, \u5426\u5219\u4F7F\u7528p\u4F5C\u4E3A<code>replacement</code>. sr\u4F5C\u4E3A<code>replacement</code>\u53EF\u4EE5\u7406\u89E3, \u81F3\u4E8E\u4E3A\u4EC0\u4E48\u4F7F\u7528p\u4F5C\u4E3A<code>replacement</code>\u800C\u4E0D\u662F\u76F4\u63A5\u8BBE\u7F6E\u4E3Anull, \u8FD8\u5F97\u7EE7\u7EED\u5F80\u4E0B\u770B\u624D\u77E5\u9053.</p><h3 id="\u5F53\u5DE6\u5B50\u8282\u70B9\u5B58\u5728" tabindex="-1"><a class="header-anchor" href="#\u5F53\u5DE6\u5B50\u8282\u70B9\u5B58\u5728" aria-hidden="true">#</a> \u5F53\u5DE6\u5B50\u8282\u70B9\u5B58\u5728</h3><p>replacement = pl;</p><h3 id="\u5F53\u53F3\u5B50\u8282\u70B9\u5B58\u5728" tabindex="-1"><a class="header-anchor" href="#\u5F53\u53F3\u5B50\u8282\u70B9\u5B58\u5728" aria-hidden="true">#</a> \u5F53\u53F3\u5B50\u8282\u70B9\u5B58\u5728</h3><p>replacement = pr;</p><h3 id="\u5F53\u6CA1\u6709\u5B69\u5B50" tabindex="-1"><a class="header-anchor" href="#\u5F53\u6CA1\u6709\u5B69\u5B50" aria-hidden="true">#</a> \u5F53\u6CA1\u6709\u5B69\u5B50</h3><p>replacement = p;</p><p>\u7EFC\u5408\u4E0A\u9762\u56DB\u79CD\u60C5\u51B5\u4E0B<code>replacement</code>\u7684\u8BBE\u7F6E, \u53EF\u4EE5\u53D1\u73B0\u5F53p\u5B58\u5728\u5B50\u8282\u70B9\u5219\u8BBE\u7F6E\u4E3A\u5B50\u8282\u70B9, \u5426\u5219\u4E3Ap\u672C\u8EAB. \u8FD9\u65F6\u5019\u5C31\u5927\u6982\u6E05\u695A\u4E86.\u7EE7\u7EED\u5F80\u4E0B\u5206\u6790:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>replacement <span class="token operator">!=</span> p<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> pp <span class="token operator">=</span> replacement<span class="token punctuation">.</span>parent <span class="token operator">=</span> p<span class="token punctuation">.</span>parent<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>pp <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        root <span class="token operator">=</span> replacement<span class="token punctuation">;</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">==</span> pp<span class="token punctuation">.</span>left<span class="token punctuation">)</span>
        pp<span class="token punctuation">.</span>left <span class="token operator">=</span> replacement<span class="token punctuation">;</span>
    <span class="token keyword">else</span>
        pp<span class="token punctuation">.</span>right <span class="token operator">=</span> replacement<span class="token punctuation">;</span>
    p<span class="token punctuation">.</span>left <span class="token operator">=</span> p<span class="token punctuation">.</span>right <span class="token operator">=</span> p<span class="token punctuation">.</span>parent <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u5BF9<code>replacement != p</code>\u7684\u60C5\u51B5\u8FDB\u884C\u4E86\u5904\u7406, \u5176\u76EE\u7684\u5728\u4E8E\u7528replacement\u66FF\u6362p\u8282\u70B9. \u6700\u540E\u79FB\u9664p</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> r <span class="token operator">=</span> p<span class="token punctuation">.</span>red <span class="token operator">?</span> root <span class="token operator">:</span> <span class="token function">balanceDeletion</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> replacement<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5982\u679C\u5220\u9664\u7684\u8282\u70B9\u662F\u7EA2\u8272\u7684, \u5219\u4E0D\u9700\u8981\u8FDB\u884C\u518D\u5E73\u8861(\u5220\u9664\u7EA2\u8272\u4E4B\u540E\u4E0D\u4F1A\u5F71\u54CD\u7EA2\u9ED1\u6811\u76845\u4E2A\u6761\u4EF6), \u4E0D\u4E3A\u7EA2\u8272\u8C03\u7528<code>balanceDeletion</code>\u8FDB\u884C\u518D\u5E73\u8861. \u8FD9\u4E2A\u65B9\u6CD5\u6211\u4EEC\u6682\u65F6\u4F5C\u4E3A\u9ED1\u76D2, \u6700\u7EC8\u4F1A\u8FD4\u56DE\u5E73\u8861\u540E\u7684\u6839\u8282\u70B9.</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>replacement <span class="token operator">==</span> p<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// detach</span>
    <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> pp <span class="token operator">=</span> p<span class="token punctuation">.</span>parent<span class="token punctuation">;</span>
    p<span class="token punctuation">.</span>parent <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>pp <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">==</span> pp<span class="token punctuation">.</span>left<span class="token punctuation">)</span>
            pp<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">==</span> pp<span class="token punctuation">.</span>right<span class="token punctuation">)</span>
            pp<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u81EA\u5E73\u8861\u4E4B\u540E\u518D\u8FDB\u884C<code>replacement == p</code>\u7684\u5904\u7406, \u5176\u76EE\u7684\u5728\u4E8E\u5207\u65ADp\u4E0E\u7236\u8282\u70B9\u7684\u5173\u7CFB. \u4E3A\u4EC0\u4E48\u5FC5\u987B\u8981\u5728\u81EA\u5E73\u8861\u4E4B\u540E\u8FDB\u884C\u5904\u7406\u5462? \u4E3A\u4EC0\u4E48\u6700\u540E\u53BB\u6389\u8282\u70B9\u4E0D\u7528\u62C5\u5FC3\u6811\u662F\u5426\u4E0D\u6EE1\u8DB35\u4E2A\u6761\u4EF6? TODO</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>movable<span class="token punctuation">)</span>
    <span class="token function">moveRootToFront</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> r<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6700\u540E\u5C06\u65B0\u7684\u6839\u8282\u70B9\u91CD\u65B0\u653E\u5230table\u6570\u7EC4\u4E0A\u53BB.</p><h2 id="balancedeletion" tabindex="-1"><a class="header-anchor" href="#balancedeletion" aria-hidden="true">#</a> balanceDeletion</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token function">balanceDeletion</span><span class="token punctuation">(</span><span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> root<span class="token punctuation">,</span>
                                            <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> xp<span class="token punctuation">,</span> xpl<span class="token punctuation">,</span> xpr<span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> x <span class="token operator">==</span> root<span class="token punctuation">)</span>
            <span class="token keyword">return</span> root<span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>xp <span class="token operator">=</span> x<span class="token punctuation">.</span>parent<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            x<span class="token punctuation">.</span>red <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> x<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>x<span class="token punctuation">.</span>red<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            x<span class="token punctuation">.</span>red <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> root<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>xpl <span class="token operator">=</span> xp<span class="token punctuation">.</span>left<span class="token punctuation">)</span> <span class="token operator">==</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
        <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>x\u53EF\u80FD\u4F1A\u6709\u4EE5\u4E0B5\u79CD\u60C5\u51B5.</p><ol><li>x\u4E3A\u7A7A\u6216\u8005\u4E3A\u6839\u8282\u70B9, \u6B64\u65F6\u4E0D\u505A\u4EFB\u4F55\u5904\u7406\u76F4\u63A5\u8FD4\u56DE\u6839\u8282\u70B9root</li><li>x\u7684\u7236\u8282\u70B9\u4E3A\u7A7A, \u5219x\u4E3A\u6839\u8282\u70B9\u91CD\u65B0\u8BBE\u7F6Ex\u989C\u8272, \u5E76\u8FD4\u56DEx\u4F5C\u4E3A\u65B0\u7684\u6839\u8282\u70B9.(\u4E4B\u6240\u4EE5\u6709\u8FD9\u4E00\u6B65\u5176\u5B9E\u662F\u548C<code>TreeNode&lt;K,V&gt; r = p.red ? root : balanceDeletion(root, replacement);</code>\u6709\u5173\u7CFB\u7684. \u5F53\u5220\u9664\u7684\u8282\u70B9\u4E3A\u9ED1\u8272, \u5219\u8DEF\u5F84\u4E0A\u9ED1\u8272\u8282\u70B9\u6570\u91CF\u5C31\u4F1A\u4E0D\u4E00\u81F4, \u56E0\u6B64\u76F4\u63A5\u5C06\u66FF\u6362\u8282\u70B9(\u7EA2\u8272)\u53D8\u4E3A\u9ED1\u8272, \u53EF\u4EE5\u907F\u514D\u8FD9\u4E2A\u95EE\u9898.)</li><li>x\u4E3A\u7EA2\u8272\u5219x\u91CD\u65B0\u6D82\u4E3A\u9ED1\u8272, \u5E76\u76F4\u63A5\u8FD4\u56DEroot.</li><li>x\u4E3A\u5176\u7236\u8282\u70B9xp\u7684\u5DE6\u5B50\u8282\u70B9</li><li>x\u4E3A\u5176\u7236\u8282\u70B9\u7684\u53F3\u5B50\u8282\u70B9(\u548C4\u5904\u7406\u76F8\u4F3C. \u624B\u6027\u64CD\u4F5C)</li></ol><p>\u6211\u4EEC\u7740\u91CD\u770B\u4E00\u4E0B4\u65F6\u5019\u7684\u60C5\u51B5:</p>`,48),k={href:"https://www.cnblogs.com/nullllun/p/8214599.html#autoid-3-2-0",target:"_blank",rel:"noopener noreferrer"},r=a(`<div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>xpr <span class="token operator">=</span> xp<span class="token punctuation">.</span>right<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> xpr<span class="token punctuation">.</span>red<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    xpr<span class="token punctuation">.</span>red <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    xp<span class="token punctuation">.</span>red <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    root <span class="token operator">=</span> <span class="token function">rotateLeft</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> xp<span class="token punctuation">)</span><span class="token punctuation">;</span>
    xpr <span class="token operator">=</span> <span class="token punctuation">(</span>xp <span class="token operator">=</span> x<span class="token punctuation">.</span>parent<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> xp<span class="token punctuation">.</span>right<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u79CD\u60C5\u51B5\u53EF\u4EE5\u53C2\u8003\u535A\u6587\u4E2D\u7684\u60C5\u51B5\u4E8C. \u5F53xp\u53F3\u8282\u70B9\u4E3A\u7EA2\u8272, \u6B64\u65F6\u53F3\u8282\u70B9\u53D8\u4E3A\u9ED1\u8272, \u7236\u8282\u70B9\u53D8\u4E3A\u7EA2\u8272, \u4E4B\u540E\u5728xp\u4E0A\u8FDB\u884C\u5DE6\u65CB. \u5E76\u5C06\u65B0\u7684xp\u7684\u53F3\u5B50\u8282\u70B9\u4F5C\u4E3Axpr.</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>xpr <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
    x <span class="token operator">=</span> xp<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u5728\u67D0\u6B21\u904D\u5386\u4E4B\u540Expr\u4E0D\u5B58\u5728, \u5219\u5DF2\u7ECF\u904D\u5386\u5230\u53F6\u5B50\u8282\u70B9, \u6B64\u65F6\u5C06x\u5411\u4E0A\u589E\u52A0\u4E00\u7EA7, \u5F00\u59CB\u4E0B\u4E00\u6B21\u5FAA\u73AF. \u7EE7\u7EED\u5E73\u8861\u64CD\u4F5C.</p><p>\u4E0B\u9762\u8BA8\u8BBAxpr\u4E3A\u9ED1\u8272\u7684\u60C5\u51B5:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> sl <span class="token operator">=</span> xpr<span class="token punctuation">.</span>left<span class="token punctuation">,</span> sr <span class="token operator">=</span> xpr<span class="token punctuation">.</span>right<span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>sr <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token operator">!</span>sr<span class="token punctuation">.</span>red<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
    <span class="token punctuation">(</span>sl <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token operator">!</span>sl<span class="token punctuation">.</span>red<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    xpr<span class="token punctuation">.</span>red <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    x <span class="token operator">=</span> xp<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u5B69\u5B50\u8282\u70B9\u5747\u4E3A\u9ED1\u8272, xpr\u53D8\u4E3A\u7EA2\u8272, \u5E76\u4E14x\u5411\u4E0A\u63A8\u4E00\u7EA7, \u5F00\u59CB\u4E0B\u4E00\u6B21\u5FAA\u73AF. \u8FD9\u79CD\u60C5\u51B5\u540C\u535A\u6587\u4E2D\u7684\u60C5\u51B5\u4E09.</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>sr <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token operator">!</span>sr<span class="token punctuation">.</span>red<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>sl <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            sl<span class="token punctuation">.</span>red <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        xpr<span class="token punctuation">.</span>red <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        root <span class="token operator">=</span> <span class="token function">rotateRight</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> xpr<span class="token punctuation">)</span><span class="token punctuation">;</span>
        xpr <span class="token operator">=</span> <span class="token punctuation">(</span>xp <span class="token operator">=</span> x<span class="token punctuation">.</span>parent<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span>
            <span class="token keyword">null</span> <span class="token operator">:</span> xp<span class="token punctuation">.</span>right<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>xpr <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        xpr<span class="token punctuation">.</span>red <span class="token operator">=</span> <span class="token punctuation">(</span>xp <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token boolean">false</span> <span class="token operator">:</span> xp<span class="token punctuation">.</span>red<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>sr <span class="token operator">=</span> xpr<span class="token punctuation">.</span>right<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            sr<span class="token punctuation">.</span>red <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>xp <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        xp<span class="token punctuation">.</span>red <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        root <span class="token operator">=</span> <span class="token function">rotateLeft</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> xp<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    x <span class="token operator">=</span> root<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u53F3\u5B69\u5B50\u975E\u7A7A\u5E76\u4E14\u4E3A\u9ED1\u8272, \u5982\u679C\u5DE6\u5B69\u5B50\u5B58\u5728(\u4E3A\u7EA2\u8272)\u5C31\u5C06\u5176\u6D82\u4E3A\u9ED1\u8272. \u7236\u8282\u70B9\u6D82\u4E3A\u7EA2\u8272. \u4E4B\u540E\u5BF9xpr\u8FDB\u884C\u53F3\u65CB. \u6B64\u65F6\u60C5\u51B5\u7C7B\u4F3C\u60C5\u51B5\u516D.</p><h2 id="\u6700\u540E" tabindex="-1"><a class="header-anchor" href="#\u6700\u540E" aria-hidden="true">#</a> \u6700\u540E</h2><p>\u5927\u6982\u7528\u4E867\u7BC7\u6587\u7AE0\u53BB\u4ECB\u7ECDhashmap, \u4E3B\u8981\u4ECB\u7ECD\u4E86\u6269\u5BB9, \u589E\u52A0, \u5220\u9664. \u7EA2\u9ED1\u6811\u7B49\u76F8\u5173\u77E5\u8BC6. \u7531\u4E8E\u662F\u8FB9\u770B\u8FB9\u5199, \u4E0D\u4E00\u5B9A\u4FDD\u8BC1\u5B8C\u5168\u6B63\u786E. \u8FD8\u9700\u8981\u65E5\u540E\u4E0D\u65AD\u5B8C\u5584. \u4E4B\u524D\u7684\u5F88\u591A\u6587\u7AE0\u867D\u7136\u6BD4\u8F83\u7B80\u5355, \u4F46\u8FD8\u662F\u6B20\u7F3A\u4E00\u4E9B\u56FE\u8868. \u8FD9\u4E2A\u65E5\u540E\u4F1A\u8865\u5145\u4E0A. hashmap\u4E2D\u8FD8\u6709\u4E00\u4E9B\u65B9\u6CD5\u6CA1\u6709\u63D0\u5230. \u4E0D\u8FC7\u5F88\u96BE\u61C2\u5F97\u5E94\u8BE5\u662F\u6CA1\u6709\u4E86. \u56E0\u6B64\u5C31\u5230\u6B64\u5427....</p>`,11);function d(v,m){const p=l("ExternalLinkIcon");return e(),o("div",null,[i,s("p",null,[n("\u5728\u5206\u6790\u4E0B\u9762\u7684\u4EE3\u7801\u4E4B\u524D\u5EFA\u8BAE\u67E5\u770B"),s("a",k,[n("\u7EA2\u9ED1\u6811\u8BE6\u7EC6\u5206\u6790\uFF0C\u770B\u4E86\u90FD\u8BF4\u597D"),c(p)]),n("\u8FD9\u7BC7\u535A\u5BA2\u8BE6\u7EC6\u4ECB\u7ECD\u4E86\u7EA2\u9ED1\u6811\u5220\u9664\u7684\u51E0\u79CD\u60C5\u51B5\u6709\u52A9\u4E8E\u6211\u4EEC\u4E0B\u4E00\u6B65\u7684\u5206\u6790.")]),r])}const g=t(u,[["render",d],["__file","\u7EA2\u9ED1\u6811[4]\u81EA\u5E73\u88612.html.vue"]]);export{g as default};
