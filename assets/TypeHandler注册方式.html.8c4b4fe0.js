import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,e as p}from"./app.e7c9cb9e.js";const e={},t=p(`<blockquote><p>\u672C\u6587\u5BF9<code>typeHandlers\u8282\u70B9</code>\u7684\u89E3\u6790\u8FDB\u884C\u8BE6\u7EC6\u7684\u8BF4\u660E.</p></blockquote><h2 id="\u914D\u7F6E\u65B9\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u914D\u7F6E\u65B9\u5F0F" aria-hidden="true">#</a> \u914D\u7F6E\u65B9\u5F0F</h2><p>mybatis\u4E2D\u5BF9\u7C7B\u578B\u8F6C\u6362\u5668\u6709\u4E24\u79CD\u914D\u7F6E\u65B9\u5F0F</p><ol><li><p>\u4F7F\u7528package\u65B9\u5F0F\u914D\u7F6E</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>typeHandlers</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>package</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>org.mybatis.example<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>typeHandlers</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u4F7F\u7528<code>typeHandler</code>\u6307\u5B9Ahandler\u7B49\u4FE1\u606F.</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>typeHandlers</span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>typeHandler</span> <span class="token attr-name">handler</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>org.mybatis.example.ExampleTypeHandler<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>typeHandlers</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><p>\u5176\u4F7F\u7528\u89C4\u8303\u53EF\u4EE5\u5728\`\`\u4E2D\u83B7\u53D6:</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>!ELEMENT</span> <span class="token attr-name">typeHandlers</span> <span class="token attr-name">(typeHandler*,package*)</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>!ELEMENT</span> <span class="token attr-name">typeHandler</span> <span class="token attr-name">EMPTY</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>!ATTLIST</span> <span class="token attr-name">typeHandler</span>
<span class="token attr-name">javaType</span> <span class="token attr-name">CDATA</span> <span class="token attr-name">#IMPLIED</span>
<span class="token attr-name">jdbcType</span> <span class="token attr-name">CDATA</span> <span class="token attr-name">#IMPLIED</span>
<span class="token attr-name">handler</span> <span class="token attr-name">CDATA</span> <span class="token attr-name">#REQUIRED</span>
<span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>!ELEMENT</span> <span class="token attr-name">package</span> <span class="token attr-name">EMPTY</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>!ATTLIST</span> <span class="token attr-name">package</span>
<span class="token attr-name">name</span> <span class="token attr-name">CDATA</span> <span class="token attr-name">#REQUIRED</span>
<span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5BF9\u4E8E<code>package</code>\u65B9\u5F0F\u7684\u914D\u7F6E, \u5FC5\u987B\u6307\u5B9A\u7C7B\u7684\u5168\u9650\u5B9A\u8DEF\u5F84\u540D. \u5BF9\u4E8E<code>typeHandler</code>\u65B9\u5F0F\u5FC5\u987B\u6307\u5B9A<code>handler</code>.</p><h2 id="\u7A0B\u5E8F\u4E2D\u7684\u89E3\u6790" tabindex="-1"><a class="header-anchor" href="#\u7A0B\u5E8F\u4E2D\u7684\u89E3\u6790" aria-hidden="true">#</a> \u7A0B\u5E8F\u4E2D\u7684\u89E3\u6790</h2><p><code>typeHandlerElement</code>\u662F\u89E3\u6790<code>typeHandlers</code>\u914D\u7F6E\u7684\u5165\u53E3, \u5176\u65B9\u6CD5\u89C1\u4E0B:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">typeHandlerElement</span><span class="token punctuation">(</span><span class="token class-name">XNode</span> parent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>parent <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">XNode</span> child <span class="token operator">:</span> parent<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&quot;package&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>child<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">String</span> typeHandlerPackage <span class="token operator">=</span> child<span class="token punctuation">.</span><span class="token function">getStringAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                typeHandlerRegistry<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>typeHandlerPackage<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token class-name">String</span> javaTypeName <span class="token operator">=</span> child<span class="token punctuation">.</span><span class="token function">getStringAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;javaType&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">String</span> jdbcTypeName <span class="token operator">=</span> child<span class="token punctuation">.</span><span class="token function">getStringAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;jdbcType&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">String</span> handlerTypeName <span class="token operator">=</span> child<span class="token punctuation">.</span><span class="token function">getStringAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;handler&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> javaTypeClass <span class="token operator">=</span> <span class="token function">resolveClass</span><span class="token punctuation">(</span>javaTypeName<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">JdbcType</span> jdbcType <span class="token operator">=</span> \`resolveJdbcType\`<span class="token punctuation">(</span>jdbcTypeName<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> typeHandlerClass <span class="token operator">=</span> <span class="token function">resolveClass</span><span class="token punctuation">(</span>handlerTypeName<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>javaTypeClass <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>jdbcType <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    typeHandlerRegistry<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>javaTypeClass<span class="token punctuation">,</span> typeHandlerClass<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    typeHandlerRegistry<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>javaTypeClass<span class="token punctuation">,</span> jdbcType<span class="token punctuation">,</span> typeHandlerClass<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    typeHandlerRegistry<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>typeHandlerClass<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="typehandler\u914D\u7F6E\u65B9\u5F0F" tabindex="-1"><a class="header-anchor" href="#typehandler\u914D\u7F6E\u65B9\u5F0F" aria-hidden="true">#</a> typeHandler\u914D\u7F6E\u65B9\u5F0F</h3><p>\u5BF9\u4E8E<code>typeHandler</code>\u8FD9\u79CD\u914D\u7F6E\u65B9\u5F0F, \u76F4\u63A5\u83B7\u53D6\u8282\u70B9\u7684<code>javaType</code>, <code>jdbcType</code>, <code>handler</code>\u53C2\u6570, \u5E76\u901A\u8FC7\u53D6\u5BF9\u5E94\u7684\u7C7B\u578B.</p><p><code>resolveClass</code> \u65B9\u6CD5, \u4F1A\u67E5\u770B\u522B\u540D\u4E2D\u662F\u5426\u5B58\u5728\u914D\u7F6E\u7684\u540D\u5B57, \u5982\u679C\u5B58\u5728\u83B7\u53D6\u5176\u5BF9\u5E94\u7684\u7C7B\u578B, \u4E0D\u5B58\u5728\u5219\u4F7F\u7528<code>Resources.classForName(string);</code>\u901A\u8FC7\u53CD\u5C04\u83B7\u53D6.</p><p><code>JdbcType</code>\u662F\u679A\u4E3E\u7C7B\u578B, <code>resolveJdbcType</code>\u901A\u8FC7\u679A\u4E3E\u7684<code>valueOf</code>\u65B9\u6CD5\u83B7\u53D6\u5B57\u7B26\u4E32\u5BF9\u5E94\u7684\u679A\u4E3E\u7C7B\u578B.</p><p>\u7531\u4E8E<code>javaType</code>, <code>jdbcType</code>\u53EF\u6709\u53EF\u65E0, \u4F7F\u7528\u4E09\u79CD\u91CD\u8F7D\u65B9\u6CD5\u8FDB\u884C\u6CE8\u518C:</p><ul><li>java\u7C7B\u578B\u53CA\u7C7B\u578B\u8F6C\u6362\u5668 <code>void register(Class&lt;?&gt; javaTypeClass, Class&lt;?&gt; typeHandlerClass)</code></li><li>java\u7C7B\u578B,jdbc\u7C7B\u578B\u53CA\u7C7B\u578B\u8F6C\u6362\u5668 <code>void register(Class&lt;?&gt; javaTypeClass, JdbcType jdbcType, Class&lt;?&gt; typeHandlerClass)</code></li><li>\u53EA\u914D\u7F6E\u7C7B\u578B\u8F6C\u6362\u5668 <code>void register(Class&lt;?&gt; typeHandlerClass)</code></li></ul><p>\u9700\u8981\u6CE8\u610F\u7684\u662F, \u5355\u72EC\u4F7F\u7528<code>jdbcType</code>\u800C\u4E0D\u914D\u7F6E<code>javaType</code>. <code>jdbcType</code>\u4E0D\u8D77\u4F5C\u7528.</p><p>\u5BF9\u4E8E\u53EA\u914D\u7F6E\u7C7B\u578B\u8F6C\u6362\u5668\u7684\u6CE8\u518C\u65B9\u5F0F, \u53EF\u4EE5\u7EE7\u7EED\u5212\u5206, \u5176\u5904\u7406\u903B\u8F91\u5982\u4E0B:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">register</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> typeHandlerClass<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">boolean</span> mappedTypeFound <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token class-name">MappedTypes</span> mappedTypes <span class="token operator">=</span> typeHandlerClass<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span><span class="token class-name">MappedTypes</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>mappedTypes <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> javaTypeClass <span class="token operator">:</span> mappedTypes<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">register</span><span class="token punctuation">(</span>javaTypeClass<span class="token punctuation">,</span> typeHandlerClass<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mappedTypeFound <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mappedTypeFound<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">register</span><span class="token punctuation">(</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> typeHandlerClass<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EA\u914D\u7F6E\u4E86\u8F6C\u6362\u5668, \u8FD9\u79CD\u65B9\u5F0F\u9700\u8981\u5148\u770B<code>@MappedTypes</code>\u6CE8\u89E3, \u8BE5\u6CE8\u89E3\u8868\u793A\u7C7B\u578B\u8F6C\u6362\u5668\u6620\u5C04\u7684java\u7C7B\u578B. \u8BE5\u914D\u7F6E\u4E3A\u6570\u7EC4\u7C7B\u578B, \u56E0\u6B64\u9700\u8981\u901A\u8FC7\u904D\u5386\u8C03\u7528\u7B2C\u4E00\u79CD\u6CE8\u518C\u65B9\u5F0F(\u4F7F\u7528java\u7C7B\u578B\u548C\u7C7B\u578B\u8F6C\u6362\u5668\u8FDB\u884C\u6CE8\u518C\u7684\u91CD\u8F7D\u65B9\u6CD5).</p><p>\u5982\u679C\u6CA1\u6709\u914D\u7F6E<code>@MappedTypes</code>\u6CE8\u89E3, \u6216\u8005\u8BE5\u6CE8\u89E3\u4E2D\u6CA1\u6709\u8BBE\u7F6E\u6620\u5C04\u7684java\u7C7B\u578B, \u90A3\u4E48\u4F7F\u7528<code>register(getInstance(null, typeHandlerClass))</code>\u8FDB\u884C\u6CE8\u518C.</p><h4 id="\u5173\u4E8Egetinstance" tabindex="-1"><a class="header-anchor" href="#\u5173\u4E8Egetinstance" aria-hidden="true">#</a> \u5173\u4E8EgetInstance</h4><p>\u8FDB\u5165<code>typeHandlerRegistry.register</code>. \u4F1A\u770B\u5230\u4E00\u4E2A<code>getInstance</code>\u65B9\u6CD5.</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">register</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> javaTypeClass<span class="token punctuation">,</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> typeHandlerClass<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">register</span><span class="token punctuation">(</span>javaTypeClass<span class="token punctuation">,</span> <span class="token function">getInstance</span><span class="token punctuation">(</span>javaTypeClass<span class="token punctuation">,</span> typeHandlerClass<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">TypeHandler</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> javaTypeClass<span class="token punctuation">,</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> typeHandlerClass<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>javaTypeClass <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">Constructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> c <span class="token operator">=</span> typeHandlerClass<span class="token punctuation">.</span><span class="token function">getConstructor</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">TypeHandler</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> c<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span>javaTypeClass<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">NoSuchMethodException</span> ignored<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// ignored</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeException</span><span class="token punctuation">(</span><span class="token string">&quot;Failed invoking constructor for handler &quot;</span> <span class="token operator">+</span> typeHandlerClass<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token class-name">Constructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> c <span class="token operator">=</span> typeHandlerClass<span class="token punctuation">.</span><span class="token function">getConstructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">TypeHandler</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> c<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeException</span><span class="token punctuation">(</span><span class="token string">&quot;Unable to find a usable constructor for &quot;</span> <span class="token operator">+</span> typeHandlerClass<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>getInstance</code>\u65B9\u6CD5\u7684\u8FD4\u56DE\u503C\u4E3A<code>TypeHandler</code>, \u5176\u76EE\u7684\u5728\u4E8E\u901A\u8FC7<code>Class&lt;?&gt; javaTypeClass</code>, <code>Class&lt;?&gt; typeHandlerClass</code>\u901A\u8FC7\u53CD\u5C04\u521B\u5EFA<code>typeHandlerClass</code>\u5BF9\u5E94\u7684\u5B9E\u4F8B.</p><p>\u5982\u679C<code>javaTypeClass</code>\u975E\u7A7A, \u5C1D\u8BD5\u5C06\u5176\u4F5C\u4E3A\u6784\u9020\u5668\u53C2\u6570\u521B\u5EFA\u8F6C\u6362\u5668\u5BF9\u8C61. \u5982\u679C\u521B\u5EFA\u5931\u8D25, \u5219\u4F7F\u7528<code>TypeHandler</code>\u7684\u65E0\u53C2\u6784\u9020\u5668\u521B\u5EFA\u8F6C\u6362\u5668\u5B9E\u4F8B.</p><h4 id="\u4E09\u79CD\u91CD\u8F7D\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u4E09\u79CD\u91CD\u8F7D\u65B9\u6CD5" aria-hidden="true">#</a> \u4E09\u79CD\u91CD\u8F7D\u65B9\u6CD5</h4><p>\u4E0A\u9762\u63D0\u5230\u4E09\u79CD\u91CD\u8F7D\u65B9\u6CD5\u5206\u522B\u5BF9\u5E94\u4E09\u79CD\u540E\u7EED\u6CE8\u518C\u5B9E\u4F8B\u7684\u91CD\u8F7D\u65B9\u6CD5</p><ol><li><code>&lt;T&gt; void register(Type javaType, TypeHandler&lt;? extends T&gt; typeHandler)</code></li><li><code>void register(Type javaType, JdbcType jdbcType, TypeHandler&lt;?&gt; handler)</code></li><li><code>&lt;T&gt; void register(TypeHandler&lt;T&gt; typeHandler)</code></li></ol><h5 id="t-void-register-type-javatype-typehandler-extends-t-typehandler" tabindex="-1"><a class="header-anchor" href="#t-void-register-type-javatype-typehandler-extends-t-typehandler" aria-hidden="true">#</a> <code>&lt;T&gt; void register(Type javaType, TypeHandler&lt;? extends T&gt; typeHandler)</code></h5><p>\u7B2C\u4E00\u79CD\u7684\u65B9\u6CD5\u7684\u5177\u4F53\u5185\u5BB9\u4E3A:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>  <span class="token keyword">private</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">void</span> <span class="token function">register</span><span class="token punctuation">(</span><span class="token class-name">Type</span> javaType<span class="token punctuation">,</span> <span class="token class-name">TypeHandler</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> typeHandler<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">MappedJdbcTypes</span> mappedJdbcTypes <span class="token operator">=</span> typeHandler<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span><span class="token class-name">MappedJdbcTypes</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>mappedJdbcTypes <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">JdbcType</span> handledJdbcType <span class="token operator">:</span> mappedJdbcTypes<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">register</span><span class="token punctuation">(</span>javaType<span class="token punctuation">,</span> handledJdbcType<span class="token punctuation">,</span> typeHandler<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>mappedJdbcTypes<span class="token punctuation">.</span><span class="token function">includeNullJdbcType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">register</span><span class="token punctuation">(</span>javaType<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> typeHandler<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token function">register</span><span class="token punctuation">(</span>javaType<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> typeHandler<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u56E0\u4E3A\u6CA1\u6709\u663E\u793A\u4F20\u5165<code>JdbcType</code>\u53C2\u6570, \u56E0\u6B64\u9700\u8981\u901A\u8FC7\u7C7B\u578B\u578B\u8F6C\u6362\u5668\u7684\u6CE8\u89E3<code>@MappedJdbcTypes</code>\u95F4\u63A5\u83B7\u53D6. \u6BD4\u5982\u53EF\u4EE5\u5728\u7C7B\u578B\u8F6C\u6362\u5668\u4E0A\u914D\u7F6E<code>@MappedJdbcTypes(JdbcType.VARCHAR)</code>.</p><p>\u5F53\u7C7B\u578B\u8F6C\u6362\u5668\u4E0A\u5B58\u5728\u6620\u5C04\u7684jdbc\u7C7B\u578B\u6CE8\u89E3\u65F6, \u5BF9\u6CE8\u89E3\u7684\u4E24\u4E2A\u53C2\u6570\u8FDB\u884C\u5904\u7406.</p><ol><li>value: \u6620\u5C04\u7684jdbc\u7C7B\u578B, \u53EF\u4EE5\u6709\u591A\u4E2A\u6620\u5C04, \u56E0\u6B64\u9700\u8981\u901A\u8FC7\u904D\u5386\u8FDB\u884C\u6CE8\u518C.</li><li>includeNullJdbcType: \u662F\u5426\u53EF\u4EE5\u6620\u5C04\u4E3A\u7A7A\u7684jdbc\u7C7B\u578B.</li></ol><p>\u5982\u679C\u4E0D\u5B58\u5728\u6CE8\u89E3\u914D\u7F6E, \u5219\u4F7F\u75282\u4E2D\u7684\u903B\u8F91, \u5373\u8BA4\u4E3Ajdbc\u7C7B\u578B\u4E3A\u7A7A.</p><h5 id="void-register-type-javatype-jdbctype-jdbctype-typehandler-handler" tabindex="-1"><a class="header-anchor" href="#void-register-type-javatype-jdbctype-jdbctype-typehandler-handler" aria-hidden="true">#</a> <code>void register(Type javaType, JdbcType jdbcType, TypeHandler&lt;?&gt; handler)</code></h5><p>\u7B49\u540C\u4E8E<code>&lt;T&gt; void register(Type javaType, TypeHandler&lt;? extends T&gt; typeHandler)</code> \u5B58\u5728\u6CE8\u89E3jdbc\u7C7B\u578B\u6620\u5C04\u7684\u914D\u7F6E. \u5373\u76F4\u63A5\u8C03\u7528<code>register(javaType, handledJdbcType, typeHandler)</code></p><h5 id="t-void-register-typehandler-t-typehandler" tabindex="-1"><a class="header-anchor" href="#t-void-register-typehandler-t-typehandler" aria-hidden="true">#</a> <code>&lt;T&gt; void register(TypeHandler&lt;T&gt; typeHandler)</code></h5><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>  <span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">void</span> <span class="token function">register</span><span class="token punctuation">(</span><span class="token class-name">TypeHandler</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> typeHandler<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">boolean</span> mappedTypeFound <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token class-name">MappedTypes</span> mappedTypes <span class="token operator">=</span> typeHandler<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span><span class="token class-name">MappedTypes</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>mappedTypes <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> handledType <span class="token operator">:</span> mappedTypes<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">register</span><span class="token punctuation">(</span>handledType<span class="token punctuation">,</span> typeHandler<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mappedTypeFound <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// @since 3.1.0 - try to auto-discover the mapped type</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mappedTypeFound <span class="token operator">&amp;&amp;</span> typeHandler <span class="token keyword">instanceof</span> <span class="token class-name">TypeReference</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token class-name">TypeReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> typeReference <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TypeReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> typeHandler<span class="token punctuation">;</span>
        <span class="token function">register</span><span class="token punctuation">(</span>typeReference<span class="token punctuation">.</span><span class="token function">getRawType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> typeHandler<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mappedTypeFound <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// maybe users define the TypeReference with a different type and are not assignable, so just ignore it</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mappedTypeFound<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> <span class="token keyword">null</span><span class="token punctuation">,</span> typeHandler<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>\u65B9\u6CD5\u9996\u5148\u83B7\u53D6<code>@MappedTypes</code>\u914D\u7F6E\u7684java\u7C7B\u578B\u6620\u5C04, \u5E76\u904D\u5386\u8C03\u7528\u7B2C\u4E00\u79CD\u6CE8\u518C\u65B9\u5F0F<code>&lt;T&gt; void register(Type javaType, TypeHandler&lt;? extends T&gt; typeHandler)</code>, \u5373\u4F7F\u7528java\u7C7B\u578B\u548C\u7C7B\u578B\u8F6C\u6362\u5668\u7684\u6CE8\u518C\u65B9\u5F0F.</li><li>\u5982\u679C\u6CA1\u6709java\u7C7B\u578B\u6620\u5C04, \u5E76\u4E14\u7C7B\u578B\u8F6C\u6362\u5668\u7EE7\u627F\u4E86<code>TypeReference</code>, \u5219\u4F7F\u7528\u6307\u5B9A\u7684\u6CDB\u578B\u7C7B\u4F5C\u4E3A\u6620\u5C04\u7684java\u7C7B.</li><li>\u5982\u679C\u4ECD\u65E7\u6CA1\u6709java\u7C7B\u578B\u6620\u5C04, \u5219\u4F7F\u7528\u7B2C\u4E00\u79CD\u65B9\u5F0F\u6CE8\u518C, java\u6620\u5C04\u7C7B\u578B\u4F20\u5165\u7A7A. <strong>\u56E0\u6B64, \u4F7F\u7528java\u7C7B\u578B\u548C\u8F6C\u6362\u5668\u4F5C\u4E3A\u53C2\u6570\u7684\u6CE8\u518C\u65B9\u5F0F, \u5728\u6CA1\u6709java\u6620\u5C04\u914D\u7F6E\u7684\u65F6\u5019, \u5BF9\u5E94\u7684\u53C2\u6570\u662F\u4F1A\u4E3A\u7A7A\u7684.</strong></li></ol><h3 id="\u6700\u540E\u7684\u6CE8\u518C" tabindex="-1"><a class="header-anchor" href="#\u6700\u540E\u7684\u6CE8\u518C" aria-hidden="true">#</a> \u6700\u540E\u7684\u6CE8\u518C</h3><p>\u4EE5\u4E0A\u4E09\u79CD\u6CE8\u518C\u7684\u60C5\u51B5, \u6700\u540E\u90FD\u4F1A\u8C03\u7528\u4E0B\u9762\u7684\u65B9\u6CD5\u8FDB\u884C\u6CE8\u518C:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>  <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">register</span><span class="token punctuation">(</span><span class="token class-name">Type</span> javaType<span class="token punctuation">,</span> <span class="token class-name">JdbcType</span> jdbcType<span class="token punctuation">,</span> <span class="token class-name">TypeHandler</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> handler<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>javaType <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">JdbcType</span><span class="token punctuation">,</span> <span class="token class-name">TypeHandler</span><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> typeHandlerMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>javaType<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>map <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> map <span class="token operator">==</span> <span class="token constant">NULL_TYPE_HANDLER_MAP</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>jdbcType<span class="token punctuation">,</span> handler<span class="token punctuation">)</span><span class="token punctuation">;</span>
      typeHandlerMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>javaType<span class="token punctuation">,</span> map<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    allTypeHandlersMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>handler<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> handler<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EA\u4E0D\u8FC7\u5916\u5C42\u7684\u65B9\u6CD5, \u4F1A\u901A\u8FC7\u5404\u79CD\u9014\u5F84\u83B7\u53D6\u8BE5\u65B9\u6CD5\u7684\u4E09\u4E2A\u53C2\u6570.</p><ol><li><code>javaType</code>: \u53EF\u4EE5\u901A\u8FC7<code>typeHandler</code>\u5B50\u8282\u70B9\u76F4\u63A5\u6307\u5B9A, <code>@MappedTypes</code>\u6307\u5B9A, \u83B7\u53D6<code>TypeReference</code>\u6CDB\u578B\u53C2\u6570\u6307\u5B9A.</li><li><code>jdbcType</code>: \u53EF\u4EE5\u901A\u8FC7<code>typeHandler</code>\u5B50\u8282\u70B9\u76F4\u63A5\u6307\u5B9A, <code>@MappedJdbcTypes</code>\u6307\u5B9A</li><li><code>handler</code>: \u901A\u8FC7<code>package</code>, <code>typeHandler</code>\u8282\u70B9\u8FDB\u884C\u6307\u5B9A.</li></ol><p>\u4F46\u662F\u4ECD\u65E7\u4E0D\u80FD\u4FDD\u8BC1\u4F7F\u7528\u8005\u914D\u7F6E\u4E86\u524D\u4E24\u4E2A\u53C2\u6570. \u56E0\u6B64\u8FDB\u5165\u8BE5\u65B9\u6CD5\u4E5F\u5C31\u4F1A\u6709\u4E3A\u7A7A\u7684\u60C5\u51B5.</p><p>\u6B64\u5904\u7684<code>register</code>\u65B9\u6CD5, \u4F7F\u7528\u5230\u4E86\u4E24\u4E2AMap\u7C7B\u578B, \u4ED6\u4EEC\u7684\u5B9A\u4E49\u5206\u522B\u4E3A:</p><ul><li><code>private final Map&lt;Type, Map&lt;JdbcType, TypeHandler&lt;?&gt;&gt;&gt; typeHandlerMap = new ConcurrentHashMap&lt;&gt;();</code></li><li><code>private final Map&lt;Class&lt;?&gt;, TypeHandler&lt;?&gt;&gt; allTypeHandlersMap = new HashMap&lt;&gt;();</code></li></ul><p>\u5982\u679C<code>javaType</code>\u5B58\u5728, <code>typeHandlerMap</code>\u4E2D\u9700\u8981\u7F13\u5B58\u5176\u6620\u5C04\u7684jdbc\u7C7B\u578B\u4EE5\u53CA\u8F6C\u6362\u5668. \u6700\u540E<code>allTypeHandlersMap</code>, \u7F13\u5B58\u7C7B\u578B\u8F6C\u6362\u5668\u7C7B\u578B\u4EE5\u53CA\u5176\u5B9E\u4F8B.</p><h2 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h2><ol><li>\u5916\u5C42\u4E09\u4E2A\u91CD\u8F7D\u65B9\u6CD5\u4E4B\u95F4\u7684\u5173\u7CFB</li><li>\u5185\u90E8\u4E09\u4E2A\u91CD\u8F7D\u65B9\u6CD5\u4E4B\u95F4\u7684\u5173\u7CFB</li><li>typeHandler\u5982\u4F55\u5B9E\u4F8B\u5316, <code>getInstance</code>\u7684\u903B\u8F91</li><li><code>MappedTypes</code>\u4E0E<code>MappedJdbcTypes</code>\u7684\u4F5C\u7528, \u4E0E\u4F5C\u7528\u65F6\u673A</li><li>\u5B58\u50A8\u6620\u5C04\u5173\u7CFB\u7684\u6570\u636E\u7ED3\u6784</li></ol>`,52),c=[t];function o(l,i){return s(),a("div",null,c)}const k=n(e,[["render",o],["__file","TypeHandler\u6CE8\u518C\u65B9\u5F0F.html.vue"]]);export{k as default};
