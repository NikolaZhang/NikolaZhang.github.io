import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,e as p}from"./app.e7c9cb9e.js";const t={},e=p(`<blockquote><p>\u8FD9\u7BC7\u6587\u7AE0\u901A\u8FC7\u4E00\u4E2A\u4F8B\u5B50\u63A2\u8BA8\u5982\u4F55\u51CF\u5C11\u6761\u4EF6\u5224\u65AD\u7684\u51FA\u73B0. \u5E76\u4ECB\u7ECD\u4E00\u4E0B\u51FD\u6570\u5F0F\u7F16\u7A0B.</p></blockquote><h2 id="\u4E0D\u597D\u7684\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u4E0D\u597D\u7684\u4EE3\u7801" aria-hidden="true">#</a> \u4E0D\u597D\u7684\u4EE3\u7801</h2><p>\u6CE8\u610F\u4E0B\u9762\u6253\u5370\u65E5\u5FD7\u7684\u5730\u65B9\u6211\u4EEC\u53EF\u4EE5\u505A\u5F88\u591A\u7684\u4E1A\u52A1\u5904\u7406.</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">dealWorkByAge</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> age<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">isNull</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span> <span class="token operator">||</span> age <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;[dealWorkByAge]\u5E74\u9F84\u4E0D\u80FD\u4E3A\u7A7A\u6216\u5C0F\u4E8E\u7B49\u4E8E0, age: [%s]&quot;</span><span class="token punctuation">,</span> age<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>age <span class="token operator">&lt;=</span> <span class="token number">20</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;\u4EBA\u751F\u5F97\u610F\u9A6C\u8E44\u6025&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>age <span class="token operator">&lt;=</span> <span class="token number">50</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;\u4EBA\u5230\u4E2D\u5E74\u4E0D\u5F97\u5DF2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>age<span class="token operator">&lt;=</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;\u4E00\u5BF8\u5149\u9634\u4E00\u5BF8\u91D1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;\u9605\u5C3D\u5C18\u4E16\u7ECF\u98CE\u96E8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u8F6C\u6362\u4E3A\u679A\u4E3E\u65B9\u5F0F\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#\u8F6C\u6362\u4E3A\u679A\u4E3E\u65B9\u5F0F\u5904\u7406" aria-hidden="true">#</a> \u8F6C\u6362\u4E3A\u679A\u4E3E\u65B9\u5F0F\u5904\u7406</h2><h3 id="\u5B9A\u4E49\u679A\u4E3E\u7C7B" tabindex="-1"><a class="header-anchor" href="#\u5B9A\u4E49\u679A\u4E3E\u7C7B" aria-hidden="true">#</a> \u5B9A\u4E49\u679A\u4E3E\u7C7B</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">AgeEnum</span> <span class="token punctuation">{</span>

    <span class="token function">TEEN</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> t <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;\u4EBA\u751F\u5F97\u610F\u9A6C\u8E44\u6025&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">ADULT</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> t <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;\u4EBA\u5230\u4E2D\u5E74\u4E0D\u5F97\u5DF2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">OLD</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> t <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;\u4E00\u5BF8\u5149\u9634\u4E00\u5BF8\u91D1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">GOD</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token constant">MAX_VALUE</span><span class="token punctuation">,</span> t <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;\u9605\u5C3D\u5C18\u4E16\u7ECF\u98CE\u96E8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


    <span class="token keyword">public</span> <span class="token class-name">Integer</span> age<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">Consumer</span> consumer<span class="token punctuation">;</span>

    <span class="token class-name">AgeEnum</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> age<span class="token punctuation">,</span> <span class="token class-name">Consumer</span> consumer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>consumer <span class="token operator">=</span> consumer<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528\u679A\u4E3E\u8F6C\u6362if\u903B\u8F91\u5904\u7406:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">dealWorkByAgeEnum</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> age<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">isNull</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span> <span class="token operator">||</span> age <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;[dealWorkByAge]\u5E74\u9F84\u4E0D\u80FD\u4E3A\u7A7A\u6216\u5C0F\u4E8E\u7B49\u4E8E0, age: [%s]&quot;</span><span class="token punctuation">,</span> age<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">AgeEnum</span> level <span class="token operator">:</span> <span class="token class-name">AgeEnum</span><span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>age <span class="token operator">&lt;=</span> level<span class="token punctuation">.</span>age<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            level<span class="token punctuation">.</span>consumer<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E2A\u4F8B\u5B50\u4E0D\u662F\u5F88\u597D, \u9700\u8981\u6CE8\u610F\u7684\u662F: for\u5FAA\u73AF\u4E2D\u4E0D\u4F1A\u6709if\u7684\u90A3\u79CD\u4F18\u5148\u7EA7\u6B21\u5E8F. \u56E0\u6B64\u53EF\u80FD\u4F1A\u5BFC\u81F4\u4E1A\u52A1\u5904\u7406\u51FA\u73B0\u95EE\u9898. \u6BD4\u5982\u8F93\u5165age\u4E3A10, \u8BE5\u53C2\u6570\u5728\u4EFB\u4F55\u4E00\u4E2A\u679A\u4E3E\u7C7B\u578B\u4E2D\u90FD\u662F\u6EE1\u8DB3\u5904\u7406\u6761\u4EF6\u7684. \u56E0\u6B64\u6700\u597D\u5C06\u8303\u56F4\u9650\u5236\u5230\u4E3A\u95ED\u533A\u95F4\u5185.</p><p>\u53E6\u5916\u518D\u8BF4\u660E\u4E00\u70B9. \u524D\u7AEF\u4E0B\u62C9\u6846\u4E2D\u7684\u503C\u5982\u679C\u4F20\u5BF9\u5E94\u679A\u4E3E\u7C7B\u578B\u7684\u540D\u5B57. \u662F\u53EF\u4EE5\u81EA\u52A8\u8F6C\u5316\u6210\u76F8\u5E94\u679A\u4E3E\u7C7B\u578B\u7684. \u56E0\u6B64\u540E\u7AEF\u76F4\u63A5\u8C03\u7528\u679A\u4E3E\u76F8\u5E94\u7684\u51FD\u6570\u65B9\u6CD5\u5373\u53EF\u5B8C\u6210\u4E1A\u52A1\u5904\u7406. \u{1F603} \u662F\u4E0D\u662F\u6709\u70B9\u604D\u7136\u5927\u609F</p><h2 id="\u51FD\u6570\u5F0F\u7F16\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u5F0F\u7F16\u7A0B" aria-hidden="true">#</a> \u51FD\u6570\u5F0F\u7F16\u7A0B</h2><p><img src="https://tech.nikolazhang.top/2020-01-30-14-06-24.png" alt="2020-01-30-14-06-24" loading="lazy"> \u6253\u5F00<code>java.util.function</code>\u5305\u6211\u4EEC\u53EF\u4EE5\u770B\u5230jdk\u63D0\u4F9B\u7684\u4E00\u4E9B\u51FD\u6570\u5F0F\u63A5\u53E3. \u4E3B\u8981\u6709\u4EE5\u4E0B\u51E0\u79CD\u7C7B\u578B:</p><ol><li><p>Consumer \u6D88\u8D39\u578B. \u8F93\u5165\u4E00\u4E2A\u53C2\u6570, \u6CA1\u6709\u8FD4\u56DE\u503C</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> consumer1 <span class="token operator">=</span> t <span class="token operator">-&gt;</span> log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;consumer1====&gt; &quot;</span> <span class="token operator">+</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> consumer2 <span class="token operator">=</span> consumer1<span class="token punctuation">.</span><span class="token function">andThen</span><span class="token punctuation">(</span>t <span class="token operator">-&gt;</span> log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;consumer2====&gt; &quot;</span> <span class="token operator">+</span> t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

consumer1<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
consumer2<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://tech.nikolazhang.top/2020-01-30-13-11-47.png" alt="2020-01-30-13-11-47" loading="lazy"></p></li><li><p>Function \u7ED9\u5B9A\u4E00\u4E2A\u8F93\u5165\u8FD4\u56DE\u4E00\u4E2A\u8F93\u51FA</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> function1 <span class="token operator">=</span> t <span class="token operator">-&gt;</span> <span class="token string">&quot;======&gt; &quot;</span> <span class="token operator">+</span> t<span class="token punctuation">;</span>
<span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> andThen <span class="token operator">=</span> function1<span class="token punctuation">.</span><span class="token function">andThen</span><span class="token punctuation">(</span>t <span class="token operator">-&gt;</span> <span class="token string">&quot; =====&gt; andThen: &quot;</span> <span class="token operator">+</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> compose <span class="token operator">=</span> function1<span class="token punctuation">.</span><span class="token function">compose</span><span class="token punctuation">(</span>t <span class="token operator">-&gt;</span> t <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;compose \u8FD4\u56DE\u7ED3\u679C: [{}]&quot;</span><span class="token punctuation">,</span> compose<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;andThen \u8FD4\u56DE\u7ED3\u679C: [{}]&quot;</span><span class="token punctuation">,</span> andThen<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://tech.nikolazhang.top/2020-01-30-13-26-36.png" alt="2020-01-30-13-26-36" loading="lazy"></p><p>\u8FD9\u91CC\u63D0\u53CA\u4E00\u4E0B<code>compose</code>, \u53EF\u4EE5\u770B\u4E00\u4E0B\u4E0B\u9762\u7684\u6E90\u7801:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">default</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">,</span> <span class="token class-name">R</span><span class="token punctuation">&gt;</span></span> <span class="token function">compose</span><span class="token punctuation">(</span><span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">V</span><span class="token punctuation">,</span> <span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> before<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">requireNonNull</span><span class="token punctuation">(</span>before<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">V</span> v<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token function">apply</span><span class="token punctuation">(</span>before<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F88\u660E\u663E, \u9996\u5148\u6267\u884C\u8F93\u5165\u7684\u51FD\u6570\u5E76\u5C06\u5176\u8FD4\u56DE\u503C\u4F5C\u4E3A\u8F93\u5165. \u6267\u884C\u8FC7\u7A0B\u662F\u5148\u6267\u884C\u8F93\u5165, \u540E\u6267\u884C\u8C03\u7528\u8005. \u8FD9\u548C<code>andThen</code>\u6B63\u597D\u662F\u76F8\u53CD\u7684. \u5982\u4E0B\u662F<code>andThen</code>\u7684\u6E90\u7801:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">default</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token function">andThen</span><span class="token punctuation">(</span><span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">R</span><span class="token punctuation">,</span> <span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> after<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">requireNonNull</span><span class="token punctuation">(</span>after<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">T</span> t<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> after<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token function">apply</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8BE5\u65B9\u6CD5\u662F\u5C06\u5F53\u524D\u7684\u7ED3\u679C\u4F5C\u4E3A\u8F93\u5165\u51FD\u6570\u7684\u8F93\u5165\u53C2\u6570. \u6267\u884C\u8FC7\u7A0B\u662F\u5148\u6267\u884C\u8C03\u7528\u8005, \u540E\u6267\u884C\u8F93\u5165.</p></li><li><p>UnaryOperator \u8F93\u5165\u5E76\u8FD4\u56DE\u8BE5\u7C7B\u578B, \u7EE7\u627F<code>Function&lt;T, T&gt;</code></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">UnaryOperator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> unary1 <span class="token operator">=</span> t <span class="token operator">-&gt;</span> t <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span>
log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;UnaryOperator \u8FD4\u56DE\u7ED3\u679C: [{}]&quot;</span><span class="token punctuation">,</span> unary1<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>Predicate \u8F93\u5165\u4E00\u4E2A\u53C2\u6570, \u8FD4\u56DE\u5224\u65AD\u7ED3\u679C</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Predicate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> predicate <span class="token operator">=</span> t <span class="token operator">-&gt;</span> t <span class="token operator">&gt;</span> <span class="token number">10</span><span class="token punctuation">;</span>
log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;\u662F\u5426\u5927\u4E8E10: [{}]&quot;</span><span class="token punctuation">,</span> predicate<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Predicate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> and <span class="token operator">=</span> predicate<span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span>t <span class="token operator">-&gt;</span> t <span class="token operator">&lt;</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;\u662F\u5426\u5927\u4E8E10\u4E14\u5C0F\u4E8E30: [{}]&quot;</span><span class="token punctuation">,</span> and<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Predicate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> or <span class="token operator">=</span> predicate<span class="token punctuation">.</span><span class="token function">or</span><span class="token punctuation">(</span>t <span class="token operator">-&gt;</span> t <span class="token operator">&gt;</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;\u662F\u5426\u5927\u4E8E10\u621650: [{}]&quot;</span><span class="token punctuation">,</span> or<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Predicate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> negate <span class="token operator">=</span> predicate<span class="token punctuation">.</span><span class="token function">negate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;negate: [{}]&quot;</span> <span class="token punctuation">,</span> negate<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://tech.nikolazhang.top/2020-01-30-13-56-22.png" alt="2020-01-30-13-56-22" loading="lazy"></p></li><li><p>Supplier \u6CA1\u6709\u8F93\u5165\u53C2\u6570, \u83B7\u53D6\u7A0B\u5E8F\u8FD0\u884C\u8FD4\u56DE\u7ED3\u679C</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Supplier</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> supplier <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token number">10</span><span class="token punctuation">;</span>
log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;Supplier: [{}]&quot;</span><span class="token punctuation">,</span> supplier<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="\u81EA\u5B9A\u4E49\u51FD\u6570\u63A5\u53E3" tabindex="-1"><a class="header-anchor" href="#\u81EA\u5B9A\u4E49\u51FD\u6570\u63A5\u53E3" aria-hidden="true">#</a> \u81EA\u5B9A\u4E49\u51FD\u6570\u63A5\u53E3</h2><p>\u5982\u679C\u6211\u4EEC\u7684\u4E1A\u52A1\u4F9D\u8D56\u7684\u4E0D\u6B62\u8FD9\u4E9B\u53C2\u6570\u8981\u5982\u4F55\u5904\u7406\u5462?(\u591A\u4E2A\u53C2\u6570\u8F93\u5165\u89C1Bi****\u770B\u540D\u5B57\u4E5F\u80FD\u731C\u5230\u8FD9\u79CD\u63A5\u53E3\u652F\u6301\u4E24\u4E2A\u53C2\u6570\u8F93\u5165)</p><p>\u4E00\u79CD\u65B9\u6CD5\u662F\u4F7F\u7528compose, andThen\u8FDB\u884C\u7EC4\u5408\u5904\u7406, \u4E0A\u9762\u6211\u4EEC\u5728Function\u63A5\u53E3\u7684\u6D4B\u8BD5\u4EE3\u7801\u4E2D\u5DF2\u7ECF\u5206\u6790\u4E86, \u4E0D\u8FC7\u8FD9\u79CD\u9002\u5408\u4E8E\u4E0B\u4E00\u6B65\u4E0E\u4E0A\u4E00\u6B65\u7684\u76F8\u4F9D\u8D56\u7684\u60C5\u51B5. \u53E6\u5916\u4E00\u79CD\u65B9\u6CD5\u5C31\u662F\u5B9A\u4E49\u81EA\u5DF1\u7684\u51FD\u6570\u63A5\u53E3\u652F\u6301\u591A\u53C2\u6570\u8F93\u5165.</p><h3 id="\u5B9A\u4E49\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u5B9A\u4E49\u51FD\u6570" aria-hidden="true">#</a> \u5B9A\u4E49\u51FD\u6570</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@FunctionalInterface</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">MineFunction</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">A</span><span class="token punctuation">,</span> <span class="token class-name">B</span><span class="token punctuation">,</span> <span class="token class-name">C</span><span class="token punctuation">,</span> <span class="token class-name">D</span><span class="token punctuation">,</span> <span class="token class-name">R</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token class-name">R</span> <span class="token function">exe</span><span class="token punctuation">(</span><span class="token class-name">A</span> a<span class="token punctuation">,</span> <span class="token class-name">B</span> b<span class="token punctuation">,</span> <span class="token class-name">C</span> c<span class="token punctuation">,</span> <span class="token class-name">D</span> d<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>@FunctionalInterface</code>\u8868\u793A\u8FD9\u662F\u4E00\u4E2A\u51FD\u6570\u63A5\u53E3</p><h3 id="\u6D4B\u8BD5" tabindex="-1"><a class="header-anchor" href="#\u6D4B\u8BD5" aria-hidden="true">#</a> \u6D4B\u8BD5</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">MineFunction</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> mine <span class="token operator">=</span>
        <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">,</span> d<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;%d,%d,%d,%s&quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">,</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span>
log<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;mine: [{}]&quot;</span> <span class="token punctuation">,</span> mine<span class="token punctuation">.</span><span class="token function">exe</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">&quot;\u54C8\u54C8\u54C8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u7ED3\u679C" tabindex="-1"><a class="header-anchor" href="#\u7ED3\u679C" aria-hidden="true">#</a> \u7ED3\u679C</h3><p><img src="https://tech.nikolazhang.top/2020-01-30-14-24-46.png" alt="2020-01-30-14-24-46" loading="lazy"></p><p>\u662F\u4E0D\u662F\u5F88\u7B80\u5355. \u{1F603} \u6CE8\u610F\u5982\u679C\u4F60\u7684\u591A\u4E2A\u53C2\u6570\u4E4B\u95F4\u53EF\u4EE5\u5C01\u88C5\u6210\u4E00\u4E2A\u5BF9\u8C61\u7684\u8BDD\u4E3A\u4EC0\u4E48\u4E0D\u8FDB\u884C\u5C01\u88C5\u5462?</p><h2 id="end" tabindex="-1"><a class="header-anchor" href="#end" aria-hidden="true">#</a> end</h2><p><img src="https://tech.nikolazhang.top/2020-01-30-14-28-43.png" alt="2020-01-30-14-28-43" loading="lazy"> \u5C31\u5230\u8FD9\u5427, \u8C22\u8C22.</p>`,27),o=[e];function c(l,u){return s(),a("div",null,o)}const r=n(t,[["render",c],["__file","\u5982\u4F55\u4F18\u96C5\u7684\u4F7F\u7528\u679A\u4E3E2.html.vue"]]);export{r as default};
