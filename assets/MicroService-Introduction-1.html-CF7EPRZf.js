import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as r,e as i,f as c}from"./app-CYrfdzXE.js";const o="/images/article/20/microservice_all.png",t={};function n(d,e){return a(),r("div",null,[e[0]||(e[0]=i('<h1 id="microservice-关键技术概要【下】" tabindex="-1"><a class="header-anchor" href="#microservice-关键技术概要【下】" aria-hidden="true">#</a> MicroService 关键技术概要【下】</h1><p><img src="'+o+'" alt="pic"></p><h2 id="memcache" tabindex="-1"><a class="header-anchor" href="#memcache" aria-hidden="true">#</a> MemCache</h2><ul><li>分布式高速缓存</li><li>用于动态web应用减轻数据库负载</li><li>存储键值对的hashmap</li><li>C/S架构</li></ul>',4)),c("more"),e[1]||(e[1]=i('<ul><li>一台服务器上可以启动多个不同端口号的 MemCached 进程</li><li>在服务器端启动后，以守护程序的方式，监听客户端的请求。</li><li>MemCache 缓存的数据全部存储在 MemCache 管理的内存中，所以重启服务<br> 器之后缓存数据会清空，不支持持久化。</li><li>原理</li></ul><blockquote><ul><li>内存管理</li><li>分布式存储</li><li>线程管理</li></ul></blockquote><ul><li>特性与限制</li></ul><h2 id="消息队列" tabindex="-1"><a class="header-anchor" href="#消息队列" aria-hidden="true">#</a> 消息队列</h2><ul><li>分类</li></ul><blockquote><ul><li>RabbitMQ</li><li>ActiveMQ</li><li>Kafka</li></ul></blockquote><h2 id="end" tabindex="-1"><a class="header-anchor" href="#end" aria-hidden="true">#</a> END</h2>',7))])}const u=l(t,[["render",n],["__file","MicroService-Introduction-1.html.vue"]]);export{u as default};
