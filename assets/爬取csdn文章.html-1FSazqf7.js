import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as e,o,c,a as n,d as a,b as i,e as s}from"./app-DnhHvPL4.js";const l={},u=s(`<blockquote><p>前几篇文章介绍了scrapy相关的知识. 这篇文章来介绍一个我自己写的爬虫demo. 通过关键词查询爬取相关的csdn文章.</p></blockquote><h2 id="项目介绍" tabindex="-1"><a class="header-anchor" href="#项目介绍" aria-hidden="true">#</a> 项目介绍</h2><h3 id="爬虫类csdnarticlerelatedspider" tabindex="-1"><a class="header-anchor" href="#爬虫类csdnarticlerelatedspider" aria-hidden="true">#</a> 爬虫类CsdnArticleRelatedSpider</h3><p><code>CsdnArticleRelatedSpider</code>继承<code>CrawlSpider</code>, 通过定义规则<code>rules</code>属性从页面提取链接.<br> 这里我们定义了从获取文章详情页的链接提取规则:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>rules <span class="token operator">=</span> <span class="token punctuation">(</span>
    Rule<span class="token punctuation">(</span>LinkExtractor<span class="token punctuation">(</span><span class="token string">&#39;.*/article/details/.*&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> callback<span class="token operator">=</span><span class="token string">&#39;parse_item&#39;</span><span class="token punctuation">,</span> follow<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>文章详情页的字段提取方法可以通过<code>callback</code>属性进行指定, 字段的提取使用xpath实现:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">parse_item</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">:</span>
    logger<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">&#39;[CsdnArticleSpider details] start to deal [{}]&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">)</span>
    item_loader <span class="token operator">=</span> ItemLoader<span class="token punctuation">(</span>item<span class="token operator">=</span>CsdnArticleItem<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> response<span class="token operator">=</span>response<span class="token punctuation">)</span>
    item_loader<span class="token punctuation">.</span>add_value<span class="token punctuation">(</span><span class="token string">&#39;url&#39;</span><span class="token punctuation">,</span> response<span class="token punctuation">.</span>url<span class="token punctuation">)</span>
    item_loader<span class="token punctuation">.</span>add_xpath<span class="token punctuation">(</span><span class="token string">&#39;title&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;//*[@id=&quot;articleContentId&quot;]/text()&#39;</span><span class="token punctuation">)</span>
    item_loader<span class="token punctuation">.</span>add_xpath<span class="token punctuation">(</span><span class="token string">&#39;author&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;//div[@class=&quot;bar-content&quot;]/a[@class=&quot;follow-nickName &quot;]/text()&#39;</span><span class="token punctuation">)</span>
    item_loader<span class="token punctuation">.</span>add_xpath<span class="token punctuation">(</span><span class="token string">&#39;post_time&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;//div[@class=&quot;bar-content&quot;]/span[@class=&quot;time&quot;]/text()&#39;</span><span class="token punctuation">)</span>

    item_loader<span class="token punctuation">.</span>add_xpath<span class="token punctuation">(</span><span class="token string">&#39;type_label&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;//div[@class=&quot;tags-box artic-tag-box&quot;]&#39;</span>
                                        <span class="token string">&#39;/a[contains(@href, &quot;category&quot;)]/text()&#39;</span><span class="token punctuation">)</span>
    item_loader<span class="token punctuation">.</span>add_xpath<span class="token punctuation">(</span><span class="token string">&#39;type_label_url&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;//div[@class=&quot;tags-box artic-tag-box&quot;]&#39;</span>
                                            <span class="token string">&#39;/a[contains(@href, &quot;category&quot;)]/@href&#39;</span><span class="token punctuation">)</span>
    item_loader<span class="token punctuation">.</span>add_xpath<span class="token punctuation">(</span><span class="token string">&#39;article_label&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;//div[@class=&quot;tags-box artic-tag-box&quot;]&#39;</span>
                                            <span class="token string">&#39;/a[contains(@href, &quot;tags&quot;)]/text()&#39;</span><span class="token punctuation">)</span>
    item_loader<span class="token punctuation">.</span>add_xpath<span class="token punctuation">(</span><span class="token string">&#39;article_label_url&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;//div[@class=&quot;tags-box artic-tag-box&quot;]&#39;</span>
                                                <span class="token string">&#39;/a[contains(@href, &quot;tags&quot;)]/@href&#39;</span><span class="token punctuation">)</span>

    item_loader<span class="token punctuation">.</span>add_xpath<span class="token punctuation">(</span><span class="token string">&#39;view_cnt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;//span[@class=&quot;read-count&quot;]/text()&#39;</span><span class="token punctuation">)</span>
    item_loader<span class="token punctuation">.</span>add_xpath<span class="token punctuation">(</span><span class="token string">&#39;like_cnt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;//span[@id=&quot;spanCount&quot;]/text()&#39;</span><span class="token punctuation">)</span>
    item_loader<span class="token punctuation">.</span>add_xpath<span class="token punctuation">(</span><span class="token string">&#39;collect_cnt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;//span[@id=&quot;get-collection&quot;]/text()&#39;</span><span class="token punctuation">)</span>
    item_loader<span class="token punctuation">.</span>add_xpath<span class="token punctuation">(</span><span class="token string">&#39;comment_cnt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;//a[@href=&quot;#commentBox&quot;]/span[@class=&quot;count&quot;]/text()&#39;</span><span class="token punctuation">)</span>
    item_loader<span class="token punctuation">.</span>add_xpath<span class="token punctuation">(</span><span class="token string">&#39;content_html&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;//div[@id=&quot;content_views&quot;]&#39;</span><span class="token punctuation">)</span>
    item <span class="token operator">=</span> item_loader<span class="token punctuation">.</span>load_item<span class="token punctuation">(</span><span class="token punctuation">)</span>
    set_default<span class="token punctuation">(</span>item<span class="token punctuation">,</span> <span class="token string">&quot;type_label&quot;</span><span class="token punctuation">)</span>
    set_default<span class="token punctuation">(</span>item<span class="token punctuation">,</span> <span class="token string">&quot;article_label&quot;</span><span class="token punctuation">)</span>
    set_default<span class="token punctuation">(</span>item<span class="token punctuation">,</span> <span class="token string">&quot;author&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> item

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="文章信息类csdnarticleitem" tabindex="-1"><a class="header-anchor" href="#文章信息类csdnarticleitem" aria-hidden="true">#</a> 文章信息类CsdnArticleItem</h3><p><code>CsdnArticleItem</code>类是我们封装的文章信息类.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>
<span class="token keyword">class</span> <span class="token class-name">CsdnArticleItem</span><span class="token punctuation">(</span>scrapy<span class="token punctuation">.</span>Item<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    csdn文章
    &quot;&quot;&quot;</span>
    title <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span>output_processor<span class="token operator">=</span>TakeFirst<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    author <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span>output_processor<span class="token operator">=</span>TakeFirst<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    post_time <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span>output_processor<span class="token operator">=</span>TakeFirst<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    type_label <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span>input_processor<span class="token operator">=</span>MapCompose<span class="token punctuation">(</span>remove_blank<span class="token punctuation">)</span><span class="token punctuation">,</span>
                              output_processor<span class="token operator">=</span>Join<span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    type_label_url <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span>output_processor<span class="token operator">=</span>Join<span class="token punctuation">(</span><span class="token string">&quot;,\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    article_label <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span>input_processor<span class="token operator">=</span>MapCompose<span class="token punctuation">(</span>remove_blank<span class="token punctuation">)</span><span class="token punctuation">,</span>
                                 output_processor<span class="token operator">=</span>Join<span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    article_label_url <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span>output_processor<span class="token operator">=</span>Join<span class="token punctuation">(</span><span class="token string">&quot;,\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    view_cnt <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span>input_processor<span class="token operator">=</span>MapCompose<span class="token punctuation">(</span>remove_blank<span class="token punctuation">,</span> set_zero<span class="token punctuation">)</span><span class="token punctuation">,</span>
                            output_processor<span class="token operator">=</span>TakeFirst<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    like_cnt <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span>input_processor<span class="token operator">=</span>MapCompose<span class="token punctuation">(</span>remove_blank<span class="token punctuation">,</span> set_zero<span class="token punctuation">)</span><span class="token punctuation">,</span>
                            output_processor<span class="token operator">=</span>TakeFirst<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    collect_cnt <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span>input_processor<span class="token operator">=</span>MapCompose<span class="token punctuation">(</span>remove_blank<span class="token punctuation">,</span> set_zero<span class="token punctuation">)</span><span class="token punctuation">,</span>
                               output_processor<span class="token operator">=</span>TakeFirst<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    comment_cnt <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span>input_processor<span class="token operator">=</span>MapCompose<span class="token punctuation">(</span>remove_blank<span class="token punctuation">,</span> set_zero<span class="token punctuation">)</span><span class="token punctuation">,</span>
                               output_processor<span class="token operator">=</span>TakeFirst<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    url <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span>input_processor<span class="token operator">=</span>MapCompose<span class="token punctuation">(</span>remove_blank<span class="token punctuation">)</span><span class="token punctuation">,</span>
                       output_processor<span class="token operator">=</span>TakeFirst<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    file_path <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span>input_processor<span class="token operator">=</span>MapCompose<span class="token punctuation">(</span>remove_blank<span class="token punctuation">)</span><span class="token punctuation">)</span>
    content_html <span class="token operator">=</span> scrapy<span class="token punctuation">.</span>Field<span class="token punctuation">(</span>input_processor<span class="token operator">=</span>MapCompose<span class="token punctuation">(</span>remove_blank<span class="token punctuation">)</span><span class="token punctuation">,</span>
                                output_processor<span class="token operator">=</span>TakeFirst<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>input_processor</code>和<code>output_processor</code>方法是对字段进行前置和后置处理的属性.</p><p>之后通过爬虫类中的<code>ItemLoader</code>的<code>load_item</code>方法可以创建<code>CsdnArticleItem</code>的实例.</p><p>但是这里有一个问题, 如果爬虫类通过xpath无法获取到字段值, 那么这个字段是不存在的.<br> 因此在上一节中<code>load_item</code>方法调用之后, 我们又通过<code>set_default</code>方法指定默认的参数.</p><p>其方法定义为:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">set_default</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> item<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
            item<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;unknown&quot;</span>
    <span class="token keyword">except</span> KeyError<span class="token punctuation">:</span>
        item<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;unknown&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="管道的使用" tabindex="-1"><a class="header-anchor" href="#管道的使用" aria-hidden="true">#</a> 管道的使用</h3><p>上面的item创建之后会传递到管道中去. 按照settings.py文件中指定的顺序对item进行处理. 这里我们使用了三个管道.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>ITEM_PIPELINES <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;article.pipelines.PrePipeline.DuplicatePipeline&#39;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token string">&#39;article.pipelines.PostExportPipeline.MarkdownPipeline&#39;</span><span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
    <span class="token string">&#39;article.pipelines.PostExportPipeline.CsvPipeline&#39;</span><span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="duplicatepipeline" tabindex="-1"><a class="header-anchor" href="#duplicatepipeline" aria-hidden="true">#</a> DuplicatePipeline</h4><p>该管道用于去重. 如果之前已经爬取过当前文章则不会继续往下面的管道继续传输.</p><p>该类的实现见下:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>
<span class="token keyword">class</span> <span class="token class-name">DuplicatePipeline</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    去重 读取之前导出记录的url放到集合中, 每次获取到新的链接之后判断是否存在
    如果之前存在则不进行处理
    &quot;&quot;&quot;</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>urls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        csv_path <span class="token operator">=</span> config<span class="token punctuation">[</span><span class="token string">&quot;record_path&quot;</span><span class="token punctuation">]</span>
        <span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>csv_path<span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">try</span><span class="token punctuation">:</span>
                data <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span>csv_path<span class="token punctuation">)</span>
                logger<span class="token punctuation">.</span>debug<span class="token punctuation">(</span><span class="token string">&#39;获取到的数据为: {}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>
                self<span class="token punctuation">.</span>urls <span class="token operator">=</span> data<span class="token punctuation">[</span><span class="token string">&#39;url&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>drop_duplicates<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>values<span class="token punctuation">.</span>tolist<span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">except</span> EmptyDataError<span class="token punctuation">:</span>
                logger<span class="token punctuation">.</span>debug<span class="token punctuation">(</span><span class="token string">&#39;文件内容为空&#39;</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">process_item</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> item<span class="token punctuation">,</span> spider<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> item<span class="token punctuation">[</span><span class="token string">&#39;url&#39;</span><span class="token punctuation">]</span> <span class="token keyword">in</span> self<span class="token punctuation">.</span>urls<span class="token punctuation">:</span>
            <span class="token keyword">raise</span> DropItem<span class="token punctuation">(</span><span class="token string">&quot;Duplicate item found: title: [%s] url: [%s]&quot;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token string">&quot;title&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> item<span class="token punctuation">[</span><span class="token string">&quot;url&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>urls<span class="token punctuation">.</span>append<span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token string">&#39;url&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> item

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>初始化方法中, 加载历史的url. 这些url记录在<code>record_path</code>所指定的文件中.</p><p><code>process_item</code>方法是进行去重实现的. 如果url已经存在直接抛出<code>DropItem</code>异常即可.<br> 如果不存在我们将url加入到<code>urls</code>集合中去.</p><h4 id="markdownpipeline" tabindex="-1"><a class="header-anchor" href="#markdownpipeline" aria-hidden="true">#</a> MarkdownPipeline</h4><blockquote><p>该管道用于将markdown文件进行导出</p></blockquote><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">MarkdownPipeline</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">pass</span>

    <span class="token keyword">def</span> <span class="token function">process_item</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> item<span class="token punctuation">,</span> spider<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>save_markdown<span class="token punctuation">(</span>item<span class="token punctuation">)</span>
        <span class="token keyword">return</span> item

    <span class="token keyword">def</span> <span class="token function">save_markdown</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> item<span class="token punctuation">)</span><span class="token punctuation">:</span>
      <span class="token triple-quoted-string string">&quot;&quot;&quot;
      保存文章内容为md格式
      &quot;&quot;&quot;</span>
      title <span class="token operator">=</span> item<span class="token punctuation">[</span><span class="token string">&#39;title&#39;</span><span class="token punctuation">]</span>
      author <span class="token operator">=</span> item<span class="token punctuation">[</span><span class="token string">&#39;author&#39;</span><span class="token punctuation">]</span>
      label <span class="token operator">=</span> item<span class="token punctuation">[</span><span class="token string">&#39;article_label&#39;</span><span class="token punctuation">]</span>
      <span class="token comment"># 需要对字符串进行格式化处理</span>
      author <span class="token operator">=</span> remove_strange_char<span class="token punctuation">(</span>author<span class="token punctuation">)</span>
      title <span class="token operator">=</span> remove_strange_char<span class="token punctuation">(</span>title<span class="token punctuation">)</span>
      label <span class="token operator">=</span> remove_strange_char<span class="token punctuation">(</span>label<span class="token punctuation">)</span><span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span>

      <span class="token comment"># 按照文章分类/作者层级创建目录并保存</span>
      dir_article <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>config<span class="token punctuation">[</span><span class="token string">&#39;target_path&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> label<span class="token punctuation">,</span> author<span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>dir_article<span class="token punctuation">)</span><span class="token punctuation">:</span>
          os<span class="token punctuation">.</span>makedirs<span class="token punctuation">(</span>dir_article<span class="token punctuation">)</span>

      file_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>config<span class="token punctuation">[</span><span class="token string">&#39;target_path&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> label<span class="token punctuation">,</span> author<span class="token punctuation">,</span> title <span class="token operator">+</span> <span class="token string">&#39;.md&#39;</span><span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>file_path<span class="token punctuation">)</span><span class="token punctuation">:</span>
          item<span class="token punctuation">[</span><span class="token string">&#39;file_path&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> file_path
          content_html <span class="token operator">=</span> item<span class="token punctuation">[</span><span class="token string">&#39;content_html&#39;</span><span class="token punctuation">]</span>
          <span class="token keyword">if</span> content_html<span class="token punctuation">:</span>
              content_md <span class="token operator">=</span> ht<span class="token punctuation">.</span>HTML2Text<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>handle<span class="token punctuation">(</span>content_html<span class="token punctuation">)</span>
              <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>file_path<span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;UTF-8&#39;</span><span class="token punctuation">,</span> mode<span class="token operator">=</span><span class="token string">&#39;w+&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> md_file<span class="token punctuation">:</span>
                  md_file<span class="token punctuation">.</span>write<span class="token punctuation">(</span>content_md<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>将html转换为md格式我们使用了html2text第三方依赖. 这里可以定制化自己的输出路径.</p><h4 id="csvpipeline" tabindex="-1"><a class="header-anchor" href="#csvpipeline" aria-hidden="true">#</a> CsvPipeline</h4><p>该管道用于记录爬取历史. 这里我们使用<code>CsdnArticleItemExporter</code>进行cvs的导出. 该类继承自<code>CsvItemExporter</code>, 我们只需要在初始化方法中提供一些属性值即可, 最后调用父类的初始化方法.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">CsvPipeline</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    将item存为xlsx
    &quot;&quot;&quot;</span>

    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>files <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
        self<span class="token punctuation">.</span>exporter <span class="token operator">=</span> <span class="token boolean">None</span>

    <span class="token keyword">def</span> <span class="token function">open_spider</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> spider<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">file</span> <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span>config<span class="token punctuation">[</span><span class="token string">&#39;record_path&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;w+b&#39;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>files<span class="token punctuation">[</span>spider<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">file</span>
        self<span class="token punctuation">.</span>exporter <span class="token operator">=</span> CsdnArticleItemExporter<span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>exporter<span class="token punctuation">.</span>start_exporting<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">close_spider</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> spider<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>exporter<span class="token punctuation">.</span>finish_exporting<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token builtin">file</span> <span class="token operator">=</span> self<span class="token punctuation">.</span>files<span class="token punctuation">.</span>pop<span class="token punctuation">(</span>spider<span class="token punctuation">)</span>
        <span class="token builtin">file</span><span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">process_item</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> item<span class="token punctuation">,</span> spider<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> item<span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>exporter<span class="token punctuation">.</span>export_item<span class="token punctuation">(</span>item<span class="token punctuation">)</span>
            <span class="token keyword">return</span> item

<span class="token keyword">class</span> <span class="token class-name">CsdnArticleItemExporter</span><span class="token punctuation">(</span>CsvItemExporter<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    文章记录的导出格式设置, 按照FIELDS_TO_EXPORT中指定的顺序导出各个字段
    &quot;&quot;&quot;</span>

    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>
        delimiter <span class="token operator">=</span> config<span class="token punctuation">[</span><span class="token string">&#39;csv_delimiter&#39;</span><span class="token punctuation">]</span>
        kwargs<span class="token punctuation">[</span><span class="token string">&#39;delimiter&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> delimiter

        fields_to_export <span class="token operator">=</span> config<span class="token punctuation">[</span><span class="token string">&#39;fields_to_export&#39;</span><span class="token punctuation">]</span>
        <span class="token keyword">if</span> fields_to_export<span class="token punctuation">:</span>
            kwargs<span class="token punctuation">[</span><span class="token string">&#39;fields_to_export&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> fields_to_export

        <span class="token builtin">super</span><span class="token punctuation">(</span>CsdnArticleItemExporter<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="如何配置" tabindex="-1"><a class="header-anchor" href="#如何配置" aria-hidden="true">#</a> 如何配置</h2><p>这里需要提及3个配置文件.</p>`,33),r=s(`<li><p>scrapy.cfg 这个是scrapy框架的配置文件, 这里我们指定了settings文件名. 因此settings.py文件中的属性都会加载到settings属性中去.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>  <span class="token punctuation">[</span>settings<span class="token punctuation">]</span>
  default <span class="token operator">=</span> article.csdn_article_settings
  <span class="token punctuation">;</span>default <span class="token operator">=</span> src.csdn_query_settings

  <span class="token punctuation">[</span>deploy<span class="token punctuation">]</span>
  project <span class="token operator">=</span> csdn_spider

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>`,1),d={href:"https://scrapy-chs.readthedocs.io/zh_CN/0.24/topics/settings.html",target:"_blank",rel:"noopener noreferrer"},k=s(`<li><p>config.json 这个文件是我们自定义的配置项, 用于独立于该框架进行配置. 在main类中我们对读取其中的配置, 将其加载到全局变量中去.</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;csdn_article&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;query_url&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://so.csdn.net/api/v3/search?q=&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;query&quot;</span><span class="token operator">:</span> <span class="token string">&quot;java 反射&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;start_urls&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;record_path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;D:\\\\data\\\\article\\\\record.csv&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;target_path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;D:\\\\data\\\\article\\\\&quot;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>比如这里我们配置了初始化时的url, 已经文件的导出路径.</p></li>`,1),v=s('<h2 id="如何运行" tabindex="-1"><a class="header-anchor" href="#如何运行" aria-hidden="true">#</a> 如何运行</h2><p>直接运行<code>main.py</code>, 注意需要添加<code>--config=D:\\XXXXX\\config.json</code>该文件即你的json配置文件路径.</p><p>csv中的爬取记录:</p><p><img src="https://raw.githubusercontent.com/NikolaZhang/image-blog/main/爬取csdn文章/20240123133338.png" alt="20240123133338"></p><p>爬取的文件:</p><p><img src="https://raw.githubusercontent.com/NikolaZhang/image-blog/main/爬取csdn文章/20240123133405.png" alt="20240123133405"></p><p>爬取文件路径:</p><p><img src="https://raw.githubusercontent.com/NikolaZhang/image-blog/main/爬取csdn文章/20240123133416.png" alt="20240123133416"></p>',8);function m(b,_){const t=e("ExternalLinkIcon");return o(),c("div",null,[u,n("ul",null,[r,n("li",null,[n("p",null,[a("csdn_article_settings.py 该文件用于设置爬虫运行所需要的环境配置. 所有的配置项可以参考"),n("a",d,[a("settings配置"),i(t)])])]),k]),v])}const q=p(l,[["render",m],["__file","爬取csdn文章.html.vue"]]);export{q as default};
