import{_ as a}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as t,c as p,d as e,e as n,r as o}from"./app.e7c9cb9e.js";const c={},l=n(`<blockquote><p>\u6709\u5173\u4E8E\u7EBF\u7A0B\u6C60\u7684\u6E90\u7801\u5206\u6790</p></blockquote><h2 id="\u7EBF\u7A0B\u6C60\u72B6\u6001" tabindex="-1"><a class="header-anchor" href="#\u7EBF\u7A0B\u6C60\u72B6\u6001" aria-hidden="true">#</a> \u7EBF\u7A0B\u6C60\u72B6\u6001</h2><p>\u7EBF\u7A0B\u6C60\u6709\u4EE5\u4E0B\u72B6\u6001<code>RUNNING</code>\u3001<code>SHUTDOWN</code>\u3001<code>STOP</code>\u3001<code>TIDYING</code>\u3001<code>TERMINATED</code>\uFF0C\u5176\u5B9A\u4E49\u5982\u4E0B\u3002\u4F46\u5728\u5B9E\u9645\u4F7F\u7528\u4E2D\uFF0C\u7531\u4E8E\u7EBF\u7A0B\u72B6\u6001\u4F1A\u56E0\u4E3A\u6C60\u4E2D\u7EBF\u7A0B\u6570\u7684\u5F71\u54CD\u53D1\u751F\u6539\u53D8\u3002\u4E3A\u4E86\u539F\u5B50\u6027\u63A7\u5236\u8FD9\u4E24\u4E2A\u53D8\u91CF\uFF0C\u56E0\u6B64\u4F7F\u7528<code>AtomicInteger</code>\u5B9A\u4E49<code>ctl</code>\uFF0C\u8BE5\u5BF9\u8C61\u662F\u7EBF\u7A0B\u6C60\u72B6\u6001\u4E0E\u5F53\u524D\u7EBF\u7A0B\u6570\u6216\u8FD0\u7B97\u7684\u7ED3\u679C\uFF0C\u5E76\u901A\u8FC7<code>ctlOf(RUNNING, 0)</code>\u8FDB\u884C\u521D\u59CB\u5316\u3002\u7EBF\u7A0B\u6C60\u4E5F\u63D0\u4F9B\u4E86\u4E00\u4E9B\u7528\u4E8E\u64CD\u4F5C<code>ctl</code>\u7684\u65B9\u6CD5\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">COUNT_BITS</span> <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token constant">SIZE</span> <span class="token operator">-</span> <span class="token number">3</span><span class="token punctuation">;</span>
<span class="token comment">// 1fffffff \u8FD9\u4E2A\u5BB9\u91CF\u5B9E\u9645\u662F\u7EBF\u7A0B\u7684\u6700\u5927\u6570\u3002\u8BE5\u503C\u7684\u6709\u4E00\u4E2A\u5999\u7528\u662F\u9AD8\u4F4D\u4E3Actl\u4E2D\u7EBF\u7A0B\u72B6\u6001\u548C\u5DE5\u4F5C\u6570\u7684\u5206\u754C\u7EBF\u3002</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">CAPACITY</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token constant">COUNT_BITS</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>

<span class="token comment">// -1 \u4E3A32bit\u3002\u5DE6\u79FB29\u4F4D\u7ED3\u679C\u4E3A\uFF1A0xe0000000</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">RUNNING</span>    <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token constant">COUNT_BITS</span><span class="token punctuation">;</span>
<span class="token comment">// \u503C\u4E3A0</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">SHUTDOWN</span>   <span class="token operator">=</span>  <span class="token number">0</span> <span class="token operator">&lt;&lt;</span> <span class="token constant">COUNT_BITS</span><span class="token punctuation">;</span>
<span class="token comment">// \u503C\u4E3A0x20000000</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">STOP</span>       <span class="token operator">=</span>  <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token constant">COUNT_BITS</span><span class="token punctuation">;</span>
<span class="token comment">// \u503C\u4E3A0x40000000</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">TIDYING</span>    <span class="token operator">=</span>  <span class="token number">2</span> <span class="token operator">&lt;&lt;</span> <span class="token constant">COUNT_BITS</span><span class="token punctuation">;</span>
<span class="token comment">// \u503C\u4E3A0x60000000</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">TERMINATED</span> <span class="token operator">=</span>  <span class="token number">3</span> <span class="token operator">&lt;&lt;</span> <span class="token constant">COUNT_BITS</span><span class="token punctuation">;</span>


<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">runStateOf</span><span class="token punctuation">(</span><span class="token keyword">int</span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ctl\u4E0E~CAPACITY\uFF0C\u76F8\u5F53\u4E8E\u622A\u53D6\u9AD8\u4E09\u4F4D</span>
    <span class="token keyword">return</span> c <span class="token operator">&amp;</span> <span class="token operator">~</span><span class="token constant">CAPACITY</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">workerCountOf</span><span class="token punctuation">(</span><span class="token keyword">int</span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ctl\u4E0ECAPACITY\uFF0C\u76F8\u5F53\u4E8E\u622A\u53D6\u4F4E29\u4F4D</span>
    <span class="token keyword">return</span> c <span class="token operator">&amp;</span> <span class="token constant">CAPACITY</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">ctlOf</span><span class="token punctuation">(</span><span class="token keyword">int</span> rs<span class="token punctuation">,</span> <span class="token keyword">int</span> wc<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// rs\u7EBF\u7A0B\u6C60\u72B6\u6001\u4E3A\u9AD83\u4F4D\u8868\u793A\uFF0Cwc\u5DE5\u4F5C\u6570\u4E3A\u4F4E29\u4F4D</span>
    <span class="token keyword">return</span> rs <span class="token operator">|</span> wc<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">runStateLessThan</span><span class="token punctuation">(</span><span class="token keyword">int</span> c<span class="token punctuation">,</span> <span class="token keyword">int</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> c <span class="token operator">&lt;</span> s<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">runStateAtLeast</span><span class="token punctuation">(</span><span class="token keyword">int</span> c<span class="token punctuation">,</span> <span class="token keyword">int</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> c <span class="token operator">&gt;=</span> s<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">isRunning</span><span class="token punctuation">(</span><span class="token keyword">int</span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> c <span class="token operator">&lt;</span> <span class="token constant">SHUTDOWN</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// cas\u5DE5\u4F5C\u6570\u81EA\u589E1</span>
<span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">compareAndIncrementWorkerCount</span><span class="token punctuation">(</span><span class="token keyword">int</span> expect<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> ctl<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span>expect<span class="token punctuation">,</span> expect <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// cas\u5DE5\u4F5C\u6570\u81EA\u51CF1</span>
<span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">compareAndDecrementWorkerCount</span><span class="token punctuation">(</span><span class="token keyword">int</span> expect<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> ctl<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span>expect<span class="token punctuation">,</span> expect <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u4E0D\u65AD\u91CD\u8BD5\u76F4\u5230\u5DE5\u4F5C\u6570\u51CF1\u6210\u529F</span>
<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">decrementWorkerCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">do</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">compareAndDecrementWorkerCount</span><span class="token punctuation">(</span>ctl<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>ThreadPoolExecutor</code>\u63D0\u4F9B\u4E86<code>runStateOf</code>\u65B9\u6CD5\u7528\u4E8E\u4ECE<code>ctl</code>\u4E2D\u83B7\u53D6\u7EBF\u7A0B\u6C60\u72B6\u6001\uFF1B</li><li><code>workerCountOf</code>\u7528\u4E8E\u83B7\u53D6Worker\u5BF9\u8C61\u6570\uFF1B</li><li><code>ctlOf</code>\u65B9\u6CD5\u7528\u4E8E<code>ctl</code>\u7684\u8BBE\u7F6E\u3002</li><li><code>runStateLessThan</code>\u5224\u65AD\u7EBF\u7A0B\u6C60\u5F53\u524D\u72B6\u6001\u5728\u67D0\u4E2A\u72B6\u6001\u4E4B\u524D\uFF1B</li><li><code>runStateAtLeast</code>\u5224\u65AD\u7EBF\u7A0B\u6C60\u5F53\u524D\u72B6\u6001\u5728\u67D0\u4E2A\u72B6\u6001\u6216\u5728\u67D0\u4E2A\u72B6\u6001\u4E4B\u540E\uFF1B</li><li><code>isRunning</code>\u5224\u65AD\u7EBF\u7A0B\u6C60\u662F\u5426\u4E3A<code>RUNNING</code>\uFF1B</li><li><code>compareAndIncrementWorkerCount</code>\u3001<code>compareAndDecrementWorkerCount</code>\u3001<code>decrementWorkerCount</code>\u901A\u8FC7cas\u539F\u5B50\u6027\u6539\u53D8ctl\u7684\u503C\u3002\u5B9E\u8D28\u662F\u6539\u53D8<code>Worker</code>\u8BA1\u6570\u3002</li></ul><p>\u7EBF\u7A0B\u6C60\u72B6\u6001\u7684\u5207\u6362\u5982\u4E0B:</p>`,6),i=n(`<details class="custom-container details"><summary>\u6269\u5C55</summary><p>ctl\u7528\u4E8E\u8BB0\u5F55\u7EBF\u7A0B\u6C60\u72B6\u6001\u548C<code>Worker</code>\u5BF9\u8C61\u6570\u3002<code>Worker</code>\u5B9E\u73B0\u4E86<code>Runnable</code>\u63A5\u53E3\u540C\u65F6\u4E5F\u662F\u7EBF\u7A0B\u5BF9\u8C61\u548C<code>Runnable</code>\u4EFB\u52A1\u7684\u5C01\u88C5\u3002\u7EBF\u7A0B\u7684\u5BF9\u5411\u7684\u521B\u5EFA\u901A\u8FC7\u7EBF\u7A0B\u5DE5\u5382\u521B\u5EFA\u3002\u5E76\u5C06\u5F53\u524D\u5BF9\u8C61\u4F5C\u4E3A<code>Runnable</code>\u53C2\u6570\u3002\u56E0\u6B64\u5F53<code>Worker</code>\u5BF9\u8C61\u4E2D\u7684\u7EBF\u7A0B\u8C03\u7528<code>start</code>\u65B9\u6CD5\u7684\u65F6\u5019\uFF0C\u5B9E\u9645\u662F\u5148\u8C03\u7528\u7684<code>Worker</code>\u5BF9\u8C61\u4E2D\u7684run\u65B9\u6CD5\u3002\u7C7B\u4F3C\u9759\u6001\u4EE3\u7406\u7684\u6548\u679C\u3002</p></details><h2 id="\u7EBF\u7A0B\u6C60\u7684\u521D\u59CB\u5316" tabindex="-1"><a class="header-anchor" href="#\u7EBF\u7A0B\u6C60\u7684\u521D\u59CB\u5316" aria-hidden="true">#</a> \u7EBF\u7A0B\u6C60\u7684\u521D\u59CB\u5316</h2><p>\u7EBF\u7A0B\u6C60\u7684\u521D\u59CB\u5316\u6709\u5F88\u591A\u6784\u9020\u65B9\u6CD5\uFF0C\u6700\u5168\u7684\u53C2\u6570\u4E3A\uFF1A</p><ul><li><code>int corePoolSize</code>\uFF1A\u6838\u5FC3\u7EBF\u7A0B\u6570\u91CF</li><li><code>int maximumPoolSize</code>\uFF1A\u6700\u5927\u7EBF\u7A0B\u6570\u91CF\u3002\u6700\u5927\u503C\u6536\u5230<code>CAPACITY</code>\u9650\u5236</li><li><code>long keepAliveTime</code>\uFF1A\u4ECE\u961F\u5217\u4E2D\u83B7\u53D6\u4EFB\u52A1\u65F6\uFF0C\u653E\u5F03\u7B49\u5F85\u4EFB\u52A1\u53EF\u83B7\u53D6\u7684\u65F6\u95F4\u3002</li><li><code>TimeUnit unit</code>\uFF1AkeepAliveTime\u7684\u65F6\u95F4\u5355\u4F4D\u3002</li><li><code>BlockingQueue&lt;Runnable&gt; workQueue</code>\uFF1A\u963B\u585E\u961F\u5217\u3002</li><li><code>ThreadFactory threadFactory</code>\uFF1A\u7EBF\u7A0B\u5DE5\u5382\uFF0C\u7528\u4E8E\u521B\u5EFA\u7EBF\u7A0B\u5BF9\u8C61\u3002</li><li><code>RejectedExecutionHandler handler</code>\uFF1A\u4EFB\u52A1\u62D2\u7EDD\u7B56\u7565\u3002\u7EBF\u7A0B\u6C60\u6570\u91CF\u6700\u5927\u65F6\uFF0C\u9700\u8981\u6839\u636E\u7B56\u7565\u62D2\u7EDD\u63A5\u53D7\u65B0\u7684\u4EFB\u52A1\u3002\u9ED8\u8BA4\u4E3A<code>AbortPolicy</code>\uFF08\u901A\u8FC7\u629B\u51FA<code>RejectedExecutionException</code>\u5F02\u5E38\u6765\u62D2\u7EDD\u4EFB\u52A1\uFF09</li></ul><h2 id="execute" tabindex="-1"><a class="header-anchor" href="#execute" aria-hidden="true">#</a> execute</h2><p><code>execute</code>\u65B9\u6CD5\u7528\u4E8E\u7EBF\u7A0B\u6C60\u4E2D\u4EFB\u52A1\u7684\u6267\u884C\uFF0C\u4F1A\u6267\u884C\u5982\u4E0B\u6B65\u9AA4\uFF1A</p><ol><li>\u5224\u65AD\u5F53\u524D\u7EBF\u7A0B\u6570\u91CF\u662F\u5426\u8D85\u8FC7\u4E86\u6838\u5FC3\u7EBF\u7A0B\u6570\u3002<br> \u5982\u679C\u6CA1\u6709\u8D85\u8FC7\u6838\u5FC3\u7EBF\u7A0B\u6570\uFF0C\u6267\u884C<code>addWorker</code>\u521B\u5EFA\u5DE5\u4F5C\u8005\uFF08\u6838\u5FC3\u7EBF\u7A0B\uFF09\uFF0C\u5C06\u4EFB\u52A1\u6DFB\u52A0\u5230\u6838\u5FC3\u7EBF\u7A0B\u3002\u8FD9\u91CC\u4EFB\u52A1\u53EF\u80FD\u4F1A\u7ACB\u523B\u88AB\u6267\u884C</li><li>\u5982\u679C\u6838\u5FC3\u7EBF\u7A0B\u6570\u5DF2\u7ECF\u5206\u914D\u7ED3\u675F\u6216\u8005\u5728\u7B2C\u4E00\u6B65<code>addWorker</code>\u8FD4\u56DE\u5931\u8D25\uFF0C\u5219\u5224\u65AD\u7EBF\u7A0B\u6C60\u72B6\u6001\u662F\u5426\u6B63\u5728\u8FD0\u884C\u3002\u5982\u679C\u6B63\u5728\u8FD0\u884C\uFF0C\u5C06\u4EFB\u52A1\u6DFB\u52A0\u5230\u961F\u5217\u4E2D\u3002<br> \u5728\u8FD9\u4E2A\u6761\u4EF6\u5185\u90E8\u53C8\u8FDB\u884C\u4E86\u4E00\u6B21\u72B6\u6001\u5224\u65AD\u3002<br> \u5982\u679C\u4E0D\u5728\u8FD0\u884C\u72B6\u6001\uFF0C\u5219\u79FB\u9664\u4EFB\u52A1\uFF0C\u5E76\u6267\u884C\u62D2\u7EDD\u7B56\u7565\u3002<br> \u5982\u679C\u5DE5\u4F5C\u6570\u91CF\u4E3A0\uFF0C\u5219\u6267\u884C<code>addWorker</code>\u3002\u6D88\u8D39\u961F\u5217\u4E2D\u7684\u4EFB\u52A1\u3002</li><li>\u5982\u679C\u7EBF\u7A0B\u4E0D\u662F\u5728\u8FD0\u884C\u72B6\u6001\u6216\u8005\u65E0\u6CD5\u5411\u961F\u5217\u4E2D\u6DFB\u52A0\u4EFB\u52A1\u3002<br> \u5982\u679C\u5F53\u524D\u7684\u7EBF\u7A0B\u6570\u91CF\u672A\u8FBE\u5230\u6700\u5927\u7EBF\u7A0B\u6570\u9650\u5236\uFF0C\u5219\u901A\u8FC7<code>addWorker</code>\u65B9\u6CD5\u5C1D\u8BD5\u6267\u884C\u7EBF\u7A0B\u3002\u65B9\u6CD5\u8FD4\u56DE\u5931\u8D25\u5219\u6267\u884C\u62D2\u7EDD\u7B56\u7565\u3002</li></ol><p>\u8FD9\u91CC\u6211\u4EEC\u9700\u8981\u660E\u786E\u4E24\u4E2A\u6982\u5FF5\uFF1A\u5DE5\u4F5C\u8005Worker\u548C\u4EFB\u52A1Task\u3002\u5DE5\u4F5C\u8005\u51E0\u4E4E\u7B49\u540C\u4E8E\u7EBF\u7A0B\u6C60\u4E2D\u7684\u7EBF\u7A0B\u3002task\u6307\u7684\u662FRunnable\u7684\u5B9E\u73B0\u3002\u9700\u8981\u6CE8\u610F\u6700\u5927\u7EBF\u7A0B\u6570\u662F\u56FA\u5B9A\u7684\uFF0C\u7EBF\u7A0B\u7684\u5B9E\u4F8B\u4E0D\u4E00\u5B9A\u662F\u90A3\u51E0\u4E2A\u3002\u7EBF\u7A0B\u5B9E\u4F8B(\u5DE5\u4F5C\u8005)\u901A\u8FC7<code>HashSet&lt;Worker&gt; workers</code>\u5BB9\u5668\u8FDB\u884C\u7BA1\u7406\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">execute</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> command<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>command <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> c <span class="token operator">=</span> ctl<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">workerCountOf</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token operator">&lt;</span> corePoolSize<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">addWorker</span><span class="token punctuation">(</span>command<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token comment">// \u6267\u884C\u5B8C\u4E0A\u8FF0\u6B65\u9AA4\uFF0C\u72B6\u6001\u63A7\u5236\u503C\u53EF\u80FD\u53D1\u751F\u6539\u53D8\u3002\u8FD9\u91CC\u91CD\u65B0\u83B7\u53D6\u8D4B\u503C\u3002</span>
        c <span class="token operator">=</span> ctl<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isRunning</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> workQueue<span class="token punctuation">.</span><span class="token function">offer</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> recheck <span class="token operator">=</span> ctl<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u4E0D\u662F\u5728\u8FD0\u884C\u72B6\u6001\u5C31\u79FB\u9664\u4EFB\u52A1\uFF0C\u79FB\u9664\u6210\u529F\u6267\u884C\u62D2\u7EDD\u7B56\u7565\u3002</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> <span class="token function">isRunning</span><span class="token punctuation">(</span>recheck<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">remove</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token function">reject</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u5982\u679C\u662F\u5728\u8FD0\u884C\u72B6\u6001\u6216\u8005\u79FB\u9664\u5931\u8D25\uFF0C\u6267\u884C\u961F\u5217\u4E2D\u7684\u4EFB\u52A1</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">workerCountOf</span><span class="token punctuation">(</span>recheck<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
            <span class="token function">addWorker</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u4E0D\u662F\u5728\u8FD0\u884C\u72B6\u6001\u6216\u8005\u4EFB\u52A1\u961F\u5217\u65E0\u6CD5\u6DFB\u52A0\u4EFB\u52A1\uFF0C\u5219\u5C1D\u8BD5\u4F7F\u7528\`addWorker\`\u76F4\u63A5\u6267\u884C\u4EFB\u52A1\u3002</span>
    <span class="token comment">// \u5982\u679C\u6267\u884C\u5931\u8D25\u5219\u6267\u884C\u62D2\u7EDD\u7B56\u7565, \u6CE8\u610F\u6B64\u5904\u4E0D\u662F\u4F7F\u7528\u6838\u5FC3\u7EBF\u7A0B</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">addWorker</span><span class="token punctuation">(</span>command<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token function">reject</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="addworker" tabindex="-1"><a class="header-anchor" href="#addworker" aria-hidden="true">#</a> addWorker</h2><p>\u8FD9\u4E2A\u65B9\u6CD5\u6709\u70B9\u957F\uFF0C\u4F46\u662F\u53EF\u4EE5\u5206\u6210\u4E24\u90E8\u5206\u5206\u6790\u3002<code>retry</code>\u6240\u6807\u8BB0\u7684for\u5FAA\u73AF\u90E8\u5206\u548C\u521B\u5EFA<code>Worker</code>\u6267\u884C\u4EFB\u52A1\u90E8\u5206\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">addWorker</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> firstTask<span class="token punctuation">,</span> <span class="token keyword">boolean</span> core<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    retry<span class="token operator">:</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> c <span class="token operator">=</span> ctl<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> rs <span class="token operator">=</span> <span class="token function">runStateOf</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Check if queue empty only if necessary.</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>rs <span class="token operator">&gt;=</span> <span class="token constant">SHUTDOWN</span> <span class="token operator">&amp;&amp;</span>
            <span class="token operator">!</span> <span class="token punctuation">(</span>rs <span class="token operator">==</span> <span class="token constant">SHUTDOWN</span> <span class="token operator">&amp;&amp;</span>
               firstTask <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span>
               <span class="token operator">!</span> workQueue<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> wc <span class="token operator">=</span> <span class="token function">workerCountOf</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>wc <span class="token operator">&gt;=</span> <span class="token constant">CAPACITY</span> <span class="token operator">||</span>
                wc <span class="token operator">&gt;=</span> <span class="token punctuation">(</span>core <span class="token operator">?</span> corePoolSize <span class="token operator">:</span> maximumPoolSize<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">compareAndIncrementWorkerCount</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token keyword">break</span> retry<span class="token punctuation">;</span>
            c <span class="token operator">=</span> ctl<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// Re-read ctl</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">runStateOf</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token operator">!=</span> rs<span class="token punctuation">)</span>
                <span class="token keyword">continue</span> retry<span class="token punctuation">;</span>
            <span class="token comment">// else CAS failed due to workerCount change; retry inner loop</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">boolean</span> workerStarted <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">boolean</span> workerAdded <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token class-name">Worker</span> w <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        w <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Worker</span><span class="token punctuation">(</span>firstTask<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token class-name">Thread</span> t <span class="token operator">=</span> w<span class="token punctuation">.</span>thread<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>t <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">final</span> <span class="token class-name">ReentrantLock</span> mainLock <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>mainLock<span class="token punctuation">;</span>
            mainLock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token comment">// Recheck while holding lock.</span>
                <span class="token comment">// Back out on ThreadFactory failure or if</span>
                <span class="token comment">// shut down before lock acquired.</span>
                <span class="token keyword">int</span> rs <span class="token operator">=</span> <span class="token function">runStateOf</span><span class="token punctuation">(</span>ctl<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token keyword">if</span> <span class="token punctuation">(</span>rs <span class="token operator">&lt;</span> <span class="token constant">SHUTDOWN</span> <span class="token operator">||</span>
                    <span class="token punctuation">(</span>rs <span class="token operator">==</span> <span class="token constant">SHUTDOWN</span> <span class="token operator">&amp;&amp;</span> firstTask <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">isAlive</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// precheck that t is startable</span>
                        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalThreadStateException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    workers<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>w<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">int</span> s <span class="token operator">=</span> workers<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>s <span class="token operator">&gt;</span> largestPoolSize<span class="token punctuation">)</span>
                        largestPoolSize <span class="token operator">=</span> s<span class="token punctuation">;</span>
                    workerAdded <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                mainLock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>workerAdded<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                t<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                workerStarted <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> workerStarted<span class="token punctuation">)</span>
            <span class="token function">addWorkerFailed</span><span class="token punctuation">(</span>w<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> workerStarted<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728for\u5FAA\u73AF\u4E2D\u9996\u5148\u83B7\u53D6\u5F53\u524D\u7EBF\u7A0B\u6C60\u7684\u72B6\u6001\u3002\u6839\u636E\u72B6\u6001\u51B3\u5B9A\u662F\u5426\u8FDB\u884C\u5DE5\u4F5C\u8005\u521B\u5EFA\u6216\u4EFB\u52A1\u7684\u5904\u7406\u3002</p><p><code>rs &gt;= SHUTDOWN &amp;&amp; ! (rs == SHUTDOWN &amp;&amp; firstTask == null &amp;&amp; ! workQueue.isEmpty())</code>\u8BE5\u6761\u4EF6\u6BD4\u8F83\u7ED5\uFF0C \u4F46\u662F\u53EF\u4EE5\u8F6C\u6362\u4E3A<code>(rs &gt; SHUTDOWN) || (rs &gt;= SHUTDOWN &amp;&amp; firstTask != null) || (rs &gt;= SHUTDOWN &amp;&amp; workQueue.isEmpty())</code>\uFF0C \u6839\u636E\u77ED\u8DEF\u7279\u6027\u8FDB\u4E00\u6B65\u53EF\u4EE5\u7B80\u5316\u4E3A\uFF1A<code>(rs &gt; SHUTDOWN) || (rs == SHUTDOWN &amp;&amp; firstTask != null) || (rs == SHUTDOWN &amp;&amp; workQueue.isEmpty())</code>\u3002 \u8FD9\u6837\u4E00\u4E2A\u6BD4\u8F83\u590D\u6742\u7684\u6761\u4EF6\u5C31\u53D8\u6210\u4E863\u4E2A\u3002</p><p>\u56E0\u6B64\u53EF\u4EE5\u7406\u89E3\u4E3A\uFF1A</p><ol><li>\u5982\u679C\u7EBF\u7A0B\u6C60\u72B6\u6001\u4E3A<code>STOP</code>\u3001<code>TIDYING</code>\u3001<code>TERMINATED</code>\uFF0C\u5219\u65E0\u6CD5\u6267\u884C\u8BE5\u65B9\u6CD5\u3002</li><li>\u5982\u679C\u7EBF\u7A0B\u6C60\u72B6\u6001\u4E3A<code>SHUTDOWN</code>\uFF0C\u4E14\u65B0\u7684\u4EFB\u52A1\u5B58\u5728\uFF0C\u5219\u65E0\u6CD5\u6267\u884C\u8BE5\u65B9\u6CD5\u3002</li><li>\u5982\u679C\u7EBF\u7A0B\u6C60\u72B6\u6001\u4E3A<code>SHUTDOWN</code>\uFF0C\u5E76\u4E14\u65E0\u65B0\u4EFB\u52A1\uFF0C\u4E14\u961F\u5217\u5DF2\u7ECF\u4E3A\u7A7A\uFF0C\u5219\u65E0\u6CD5\u6267\u884C\u8BE5\u65B9\u6CD5\u3002\u5F88\u660E\u663E\u6CA1\u6709\u4EFB\u52A1\u4E86\uFF0C\u600E\u4E48\u4F1A\u7EE7\u7EED\u6267\u884C\u4E0B\u53BB\u3002</li></ol><p>\u56E0\u6B64\u5982\u679C\u7EBF\u7A0B\u6C60\u4E3A<code>RUNNING</code>\u72B6\u6001\u3001<code>SHUTDOWN</code>\u72B6\u6001\u4F46\u662F\u4EFB\u52A1\u961F\u5217\u975E\u7A7A\u3002\u90FD\u53EF\u4EE5\u8FDB\u884C\u5DE5\u4F5C\u8005\u7684\u521B\u5EFA\u6216\u4EFB\u52A1\u6267\u884C\u3002\uFF08\u4E5F\u8981\u8003\u8651\u5230\u7EBF\u7A0B\u6C60\u72B6\u6001\u53D1\u751F\u6539\u53D8\u7684\u60C5\u51B5\uFF09</p><details class="custom-container details"><summary>\u7EBF\u7A0B\u6C60\u5BB9\u91CF\u4E0A\u9650\u662F\u591A\u5C11</summary><p>\u5728\u5185\u90E8\u7684for\u5FAA\u73AF\u5224\u65AD<code>wc &gt;= CAPACITY || wc &gt;= (core ? corePoolSize : maximumPoolSize)</code>\uFF0C\u7EBF\u7A0B\u6570\u662F\u5426\u8D85\u51FA\u4E86\u6700\u5927\u4E0A\u9650\u3002\uFF08<code>CAPACITY</code>\u4E3A0x1fffffff\uFF09 \u5982\u679C\u662F\u5411\u6838\u5FC3\u7EBF\u7A0B\u4E2D\u6DFB\u52A0\uFF0C\u6700\u5927\u4E0A\u9650\u5C31\u662FcorePoolSize\u3002\u4E00\u822C\u800C\u8A00 <code>corePoolSize &lt; maximumPoolSize &lt; CAPACITY</code>\u3002 \u5373\u4F7F\u5C06<code>maximumPoolSize</code>\u8BBE\u7F6E\u4E3A<code>Integer.MAX_VALUE</code>\u4E5F\u662F\u4E0D\u8D77\u4F5C\u7528\u7684\u3002\u5BF9\u4E8E\u4E0D\u9650\u5236\u5BB9\u91CF\u7684\u7EBF\u7A0B\u6C60\uFF0C\u8BBE\u7F6E\u4E3A<code>Integer.MAX_VALUE</code>\u53EA\u662F\u65B9\u4FBF\u7406\u89E3\u3002</p></details><p>\u4E0B\u9762\u770B\u4E00\u4E0B\u5185\u90E8\u5FAA\u73AF\u4E2D\u7684\u903B\u8F91\uFF1A</p><ul><li>\u5982\u679C\u7EBF\u7A0B\u6570\u91CF\u8D85\u51FA\u4E86\u4E0A\u9650\uFF0C\u5219\u65B9\u6CD5\u8FD4\u56DE\u4E3Afalse\u3002</li><li>\u7EBF\u7A0B\u6570\u91CF\u6CA1\u6709\u8D85\u51FA\u4E0A\u9650\uFF0C\u901A\u8FC7cas\u7684\u65B9\u5F0F\u81EA\u589Ectl\u3002</li><li>\u5982\u679C\u81EA\u589E\u5931\u8D25\uFF0C\u91CD\u65B0\u83B7\u53D6\u7EBF\u7A0B\u6C60\u72B6\u6001\u5E76\u5224\u65AD\u72B6\u6001\u662F\u5426\u6539\u53D8\u3002\u5982\u679C\u72B6\u6001\u6539\u53D8\u5219\u4ECEretry\u6807\u5FD7\u5904\u91CD\u65B0\u6267\u884C\u3002\u7EBF\u7A0B\u6C60\u72B6\u6001\u6539\u53D8\u53EF\u80FD\u5BFC\u81F4\u4E4B\u524D\u7684\u6821\u9A8C\u4E0D\u518D\u6EE1\u8DB3\u3002</li><li>\u5982\u679C\u72B6\u6001\u6CA1\u6709\u6539\u53D8\u5219\u4E0D\u65AD\u6267\u884C\u5185\u90E8\u5FAA\u73AF\uFF0C\u76F4\u5230\u81EA\u589E\u6210\u529F\uFF0C\u6216\u8005\u7EBF\u7A0B\u6570\u91CF\u8FBE\u5230\u4E0A\u9650\u9000\u51FA\u3002</li></ul><p>\u56E0\u6B64\u5916\u90E8\u5FAA\u73AF\u7684\u5173\u952E\u5728\u4E8E\u83B7\u53D6\u7EBF\u7A0B\u6C60\u72B6\u6001\uFF0C\u770B\u5F53\u524D\u72B6\u6001\u662F\u5426\u7B26\u5408\u4EFB\u52A1\u6267\u884C\u7684\u6761\u4EF6\u3002\u5185\u90E8\u5FAA\u73AF\u7684\u91CD\u70B9\u5728\u4E8E\u5728\u524D\u8005\u7B26\u5408\u7684\u60C5\u51B5\u4E0B\uFF0C\u5C1D\u8BD5\u81EA\u589E\u4EFB\u52A1\u6570\uFF1B\u540C\u65F6\u68C0\u6D4B\u7EBF\u7A0B\u6C60\u72B6\u6001\u662F\u5426\u53D1\u751F\u6539\u53D8\uFF0C\u5982\u679C\u6539\u53D8\u5219\u4ECE\u5916\u5C42\u5FAA\u73AF\u91CD\u65B0\u8FDB\u5165\u3002</p><p>\u5F53ctl\u81EA\u589E\u6210\u529F\uFF0C\u90A3\u4E48\u5F00\u59CB\u521B\u5EFA\u5DE5\u4F5C\u8005\u8FDB\u884C\u4EFB\u52A1\u7684\u6267\u884C\u3002</p><ol><li>\u9996\u5148\u521B\u5EFA<code>Worker</code>\u5BF9\u8C61\uFF0C<code>Worker</code>\u5B9E\u73B0\u4E86<code>Runnable</code>\u63A5\u53E3\uFF0C\u540C\u65F6\u4E5F\u662F\u7EBF\u7A0B\u5BF9\u8C61\u548C<code>Runnable</code>\u4EFB\u52A1\u7684\u5C01\u88C5\u3002\u7EBF\u7A0B\u5BF9\u50CF\u901A\u8FC7\u7EBF\u7A0B\u5DE5\u5382<code>ThreadFactory</code>\u521B\u5EFA\uFF0C\u5DE5\u5382\u65B9\u6CD5\u5C06\u5F53\u524D<code>Worker</code>\u5BF9\u8C61\u4F5C\u4E3A\u53C2\u6570\u3002\u56E0\u6B64\u5F53<code>Worker</code>\u5BF9\u8C61\u4E2D\u7684\u7EBF\u7A0B\u8C03\u7528<code>start</code>\u65B9\u6CD5\u7684\u65F6\u5019\uFF0C\u5B9E\u9645\u662F\u5148\u8C03\u7528\u7684<code>Worker</code>\u5BF9\u8C61\u4E2D\u7684run\u65B9\u6CD5\u3002\u7C7B\u4F3C\u9759\u6001\u4EE3\u7406\u7684\u6548\u679C\u3002<code>Worker</code>\u5BF9\u8C61\u521B\u5EFA\u65F6\u4F20\u5165\u5F53\u524D\u4EFB\u52A1<code>firstTask</code>\u7528\u4E8E\u521D\u59CB\u5316\u3002\u6CE8\u610F<code>firstTask</code>\u662F\u6709\u53EF\u80FD\u4E3A\u7A7A\u7684\u3002</li><li>\u901A\u8FC7<code>ReetrantLock</code>\u52A0\u9501\uFF0C\u4FDD\u8BC1\u4E00\u4E2A\u65F6\u523B\u53EA\u6DFB\u52A0\u4E00\u4E2Awork\u5BF9\u8C61\u3002</li><li>\u5982\u679C\u5F53\u524D\u7684\u72B6\u6001\u4E3A<code>RUNNING</code>\u6216\u8005\u4E3A<code>SHUTDOWN</code>\u4F46\u6CA1\u6709\u65B0\u7684\u4EFB\u52A1\u3002\u90A3\u4E48\u5C06\u5F53\u524Dwork\u52A0\u5165\u5230<code>works</code>\u5BB9\u5668\u4E2D\u3002\uFF08<code>HashSet&lt;Worker&gt; workers = new HashSet&lt;&gt;()</code>\uFF09</li><li>\u5982\u679C<code>worker</code>\u5BF9\u8C61\u52A0\u5165\u5230\u5BB9\u5668\u4E2D\u6210\u529F\u3002\u5219\u5F00\u59CB\u7EBF\u7A0B\u7684\u6267\u884C\u3002</li><li>\u5982\u679C\u67D0\u4E9B\u539F\u56E0\u5BFC\u81F4\u6DFB\u52A0\u5931\u8D25\u3002\u6BD4\u5982\u7EBF\u7A0B\u4E0D\u53EF\u542F\u52A8\u3002\u6B64\u65F6\u6267\u884C<code>addWorkerFailed</code>\u65B9\u6CD5\uFF0C\u5728\u8BE5\u65B9\u6CD5\u4E2D\u9996\u5148\u5C06worker\u5BF9\u8C61\u4ECE\u5BB9\u5668\u4E2D\u79FB\u9664\u3002\u4E4B\u540E\u901A\u8FC7cas\u5DE5\u4F5C\u8BA1\u6570\u51CF1\u3002\u6700\u540E\uFF0C\u6267\u884C<code>tryTerminate</code>\uFF0C\u6821\u9A8C\u72B6\u6001\u5C1D\u8BD5\u7EC8\u6B62\u3002</li></ol><h2 id="\u7EBF\u7A0B\u6267\u884C" tabindex="-1"><a class="header-anchor" href="#\u7EBF\u7A0B\u6267\u884C" aria-hidden="true">#</a> \u7EBF\u7A0B\u6267\u884C</h2><p>\u4E0A\u9762\u4EE3\u7801\u4E2D<code>t.start()</code>\u5C31\u5F00\u59CB\u4E86\u7EBF\u7A0B\u7684\u6267\u884C\u3002run\u65B9\u6CD5\u4E2D\u8C03\u7528\u4E86<code>runWorker</code>\uFF0C\u4E0B\u9762\u5206\u6790\u4E0B\u5177\u4F53\u903B\u8F91\u3002</p><p>\u9996\u5148\u83B7\u53D6\u4EFB\u52A1task\uFF0C\u4EFB\u52A1\u7684\u6765\u6E90\u53EF\u80FD\u662Fworker\u5BF9\u8C61\u4E2D\u7EF4\u62A4\u7684\u5F53\u524D\u4EFB\u52A1\uFF0C\u4E5F\u6709\u53EF\u80FD\u662F<code>workQueue</code>\u4E2D\u7684\u4EFB\u52A1\u3002\uFF08\u4E00\u4E2A\u5DE5\u4F5C\u8005\u521B\u5EFA\u4E4B\u540E\uFF0C\u5B83\u5C31\u53EF\u4EE5\u6267\u884C\u5F53\u524D\u4EFB\u52A1\uFF0C\u5982\u679C\u6CA1\u6709\u5F53\u524D\u4EFB\u52A1\u6307\u5B9A\u4E86\uFF0C\u5B83\u81EA\u89C9\u5730\u4ECE\u4EFB\u52A1\u961F\u5217\u4E2D\u83B7\u53D6\u6267\u884C\uFF09 <code>beforeExecute</code> \u4E0E <code>afterExecute</code>\u662F\u7EBF\u7A0B\u6C60\u63D0\u4F9B\u7684\u9ED8\u8BA4\u65B9\u6CD5, \u4E0D\u540C\u7684\u7EBF\u7A0B\u6C60\u5B9E\u73B0\u53EF\u4EE5\u91CD\u5199\u8BE5\u65B9\u6CD5, \u4EE5\u5B9E\u73B0\u5728\u4EFB\u52A1\u6267\u884C\u524D\u540E\u6267\u884C\u67D0\u4E9B\u64CD\u4F5C\u3002 <code>task.run();</code>\u6267\u884C\u6211\u4EEC\u7684\u4EFB\u52A1\uFF0C\u5982\u679C\u4EFB\u52A1\u51FA\u73B0\u5F02\u5E38\uFF0C\u8FD9\u91CC\u662F\u76F4\u63A5throw\u51FA\u53BB\u7684\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">runWorker</span><span class="token punctuation">(</span><span class="token class-name">Worker</span> w<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Thread</span> wt <span class="token operator">=</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Runnable</span> task <span class="token operator">=</span> w<span class="token punctuation">.</span>firstTask<span class="token punctuation">;</span>
    w<span class="token punctuation">.</span>firstTask <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    w<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// allow interrupts</span>
    <span class="token keyword">boolean</span> completedAbruptly <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>task <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token punctuation">(</span>task <span class="token operator">=</span> <span class="token function">getTask</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            w<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// If pool is stopping, ensure thread is interrupted;</span>
            <span class="token comment">// if not, ensure thread is not interrupted.  This</span>
            <span class="token comment">// requires a recheck in second case to deal with</span>
            <span class="token comment">// shutdownNow race while clearing interrupt</span>
            <span class="token comment">// \u5982\u679C\u7EBF\u7A0B\u6C60\u505C\u6B62, \u7EBF\u7A0B\u6C60\u4E2D\u7684\u7EBF\u7A0B\u9700\u8981\u7F6E\u4E3A\u4E2D\u65AD\u72B6\u6001.</span>
            <span class="token comment">// \u5982\u679C\u7EBF\u7A0B\u6C60\u6CA1\u6709\u505C\u6B62, \u7EBF\u7A0B\u6C60\u4E2D\u7684\u7EBF\u7A0B\u4E0D\u5E94\u88AB\u4E2D\u65AD.</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">runStateAtLeast</span><span class="token punctuation">(</span>ctl<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant">STOP</span><span class="token punctuation">)</span> <span class="token operator">||</span>
                 <span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">interrupted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
                  <span class="token function">runStateAtLeast</span><span class="token punctuation">(</span>ctl<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant">STOP</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
                <span class="token operator">!</span>wt<span class="token punctuation">.</span><span class="token function">isInterrupted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                wt<span class="token punctuation">.</span><span class="token function">interrupt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token function">beforeExecute</span><span class="token punctuation">(</span>wt<span class="token punctuation">,</span> task<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">Throwable</span> thrown <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    task<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RuntimeException</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    thrown <span class="token operator">=</span> x<span class="token punctuation">;</span> <span class="token keyword">throw</span> x<span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Error</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    thrown <span class="token operator">=</span> x<span class="token punctuation">;</span> <span class="token keyword">throw</span> x<span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    thrown <span class="token operator">=</span> x<span class="token punctuation">;</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                    <span class="token function">afterExecute</span><span class="token punctuation">(</span>task<span class="token punctuation">,</span> thrown<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                task <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                w<span class="token punctuation">.</span>completedTasks<span class="token operator">++</span><span class="token punctuation">;</span>
                w<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        completedAbruptly <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        <span class="token function">processWorkerExit</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> completedAbruptly<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="processworkerexit" tabindex="-1"><a class="header-anchor" href="#processworkerexit" aria-hidden="true">#</a> processWorkerExit</h3><p>\u5F53\u524D\u4EFB\u52A1\u6267\u884C\u7ED3\u675F\u540E\u4F1A\u8C03\u7528<code>processWorkerExit</code>\uFF0C\u5982\u679C\u4F60\u8FD9\u6837\u7406\u89E3\u90A3\u5C31\u5927\u9519\u7279\u9519\u3002\u5176\u539F\u56E0\u5728\u4E8E<code>getTask</code>\u4E2D\u5982\u679C\u6CA1\u6709\u4EFB\u52A1\u53EF\u4EE5\u83B7\u53D6\uFF0C\u5DE5\u4F5C\u8005\u662F\u76F4\u63A5\u7B49\u5F85\u7684\uFF08\u4F7F\u7528ArrayBlockingQueue \u7B49\u5F85\u65F6\u957F\u6839\u636E\u6211\u4EEC\u7684\u53C2\u6570\u51B3\u5B9A\uFF09\u3002\u5F53\u6211\u4EEC\u8C03\u7528<code>shutdown</code>\u65B9\u6CD5\u65F6\uFF0C\u72B6\u6001\u6539\u53D8\uFF0Cwhile\u7684\u6761\u4EF6\u4E0D\u518D\u6EE1\u8DB3\u3002\u6B64\u65F6\u4F1A\u8C03\u7528<code>processWorkerExit</code>\uFF0C\u8FD9\u4E2A\u65B9\u6CD5\u6267\u884C\u4E86\uFF0C\u90A3\u4E48\u5F53\u524D\u7684\u5DE5\u4F5C\u8005\u4E5F\u5C31\u8981gg\u4E86\uFF0C\u53EF\u4E0D\u662F\u5F53\u524D\u4EFB\u52A1\u6267\u884C\u5B8C\u4E86\u5C31\u6267\u884C\uFF0C\u4E5F\u4E0D\u662F\u6CA1\u6709\u4EFB\u52A1\u5C31\u6267\u884C\u3002</p><p><img src="http://tech-nikola.nikolazhang.top/thread/\u83B7\u53D6\u4EFB\u52A1\u72B6\u6001\u7B49\u5F85.png" alt="\u961F\u5217\u83B7\u53D6\u4E0D\u5230\u4EFB\u52A1\u5BFC\u81F4\u7B49\u5F85" loading="lazy"></p><details class="custom-container details"><summary>completedAbruptly</summary><p>\u4EC0\u4E48\u53EB\u505A<code>completedAbruptly</code>\u554A\uFF0C\u4EE3\u7801\u6CE8\u91CA\u89E3\u91CA\u4E3A\u7531\u4E8E\u7528\u6237\u5F02\u5E38\u5BFC\u81F4\u4EFB\u52A1\u505C\u6B62\uFF0C\u4E3A\u5565\u5462\uFF1F<code>completedAbruptly</code>\u9ED8\u8BA4\u503C\u4E3Atrue\uFF0C\u5982\u679C\u6CA1\u6709\u4EFB\u52A1\u53EF\u4EE5\u6267\u884C\u90A3\u4E48\u4F1A\u8BBE\u7F6E\u4E3Afalse\uFF1B\u5982\u679C\u6709\u4EFB\u52A1\u6267\u884C\uFF0C\u4F46\u662F\u4EFB\u52A1\u51FA\u73B0\u5F02\u5E38\uFF0C\u7EBF\u7A0B\u6C60\u662F\u76F4\u63A5throw\u7684\uFF0C\u6B64\u65F6<code>completedAbruptly</code>\u503C\u4ECD\u65E7\u4E3Atrue\u3002</p></details><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">processWorkerExit</span><span class="token punctuation">(</span><span class="token class-name">Worker</span> w<span class="token punctuation">,</span> <span class="token keyword">boolean</span> completedAbruptly<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679C\u662F\u7531\u4E8E\u5F02\u5E38\u9000\u51FA\uFF0C\u7531\u4E8E\u4E4B\u524D\u7D2F\u8BA1\u4E86\u5DE5\u4F5C\u6570\uFF0C\u6B64\u65F6\u9700\u8981\u51CF\u5C11\u5DE5\u4F5C\u6570\u3002</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>completedAbruptly<span class="token punctuation">)</span> <span class="token comment">// If abrupt, then workerCount wasn&#39;t adjusted</span>
        <span class="token function">decrementWorkerCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">final</span> <span class="token class-name">ReentrantLock</span> mainLock <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>mainLock<span class="token punctuation">;</span>
    mainLock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u6CE8\u610F\u4E00\u4E2Aworker\u662F\u53EF\u4EE5\u590D\u7528\u7684\u3002\u4E5F\u5C31\u662F\u8BF4\u5B83\u53EF\u4EE5\u6267\u884C\u591A\u4E2A\u4EFB\u52A1\u3002</span>
        completedTaskCount <span class="token operator">+=</span> w<span class="token punctuation">.</span>completedTasks<span class="token punctuation">;</span>
        <span class="token comment">// \u4ECE\u5BB9\u5668\u4E2D\u79FB\u9664\u5F53\u524D\u5DE5\u4F5C\u8005</span>
        workers<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>w<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        mainLock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">tryTerminate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">int</span> c <span class="token operator">=</span> ctl<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">runStateLessThan</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> <span class="token constant">STOP</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5982\u679C\u7531\u4E8E\u5F02\u5E38\u9000\u51FA\uFF0C\u90A3\u4E48\u5C1D\u8BD5\u65B0\u589E\u5DE5\u4F5C\u8005\u6267\u884C\u4EFB\u52A1</span>
        <span class="token comment">// \u6B63\u5E38\u7ED3\u675F\uFF0C\u90A3\u4E48\u5224\u65AD\u4EFB\u52A1\u961F\u5217\u4E2D\u662F\u5426\u8FD8\u6709\u4EFB\u52A1\u6CA1\u6709\u6267\u884C\u3002\u5982\u679C\u6709\u5219\u81F3\u5C11\u4FDD\u7559min\u4E2A\u5DE5\u4F5C\u8005\uFF0C\u7528\u4E8E\u4EFB\u52A1\u7684\u6267\u884C\u3002</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>completedAbruptly<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5982\u679CallowCoreThreadTimeOut\u4E3Atrue\uFF0C\u7EBF\u7A0B\u6C60\u4E2D\u7684\u6838\u5FC3\u7EBF\u7A0B\u6E05\u9664\u6389\u540E\u4E0D\u4F1A\u518D\u521B\u5EFA\u65B0\u7684\u5DE5\u4F5C\u8005\u3002</span>
            <span class="token comment">// \u5982\u679C\u4E3Afalse\u5219\u6E05\u9664\u540E\u5224\u65AD\u5982\u679C\u7EBF\u7A0B\u6570\u4E3A\u6838\u5FC3\u7EBF\u7A0B\u6570\u5C31\u4E0D\u4F1A\u518D\u521B\u5EFA\u3002</span>
            <span class="token keyword">int</span> min <span class="token operator">=</span> allowCoreThreadTimeOut <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> corePoolSize<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>min <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span> workQueue<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                min <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">workerCountOf</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token operator">&gt;=</span> min<span class="token punctuation">)</span>
                <span class="token keyword">return</span><span class="token punctuation">;</span> <span class="token comment">// replacement not needed</span>
        <span class="token punctuation">}</span>
        <span class="token function">addWorker</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="gettask" tabindex="-1"><a class="header-anchor" href="#gettask" aria-hidden="true">#</a> getTask</h3><p><code>getTask</code>\u65B9\u6CD5\u7528\u4E8E\u4ECE\u4EFB\u52A1\u961F\u5217\u4E2D\u83B7\u53D6\u4EFB\u52A1\u3002\u8FD9\u4E2A\u529F\u80FD\u901A\u8FC7\u961F\u5217\u7684\u65B9\u6CD5\u5B9E\u73B0\uFF0C\u6B64\u5904\u4E0D\u8868\u3002 \u6211\u60F3\u8BF4\u4E00\u4E0B<code>timed</code>\u3001<code>timedOut</code>\u7684\u4F5C\u7528\u3002\u8FD9\u4E24\u4E2A\u53D8\u91CF\u8FD8\u63A7\u5236\u4E86\u5982\u679C\u4ECE\u961F\u5217\u4E2D\u65E0\u6CD5\u83B7\u53D6\u4EFB\u52A1\uFF0C\u7EBF\u7A0B\u6C60\u5C06\u81EA\u52A8\u6E05\u7406\u7EBF\u7A0B\u4EFB\u52A1\u6570\uFF0C\u76F4\u5230\u7EBF\u7A0B\u6570\u4E3A0\u6216\u8005\u6838\u5FC3\u7EBF\u7A0B\u6570\u3002</p><ul><li><code>timedOut</code>\u7528\u4E8E\u8BB0\u5F55\u4E0A\u4E00\u6B21\u4ECE\u961F\u5217\u4E2D\u83B7\u53D6\u662F\u5426\u8D85\u65F6\u3002\u5982\u679C\u4ECE\u961F\u5217\u4E2D\u65E0\u6CD5\u83B7\u53D6\u5230\u4EFB\u52A1\u5219\u4E3Atrue</li><li><code>timed</code>\u4E3A<code>allowCoreThreadTimeOut || wc &gt; corePoolSize</code>\u8868\u793A\u5982\u679C\u6838\u5FC3\u7EBF\u7A0B\u5141\u8BB8\u8D85\u65F6\u6E05\u9664\u6216\u8005\u5DE5\u4F5C\u6570\u8D85\u8FC7\u6838\u5FC3\u7EBF\u7A0B\u6570\uFF0C\u5219\u8BE5\u6807\u8BB0\u4E3Atrue\u3002</li></ul><p>\u6CE8\u610F\uFF1A\u8BE5\u65B9\u6CD5\u53EA\u662F\u51CF\u5C11\u5DE5\u4F5C\u6570\uFF0C\u5F53\u65B9\u6CD5\u8FD4\u56DEnull\u540E\u662F\u7531<code>processWorkerExit</code>\u8FDB\u884C\u5DE5\u4F5C\u8005\u5BF9\u8C61\u6E05\u7406\u7684\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token class-name">Runnable</span> <span class="token function">getTask</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">boolean</span> timedOut <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment">// Did the last poll() time out?</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> c <span class="token operator">=</span> ctl<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> rs <span class="token operator">=</span> <span class="token function">runStateOf</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Check if queue empty only if necessary.</span>
        <span class="token comment">// \u5982\u679C\u7EBF\u7A0B\u6C60\u505C\u6B62\uFF0C\u6216\u8005\u5173\u95ED\u65F6\u961F\u5217\u4E3A\u7A7A\u3002\u90A3\u4E48\u51CF\u5C11\u5DE5\u4F5C\u6570\u3002\u8FDB\u884C\u9000\u51FA\u5904\u7406</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>rs <span class="token operator">&gt;=</span> <span class="token constant">SHUTDOWN</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>rs <span class="token operator">&gt;=</span> <span class="token constant">STOP</span> <span class="token operator">||</span> workQueue<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">decrementWorkerCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">int</span> wc <span class="token operator">=</span> <span class="token function">workerCountOf</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Are workers subject to culling?</span>
        <span class="token comment">// \u5982\u679C\u6838\u5FC3\u7EBF\u7A0B\u53EF\u4EE5\u88AB\u6E05\u7406\u90A3\u4E48\u6700\u7EC8\u7EBF\u7A0B\u6C60\u7EBF\u7A0B\u6570\u4E3A0</span>
        <span class="token keyword">boolean</span> timed <span class="token operator">=</span> allowCoreThreadTimeOut <span class="token operator">||</span> wc <span class="token operator">&gt;</span> corePoolSize<span class="token punctuation">;</span>

        <span class="token comment">// \u5982\u679C\u5DE5\u4F5C\u6570\u8FBE\u5230\u6700\u5927\u5BB9\u91CF\uFF0C\u8D85\u65F6\u5E76\u4E14\u4EFB\u52A1\u6570\u5927\u4E8E1\u6216\u8005\u8D85\u65F6\u65F6\u961F\u5217\u975E\u7A7A\uFF0C\u51CF\u5C11\u5DE5\u4F5C\u6570\uFF0C</span>
        <span class="token comment">// \u6B64\u5904\u4F7F\u7528continue\uFF0C\u662F\u4E00\u4E2A\u53CD\u590D\u6E05\u7406\u8FC7\u7A0B\u3002</span>
        <span class="token comment">// \u5982\u679CtimedOut\u4E3Atrue\u5E76\u4E14\u5176\u4ED6\u4FDD\u6301\u4E0D\u53D8\uFF0CallowCoreThreadTimeOut\u8BBE\u7F6E\u4E3Atrue\u5219\u4F1A\u4E0D\u65AD\u6E05\u7406\u3002</span>
        <span class="token comment">// \u8BBE\u7F6E\u4E3Afalse\u5219\u4F1A\u4FDD\u7559\u6838\u5FC3\u7EBF\u7A0B\u3002</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>wc <span class="token operator">&gt;</span> maximumPoolSize <span class="token operator">||</span> <span class="token punctuation">(</span>timed <span class="token operator">&amp;&amp;</span> timedOut<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>wc <span class="token operator">&gt;</span> <span class="token number">1</span> <span class="token operator">||</span> workQueue<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">compareAndDecrementWorkerCount</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token keyword">continue</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">Runnable</span> r <span class="token operator">=</span> timed <span class="token operator">?</span>
                workQueue<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span>keepAliveTime<span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">NANOSECONDS</span><span class="token punctuation">)</span> <span class="token operator">:</span>
                workQueue<span class="token punctuation">.</span><span class="token function">take</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>r <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> r<span class="token punctuation">;</span>
            timedOut <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> retry<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u7531\u4E8EInterruptedException\u5F02\u5E38\uFF0C\u4F1A\u91CD\u65B0\u4ECE\u961F\u5217\u4E2D\u83B7\u53D6</span>
            timedOut <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tryterminate" tabindex="-1"><a class="header-anchor" href="#tryterminate" aria-hidden="true">#</a> tryTerminate</h3><p>\u8BE5\u65B9\u6CD5\u7684\u4F5C\u7528\u5728\u4E8E\u5C06\u7EBF\u7A0B\u6C60\u72B6\u6001\u5207\u6362\u5230\u7EC8\u6B62\uFF08\u5982\u679C\u4E3ASHUTDOWN\u4E14\u4EFB\u52A1\u961F\u5217\u4E3A\u7A7A, STOP\u8FD9\u4E24\u79CD\u60C5\u51B5\uFF09\u3002\u540C\u65F6\u65B9\u6CD5\u5185\u90E8\u5BF9\u5DE5\u4F5C\u4E2D\u7684\u7EBF\u7A0B\u8FDB\u884C\u4E2D\u65AD\u64CD\u4F5C\u3002</p><p>\u8FD9\u4E2A\u65B9\u6CD5\u5FC5\u987B\u5728\u4EFB\u4F55\u53EF\u80FD\u5BFC\u81F4\u7EBF\u7A0B\u6C60\u7EC8\u6B62\u7684\u60C5\u51B5\u4E0B\u88AB\u8C03\u7528\uFF0C\u5982\uFF1A</p><ul><li>\u51CF\u5C11worker\u6570\u91CF</li><li>shutdown\u65F6\u4ECEqueue\u4E2D\u79FB\u9664\u4EFB\u52A1</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">tryTerminate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> <span class="token punctuation">;</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> c <span class="token operator">=</span> ctl<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u5982\u679C\u4E3A\u6B63\u5728\u8FD0\u884C\u72B6\u6001 \u6216\u8005\u7EBF\u7A0B\u6C60\u5DF2\u7ECF\u505C\u6B62, \u6216\u8005\u4E3ASHUTDOWN\u4F46\u662F\u4EFB\u52A1\u961F\u5217\u975E\u7A7A</span>
        <span class="token comment">// \u4EE5\u4E0A\u4E09\u79CD\u60C5\u51B5\u4E0D\u5E94\u8BE5\u7EC8\u6B62\u7EBF\u7A0B\u6C60</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isRunning</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token operator">||</span>
                <span class="token function">runStateAtLeast</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> <span class="token constant">TIDYING</span><span class="token punctuation">)</span> <span class="token operator">||</span>
                <span class="token punctuation">(</span><span class="token function">runStateOf</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token constant">SHUTDOWN</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>workQueue<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        
        <span class="token comment">// \u5982\u679C\u4E3ASHUTDOWN\u4E14\u4EFB\u52A1\u961F\u5217\u4E3A\u7A7A, STOP\u8FD9\u4E24\u79CD\u60C5\u51B5</span>
        <span class="token comment">// \u5982\u679C\u6B64\u65F6\u5DE5\u4F5C\u6570\u975E0\uFF0C\u4E5F\u5C31\u662F\u4ECD\u6709\u7EBF\u7A0B\u5B58\u6D3B\uFF08\u6709\u53EF\u80FD\u6B63\u5728\u6267\u884C\u4EFB\u52A1\uFF09\u3002\u6B64\u65F6\u4E2D\u65AD\u5176\u4E2D\u4E00\u4E2A\u3002</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">workerCountOf</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// Eligible to terminate</span>
            <span class="token comment">// ONLY_ONE\u4E3Atrue \u5F53\u5DE5\u4F5C\u6570\u975E0\u65F6 \u53EA\u4E2D\u65AD\u4E00\u4E2A\u7EBF\u7A0B(\u8BE5\u7EBF\u7A0B\u4ECE\u7EBF\u7A0B\u6C60\u4E2D\u83B7\u53D6, \u4E0D\u4E00\u5B9A\u662F\u5F53\u524D\u7684)</span>
            <span class="token function">interruptIdleWorkers</span><span class="token punctuation">(</span><span class="token constant">ONLY_ONE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// \u8FDB\u884C\u7EBF\u7A0B\u6C60\u72B6\u6001\u5207\u6362</span>
        <span class="token keyword">final</span> <span class="token class-name">ReentrantLock</span> mainLock <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>mainLock<span class="token punctuation">;</span>
        mainLock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u7EBF\u7A0B\u6C60\u72B6\u6001\u5207\u6362\u5230TIDYING\u72B6\u6001</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>ctl<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> <span class="token function">ctlOf</span><span class="token punctuation">(</span><span class="token constant">TIDYING</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token comment">// \u53EF\u4EE5\u81EA\u5B9A\u4E49\u5B9E\u73B0\uFF0C\u9ED8\u8BA4\u6CA1\u6709\u903B\u8F91</span>
                    <span class="token function">terminated</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                    <span class="token comment">// \u7EBF\u7A0B\u6C60\u72B6\u6001\u5207\u6362\u5230TERMINATED\u72B6\u6001</span>
                    ctl<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token function">ctlOf</span><span class="token punctuation">(</span><span class="token constant">TERMINATED</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    termination<span class="token punctuation">.</span><span class="token function">signalAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">return</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            mainLock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// else retry on failed CAS</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u7EC8\u6B62\u7EBF\u7A0B\u6C60" tabindex="-1"><a class="header-anchor" href="#\u7EC8\u6B62\u7EBF\u7A0B\u6C60" aria-hidden="true">#</a> \u7EC8\u6B62\u7EBF\u7A0B\u6C60</h2><p>\u4F7F\u7528<code>shutdown</code>\u53EF\u4EE5\u7EC8\u6B62\u4E00\u4E2A\u7EBF\u7A0B\u6C60\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token class-name">ReentrantLock</span> mainLock <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>mainLock<span class="token punctuation">;</span>
    mainLock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token function">checkShutdownAccess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u8BBE\u7F6E\u5404\u4E2A\u7EBF\u7A0B\u4E3ASHUTDOWN\u72B6\u6001</span>
        <span class="token function">advanceRunState</span><span class="token punctuation">(</span><span class="token constant">SHUTDOWN</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u4E2D\u65AD\u6240\u6709\u7EBF\u7A0B\uFF0C\u4E4B\u524D\u5728tryTerminate\u5DF2\u7ECF\u63D0\u53CA\u8FC7\u4E86</span>
        <span class="token function">interruptIdleWorkers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u7A7A\u65B9\u6CD5 \u5B50\u7C7B\u53EF\u4EE5\u5B9E\u73B0\u8BE5\u65B9\u6CD5</span>
        <span class="token function">onShutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// hook for ScheduledLoggedThreadPoolExecutor</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        mainLock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u7EC8\u6B62\u7EBF\u7A0B\u6C60</span>
    <span class="token function">tryTerminate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u5BF9tryTerminate\u65B9\u6CD5\u8FDB\u884C\u4E00\u70B9\u8865\u5145\uFF0C<code>termination.signalAll();</code>\u8FD9\u4E2A\u5730\u65B9\u7528\u4E8E\u5524\u9192\u6240\u6709\u7B49\u5F85\u4E2D\u7684\u7EBF\u7A0B\u3002\u987A\u7740\u4EE3\u7801\u770B\u4E0B\u53BB\u53EF\u4EE5\u770B\u5230<code>transferForSignal</code>\u8FD9\u4E2A\u65B9\u6CD5\u3002 <code>LockSupport.unpark(node.thread);</code>\u7528\u4E8E\u5524\u9192\u7B49\u5F85\u4E2D\u7684\u7EBF\u7A0B\uFF0C\u8FD8\u8BB0\u5F97\u4E4B\u524D\u8BF4<code>getTask</code>\u5982\u679C\u83B7\u53D6\u4E0D\u5230\u4EFB\u52A1\u4F1A\u8FDB\u5165\u7B49\u5F85\u72B6\u6001\u5417\uFF1F\u6B64\u65F6\u5524\u9192\u8FD9\u4E9B\u7EBF\u7A0B\u3002<code>processWorkerExit</code>\u5C31\u53EF\u4EE5\u88AB\u6267\u884C\u4E86\uFF0C\u7EBF\u7A0B\u6C60\u5C31\u5F00\u59CB\u8FDB\u884C\u6E05\u7406\u5DE5\u4F5C\u4E86\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">transferForSignal</span><span class="token punctuation">(</span><span class="token class-name">Node</span> node<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">/*
        * If cannot change waitStatus, the node has been cancelled.
        */</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">compareAndSetWaitStatus</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> <span class="token class-name">Node</span><span class="token punctuation">.</span><span class="token constant">CONDITION</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

    <span class="token comment">/*
        * Splice onto queue and try to set waitStatus of predecessor to
        * indicate that thread is (probably) waiting. If cancelled or
        * attempt to set waitStatus fails, wake up to resync (in which
        * case the waitStatus can be transiently and harmlessly wrong).
        */</span>
    <span class="token class-name">Node</span> p <span class="token operator">=</span> <span class="token function">enq</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> ws <span class="token operator">=</span> p<span class="token punctuation">.</span>waitStatus<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>ws <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">compareAndSetWaitStatus</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> ws<span class="token punctuation">,</span> <span class="token class-name">Node</span><span class="token punctuation">.</span><span class="token constant">SIGNAL</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token class-name">LockSupport</span><span class="token punctuation">.</span><span class="token function">unpark</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>thread<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="shutdownnow-shutdown" tabindex="-1"><a class="header-anchor" href="#shutdownnow-shutdown" aria-hidden="true">#</a> shutdownNow &amp; shutdown</h3><p>\u4E3A\u4EC0\u4E48\u6211\u4EEC\u4E0D\u63A8\u8350\u7528<code>shutdownNow</code>\u5462\uFF1F</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Runnable</span><span class="token punctuation">&gt;</span></span> <span class="token function">shutdownNow</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Runnable</span><span class="token punctuation">&gt;</span></span> tasks<span class="token punctuation">;</span>
    <span class="token keyword">final</span> <span class="token class-name">ReentrantLock</span> mainLock <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>mainLock<span class="token punctuation">;</span>
    mainLock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token function">checkShutdownAccess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">advanceRunState</span><span class="token punctuation">(</span><span class="token constant">STOP</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">interruptWorkers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        tasks <span class="token operator">=</span> <span class="token function">drainQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        mainLock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">tryTerminate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> tasks<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5BF9\u6BD4\u4E00\u4E0B\u4E24\u4E2A\u65B9\u6CD5\uFF0C\u6709\u4EE5\u4E0B\u51E0\u70B9\u533A\u522B\u3002</p><ol><li>shutdownNow\u662F\u5C06\u7EBF\u7A0B\u6C60\u7F6E\u4E3A<code>STOP</code>\u72B6\u6001\uFF0Cshutdown\u65B9\u6CD5\u7F6E\u4E3A<code>SHUTDOWN</code>\u72B6\u6001\u3002STOP\u72B6\u6001\u65E0\u6CD5\u6267\u884C\u961F\u5217\u4E2D\u7684\u4EFB\u52A1\uFF0C\u800C\u540E\u8005\u53EF\u4EE5\u3002</li><li>shutdownNow\u65B9\u6CD5\u4F7F\u7528<code>drainQueue</code>\u79FB\u9664\u4EFB\u52A1\u961F\u5217\u3002</li><li>shutdown\u65B9\u6CD5\u8FD4\u56DE\u4E3Avoid\uFF1BshutdownNow\u8FD4\u56DE\u4EFB\u52A1\u961F\u5217\u3002</li><li>shutdown\u63D0\u4F9B\u4E86\u94A9\u5B50\u65B9\u6CD5\u4F9B\u5B50\u7C7B\u5B9E\u73B0\u3002\u8FD9\u4E2A\u662F\u4E2A\u5C0F\u533A\u522B\u3002</li></ol>`,52);function u(k,r){const s=o("Mermaid");return t(),p("div",null,[l,e(s,{id:"mermaid-52",code:"eNqNkk9LAkEYxu9+ijkqKHT2EBRKeWgVW4kQD9IuKtSurCsW7KFAxPxTUbhKJSYk1kFaCWzdRfoyO7P1LZpm1oXMpDnNn/d5f8/7MBkpnc8CdtMD8CrI3iSs3kHTsI13+6mOxg8pHwgE1hWBLwE2K/FpLiaKh+Fj/qAoixKA1S4c1mFDhdoYdV7iCYaJMFt2bYJOzxQgFQUhJ2S8Sec+iC4G8LKNVM0yTVjrw+kEPpbtq8pnpwerbUsf0fuUj7hx5ISPzocf/UYhW5Q5sSQgdYpeWwqYn73J3e0EG4ruMUFLby5QrFnlB+V/CEYsuRRZzGMCG40t6643f3f341GQOqId8d6+LdNAHewcQrhUQuXwuuEmb+mG/WwoQM5xJyRFNhLa/07RCY9QqRs/fBtYs3tH2tKwdM0PtQo1IPPSUU5IyzxHJ1pmYuXwzt8Q86T0L4OkytmTwkUuZdjmDer2sMp9xZOF4zsRZoMNh4KrRNi45wu612kh"}),i])}const m=a(c,[["render",u],["__file","\u7EBF\u7A0B\u6C60\u6E90\u7801.html.vue"]]);export{m as default};
