import{_ as t}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as p,c as e,a as n,b as s,d as c,e as o,r as l}from"./app.e7c9cb9e.js";const i={},u=o(`<blockquote><p>\u4E4B\u524D\u6211\u4EEC\u8BF4\u4E86jdk\u52A8\u6001\u4EE3\u7406, \u4ECA\u5929\u6765\u770B\u770Bcglib\u52A8\u6001\u4EE3\u7406. \u6587\u7AE0\u7684\u6700\u540E\u6211\u4EEC\u5BF9\u6BD4\u4E00\u4E0Bjdk\u52A8\u6001\u4EE3\u7406\u548Ccglib\u52A8\u6001\u4EE3\u7406</p></blockquote><p>\u9996\u5148\u521B\u5EFA\u4E00\u4E2A\u4E1A\u52A1\u7C7B, \u5176\u4E2D\u542B\u6709\u4E00\u4E2Aselect\u65B9\u6CD5.</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">InfoService</span> <span class="token punctuation">{</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;com.nikola.demo.service.InfoService.select&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E4B\u540E\u521B\u5EFA\u4E00\u4E2Acglib\u52A8\u6001\u4EE3\u7406\u5BF9\u8C61\u7684\u83B7\u53D6\u5DE5\u5382. \u5F53\u7136\u4F60\u4E5F\u53EF\u4EE5\u4E0D\u8FD9\u4E48\u53BB\u505A, \u4E0B\u9762\u8FD9\u79CD\u65B9\u5F0F\u66F4\u52A0\u5B9E\u7528. \u5BF9\u5916\u63D0\u4F9B<code>getProxyInstance</code>, \u4F20\u5165\u59D4\u6258\u7C7B\u5BF9\u8C61, \u8FD4\u56DE\u8BE5\u59D4\u6258\u7C7B\u7684\u4EE3\u7406\u5BF9\u8C61.</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">CglibProxyFactory</span> <span class="token punctuation">{</span>

  <span class="token keyword">private</span> <span class="token class-name">CglibProxyFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
    * \u83B7\u53D6\u4EE3\u7406\u7C7B\u5B9E\u4F8B
    */</span>
  <span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">&quot;unchecked&quot;</span><span class="token punctuation">)</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">T</span> <span class="token function">getProxyInstance</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Enhancer</span> enhancer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Enhancer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    enhancer<span class="token punctuation">.</span><span class="token function">setSuperclass</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
    enhancer<span class="token punctuation">.</span><span class="token function">setCallback</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">MethodInterceptor</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>o<span class="token punctuation">,</span> method<span class="token punctuation">,</span> objects<span class="token punctuation">,</span> methodProxy<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;=====&gt; begin %s&quot;</span><span class="token punctuation">,</span> method<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">Object</span> res <span class="token operator">=</span> methodProxy<span class="token punctuation">.</span><span class="token function">invokeSuper</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span> objects<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;=====&gt; end %s, result %s&quot;</span><span class="token punctuation">,</span> method<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">)</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>enhancer<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElseThrow</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;cannot get proxy class!!!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6700\u540E\u6D4B\u8BD5\u4E00\u4E0B\u4E0A\u9762\u7684\u4EE3\u7801.</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">InfoService</span> infoServiceProxy <span class="token operator">=</span> <span class="token class-name">CglibProxyFactory</span><span class="token punctuation">.</span><span class="token function">getProxyInstance</span><span class="token punctuation">(</span><span class="token class-name">InfoService</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u751F\u6210\u4EE3\u7406\u5BF9\u8C61: &quot;</span> <span class="token operator">+</span> infoServiceProxy<span class="token punctuation">)</span><span class="token punctuation">;</span>
infoServiceProxy<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://tech.nikolazhang.top/2020-06-17-03-40-33.png" alt="2020-06-17-03-40-33" loading="lazy"></p><p>\u53EF\u4EE5\u770B\u5230, cglib\u5982jdk\u52A8\u6001\u4EE3\u7406\u4E00\u6837\u4F1A\u751F\u6210\u4E00\u4E2A\u4EE3\u7406\u5BF9\u8C61. \u4E4B\u540E\u8C03\u7528\u65B9\u6CD5, \u5B9E\u9645\u662F\u6267\u884C\u4E86<code>MethodInterceptor</code>\u4E2D\u7684\u903B\u8F91, \u6211\u4EEC\u53EF\u4EE5\u770B\u5230\u7236\u7C7B\u7684\u516C\u5171\u65B9\u6CD5\u4E5F\u540C\u6837\u8D70\u4E86\u8FD9\u6837\u7684\u903B\u8F91, \u8FD9\u4E2A\u63A5\u4E0B\u6765\u6211\u4EEC\u4F1A\u6162\u6162\u63A2\u7A76. \u8FD9\u4E2A\u4E0D\u662F\u6211\u60F3\u8981\u7684\u554A?!</p><p>\u4ECE\u611F\u89C9\u4E0Acglib\u76F8\u6BD4\u8F83jdk\u52A8\u6001\u4EE3\u7406\u8981\u65B9\u4FBF\u5F88\u591A, \u9996\u5148\u6211\u4EEC\u4E0D\u7528\u89C4\u5B9A\u5FC5\u987B\u6709\u4E00\u4E2A\u516C\u5171\u63A5\u53E3. cglib\u53EF\u4EE5\u76F4\u63A5\u4EE3\u7406\u4E00\u4E2A\u7C7B. \u5176\u6B21cglib\u7684\u64CD\u4F5C\u5C01\u88C5\u5728Enhance\u4E2D, \u76F4\u63A5\u5BF9\u5176\u8FDB\u884C\u64CD\u4F5C\u53EF\u4EE5\u5B8C\u6210\u6574\u4E2A\u4EE3\u7406\u8FC7\u7A0B. \u8FD9\u6BD4jdk\u52A8\u6001\u4EE3\u7406, \u9700\u8981\u901A\u8FC7<code>Proxy</code>\u521B\u5EFA\u4EE3\u7406\u5BF9\u8C61, \u5E76\u4F20\u5165<code>InvocationHandler</code>\u8C03\u5EA6\u5668, \u8981\u5BB9\u6613\u7406\u89E3\u7684\u591A.</p><h2 id="enhancer\u662F\u4EC0\u4E48" tabindex="-1"><a class="header-anchor" href="#enhancer\u662F\u4EC0\u4E48" aria-hidden="true">#</a> Enhancer\u662F\u4EC0\u4E48</h2><p>\u4E0A\u9762\u6211\u4EEC\u901A\u8FC7<code>Enhancer</code>\u5B9E\u73B0\u4E86\u4E00\u4E2Acglib\u52A8\u6001\u4EE3\u7406\u7684\u6848\u4F8B, \u5E76\u4E14\u4EA7\u751F\u4E86\u4E00\u4E9B\u7591\u95EE. \u672C\u8282\u6765\u63A2\u7A76\u539F\u56E0.</p><p><code>Enhancer</code>\u7528\u4E8E\u751F\u6210\u52A8\u6001\u5B50\u7C7B, \u4EE5\u5B9E\u73B0\u65B9\u6CD5\u62E6\u622A. \u8FD9\u4E2A\u7C7B\u4E00\u5F00\u59CB\u662F\u4F5C\u4E3Ajdk1.3\u6807\u51C6\u52A8\u6001\u4EE3\u7406\u7684\u66FF\u4EE3\u54C1, \u4F46\u662F\u5B83\u9664\u4E86\u53EF\u4EE5\u52A8\u6001\u4EE3\u7406\u63A5\u53E3\u7684\u5B9E\u73B0, \u8FD8\u53EF\u4EE5\u76F4\u63A5\u4EE3\u7406\u4E00\u4E2A\u7C7B(\u6211\u662F\u66FF\u8865, \u4F46\u6211\u5F88\u725BB). \u52A8\u6001\u4EE3\u7406\u751F\u6210\u7684\u5B50\u7C7B\u4F1A\u91CD\u5199\u7236\u7C7B\u7684\u975Efinal\u7C7B\u578B\u7684\u65B9\u6CD5, \u5E76\u4E14\u6709\u901A\u8FC7\u94A9\u5B50\u65B9\u6CD5(\u5373callback\u65B9\u6CD5)\u56DE\u8C03\u81EA\u5B9A\u4E49\u7684\u62E6\u622A\u5668\u5B9E\u73B0.</p><p>\u6700\u539F\u59CB\u4E14\u901A\u7528\u7684\u56DE\u8C03\u7C7B\u578B(\u62E6\u622A\u5668)\u662F<code>MethodInterceptor</code>(\u4E5F\u5C31\u662F\u6211\u4EEC\u4F8B\u5B50\u4E2D\u56DE\u8C03\u65B9\u6CD5\u7684\u4F20\u53C2). <code>MethodInterceptor</code>\u5728AOP\u672F\u8BED\u4E2D\u5141\u8BB8\u5B9E\u73B0\u73AF\u7ED5\u5F0F\u589E\u5F3A(\u4E00\u822C\u4E5F\u53EB\u901A\u77E5, \u589E\u5F3A\u66F4\u52A0\u51C6\u786E, \u7075\u611F\u6216\u8BB8\u5C31\u6765\u81EAEnhancer). \u4E5F\u5C31\u662F\u8BF4\u4F60\u53EF\u4EE5\u5728\u8C03\u7528\u7236\u7C7B\u65B9\u6CD5\u4E4B\u524D\u6216\u8005\u4E4B\u540E\u6267\u884C\u81EA\u5B9A\u4E49\u7684\u4EE3\u7801.\u53E6\u5916\u4F60\u4E5F\u53EF\u4EE5\u5728\u7236\u7C7B\u65B9\u6CD5\u6267\u884C\u4E4B\u524D\u4FEE\u6539\u53C2\u6570, \u6216\u8005\u4E0D\u53BB\u8C03\u7528\u5B83.</p><p>\u867D\u7136<code>MethodInterceptor</code>\u8DB3\u4EE5\u6EE1\u8DB3\u5404\u79CD\u62E6\u622A\u9700\u8981, \u4F46\u6740\u9E21\u7109\u7528\u725B\u5200. \u8003\u8651\u5230\u6027\u80FD\u548C\u7B80\u6D01, \u53EF\u4EE5\u4F7F\u7528\u4E13\u95E8\u7684\u56DE\u8C03\u7C7B\u578B, \u6BD4\u5982<code>LazyLoader</code>. \u901A\u5E38\u4E00\u4E2A\u589E\u5F3A\u7C7B\u53EA\u6709\u4E00\u4E2A\u56DE\u8C03, \u4F46\u662F\u4F60\u53EF\u4EE5\u901A\u8FC7\u4F7F\u7528<code>CallbackFilter</code>\u6765\u63A7\u5236\u6BCF\u4E2A\u65B9\u6CD5\u4F7F\u7528\u54EA\u79CD\u56DE\u8C03.</p><h2 id="\u6307\u5B9A\u56DE\u8C03-callbackfilter" tabindex="-1"><a class="header-anchor" href="#\u6307\u5B9A\u56DE\u8C03-callbackfilter" aria-hidden="true">#</a> \u6307\u5B9A\u56DE\u8C03, CallbackFilter</h2><p>\u5728jdk\u52A8\u6001\u4EE3\u7406\u4E2D, \u5982\u679C\u60F3\u8981\u6307\u5B9A\u4EE3\u7406\u54EA\u4E00\u4E2A\u65B9\u6CD5\u6211\u4EEC\u53EF\u80FD\u9700\u8981\u5728invoke\u4E2D\u505A\u65B9\u6CD5\u540D\u7684\u6BD4\u8F83\u5224\u65AD. \u800Ccglib\u52A8\u6001\u4EE3\u7406\u53EF\u4EE5\u901A\u8FC7<code>CallbackFilter</code>\u6765\u63A7\u5236\u6BCF\u4E2A\u65B9\u6CD5\u4F7F\u7528\u54EA\u79CD\u56DE\u8C03. \u6BD4\u5982: \u59D4\u6258\u7C7B\u6709\u5982\u4E0B\u4E24\u79CD\u65B9\u6CD5.</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">InfoService</span> <span class="token punctuation">{</span>

<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;demo.service.InfoService.select&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;demo.service.InfoService.update&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u63A5\u4E0B\u6765\u6211\u4EEC\u8BBE\u7F6E\u56DE\u8C03\u5668, \u53CA\u901A\u8FC7\u65B9\u6CD5\u540D\u6307\u5B9A\u56DE\u8C03\u5668\u7D22\u5F15.</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testCallbackFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4E24\u79CD\u7C7B\u578B\u7684\u56DE\u8C03\u5668, \u524D\u8005\u4F7F\u7528\u73AF\u7ED5\u589E\u5F3A, \u540E\u8005\u76F4\u63A5\u6267\u884C</span>
    <span class="token class-name">Callback</span><span class="token punctuation">[</span><span class="token punctuation">]</span> callbacks <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token punctuation">(</span><span class="token class-name">MethodInterceptor</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>obj<span class="token punctuation">,</span> method<span class="token punctuation">,</span> args<span class="token punctuation">,</span> proxy<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;====== begin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">Object</span> object <span class="token operator">=</span> proxy<span class="token punctuation">.</span><span class="token function">invokeSuper</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;====== end&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> object<span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">(</span><span class="token class-name">MethodInterceptor</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>obj<span class="token punctuation">,</span> method<span class="token punctuation">,</span> args<span class="token punctuation">,</span> proxy<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                <span class="token class-name">Object</span> object <span class="token operator">=</span> proxy<span class="token punctuation">.</span><span class="token function">invokeSuper</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> object<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token class-name">Enhancer</span> enhancer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Enhancer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    enhancer<span class="token punctuation">.</span><span class="token function">setSuperclass</span><span class="token punctuation">(</span><span class="token class-name">InfoService</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u6CE8\u610F\u591A\u4E2A\u56DE\u8C03\u5668\u4F7F\u7528setCallbacks\u8BBE\u7F6E</span>
    enhancer<span class="token punctuation">.</span><span class="token function">setCallbacks</span><span class="token punctuation">(</span>callbacks<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u8BBE\u7F6E\u8FC7\u6EE4\u7B56\u7565 \u5982\u679C\u662Fupdate\u65B9\u6CD5\u4F7F\u7528\u73AF\u7ED5\u589E\u5F3A, \u5426\u5219\u76F4\u63A5\u6267\u884C</span>
    enhancer<span class="token punctuation">.</span><span class="token function">setCallbackFilter</span><span class="token punctuation">(</span>method <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&quot;update&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>method<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">InfoService</span> infoServiceProxy <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">InfoService</span><span class="token punctuation">)</span> enhancer<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    infoServiceProxy<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    infoServiceProxy<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u63A5\u4E0B\u6765\u6211\u4EEC\u770B\u770B\u6267\u884C\u7ED3\u679C:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>demo.service.InfoService.select
====== begin
demo.service.InfoService.update
====== end
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="enhance\u7684create\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#enhance\u7684create\u65B9\u6CD5" aria-hidden="true">#</a> Enhance\u7684create\u65B9\u6CD5</h2><p>\u8FD9\u4E00\u8282\u6211\u4EEC\u770B\u4E00\u4E0Bcreate\u65B9\u6CD5\u7684\u6E90\u7801.</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// classOnly\u8868\u793A\u53EA\u8FD4\u56DE\u7C7B\u5BF9\u8C61\u800C\u975E\u5B9E\u4F8B\u5BF9\u8C61</span>
  classOnly <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  argumentTypes <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token function">createHelper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token class-name">Object</span> <span class="token function">createHelper</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u524D\u7F6E\u6821\u9A8C</span>
  <span class="token function">preValidate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u6839\u636E\u4E4B\u524D\u8BBE\u7F6E\u7684\u53C2\u6570\u751F\u6210\u4E00\u4E2Akey, \u5F53\u7136\u5982\u4F60\u6240\u6599\u8FD9\u4E2Akey\u5176\u5B9E\u662F\u7528\u4E8E\u83B7\u53D6\u7F13\u5B58\u4E2D\u5DF2\u7ECF\u6709\u7684\u4EE3\u7406\u5BF9\u8C61\u7684.</span>
  <span class="token class-name">Object</span> key <span class="token operator">=</span> <span class="token constant">KEY_FACTORY</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">(</span>superclass <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">?</span> superclass<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
          <span class="token class-name">ReflectUtils</span><span class="token punctuation">.</span><span class="token function">getNames</span><span class="token punctuation">(</span>interfaces<span class="token punctuation">)</span><span class="token punctuation">,</span>
          filter <span class="token operator">==</span> <span class="token constant">ALL_ZERO</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">WeakCacheKey</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CallbackFilter</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>filter<span class="token punctuation">)</span><span class="token punctuation">,</span>
          callbackTypes<span class="token punctuation">,</span>
          useFactory<span class="token punctuation">,</span>
          interceptDuringConstruction<span class="token punctuation">,</span>
          serialVersionUID<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>currentKey <span class="token operator">=</span> key<span class="token punctuation">;</span>
  <span class="token class-name">Object</span> result <span class="token operator">=</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">protected</span> <span class="token class-name">Object</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token class-name">Object</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token class-name">ClassLoader</span> loader <span class="token operator">=</span> <span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ClassLoader</span><span class="token punctuation">,</span> <span class="token class-name">ClassLoaderData</span><span class="token punctuation">&gt;</span></span> cache <span class="token operator">=</span> <span class="token constant">CACHE</span><span class="token punctuation">;</span>
      <span class="token class-name">ClassLoaderData</span> data <span class="token operator">=</span> cache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>loader<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// \u5982\u679C\u7F13\u5B58\u4E2D\u4E0D\u5B58\u5728ClassLoaderData, \u5219\u4F7F\u7528\u540C\u6B65\u65B9\u5F0F\u751F\u6210, \u5E76\u653E\u5165.</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>data <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token class-name">AbstractClassGenerator</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              cache <span class="token operator">=</span> <span class="token constant">CACHE</span><span class="token punctuation">;</span>
              data <span class="token operator">=</span> cache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>loader<span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token comment">// \u52A0\u9501\u540E\u91CD\u65B0\u83B7\u53D6, \u5E76\u5224\u65AD, \u9632\u6B62\u5176\u4ED6\u7EBF\u7A0B\u751F\u6210\u4E86ClassLoaderData\u540E, \u5F53\u524D\u7EBF\u7A0B\u518D\u6B21\u751F\u6210.</span>
              <span class="token keyword">if</span> <span class="token punctuation">(</span>data <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                  <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ClassLoader</span><span class="token punctuation">,</span> <span class="token class-name">ClassLoaderData</span><span class="token punctuation">&gt;</span></span> newCache <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WeakHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ClassLoader</span><span class="token punctuation">,</span> <span class="token class-name">ClassLoaderData</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>cache<span class="token punctuation">)</span><span class="token punctuation">;</span>
                  data <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassLoaderData</span><span class="token punctuation">(</span>loader<span class="token punctuation">)</span><span class="token punctuation">;</span>
                  newCache<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>loader<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
                  <span class="token constant">CACHE</span> <span class="token operator">=</span> newCache<span class="token punctuation">;</span>
              <span class="token punctuation">}</span>
          <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>key <span class="token operator">=</span> key<span class="token punctuation">;</span>
      <span class="token comment">// \u83B7\u53D6\u751F\u6210\u7684\u4EE3\u7406\u7C7B\u5BF9\u8C61, \u7F13\u5B58\u4E2D\u4E0D\u5B58\u5728\u5219\u751F\u6210</span>
      <span class="token comment">// getUseCache()\u7528\u4E8E\u83B7\u53D6\u7CFB\u7EDF\u5C5E\u6027cglib.useCache\u7684\u503C, \u9ED8\u8BA4\u4E3Atrue</span>
      <span class="token class-name">Object</span> obj <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token function">getUseCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>obj <span class="token keyword">instanceof</span> <span class="token class-name">Class</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> <span class="token function">firstInstance</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token punctuation">)</span> obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> <span class="token function">nextInstance</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RuntimeException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> e<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Error</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> e<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">CodeGenerationException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0B\u9762\u770B\u4E00\u4E0B<code>data.get(this, getUseCache());</code>, \u6839\u636E\u662F\u5426\u4F7F\u7528\u7F13\u5B58, \u5206\u522B\u6267\u884C\u4E24\u79CD\u903B\u8F91</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">AbstractClassGenerator</span> gen<span class="token punctuation">,</span> <span class="token keyword">boolean</span> useCache<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>useCache<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> gen<span class="token punctuation">.</span><span class="token function">generate</span><span class="token punctuation">(</span><span class="token class-name">ClassLoaderData</span><span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
       <span class="token comment">// \u4F7F\u7528\u7F13\u5B58\u5219\u4ECE\u7F13\u5B58LoadingCache&lt;AbstractClassGenerator, Object, Object&gt; generatedClasses\u4E2D\u83B7\u53D6</span>
      <span class="token class-name">Object</span> cachedValue <span class="token operator">=</span> generatedClasses<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>gen<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> gen<span class="token punctuation">.</span><span class="token function">unwrapCachedValue</span><span class="token punctuation">(</span>cachedValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9996\u5148\u770B\u4E00\u4E0B\u4E0D\u4F7F\u7528\u7F13\u5B58\u7684\u60C5\u51B5:</p><p><code>gen.generate(ClassLoaderData.this);</code>\u4E2D\u7684\u903B\u8F91</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token class-name">Class</span> <span class="token function">generate</span><span class="token punctuation">(</span><span class="token class-name">ClassLoaderData</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">Class</span> gen<span class="token punctuation">;</span>
  <span class="token comment">// \u83B7\u53D6\u4E0A\u4E00\u6B21\u7684\u5BF9\u8C61...  CURRENT\u4E3AThreadLocal\u7C7B\u578B</span>
  <span class="token class-name">Object</span> save <span class="token operator">=</span> <span class="token constant">CURRENT</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u5B58\u5165\u5F53\u524D\u8C03\u7528\u8BE5\u65B9\u6CD5\u7684AbstractClassGenerator\u5BF9\u8C61</span>
  <span class="token constant">CURRENT</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token class-name">ClassLoader</span> classLoader <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>classLoader <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span><span class="token string">&quot;ClassLoader is null while trying to define class &quot;</span> <span class="token operator">+</span>
                  <span class="token function">getClassName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;. It seems that the loader has been expired from a weak reference somehow. &quot;</span> <span class="token operator">+</span>
                  <span class="token string">&quot;Please file an issue at cglib&#39;s issue tracker.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// \u88C5\u8F7D\u7C7B\u5B9E\u9645\u9700\u8981\u7684\u662FclassLoader, \u4E0D\u540C\u7684classLoader\u88C5\u8F7D\u7684\u662F\u4E0D\u540C\u7684. \u591A\u7EBF\u7A0B\u4E0B\u751F\u6210\u7C7B\u540D, \u53EF\u4EE5\u51CF\u8F7B\u9501\u7684\u91CD\u91CF\u5427?</span>
      <span class="token comment">// \u56E0\u4E3AclassLoader\u7684\u8FD9\u79CD\u7279\u70B9\u6CA1\u6709\u5FC5\u8981\u90FD\u8BA9\u6240\u6709\u7684\u90FD\u9501\u4F4F.</span>
      <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>classLoader<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// \u751F\u6210\u4E00\u4E2A\u4EE3\u7406\u7C7B\u540D\u79F0, \u6CA1\u6709\u6307\u5B9A\u547D\u540D\u7B56\u7565\u5219\u4F7F\u7528\u9ED8\u8BA4\u7684DefaultNamingPolicy</span>
          <span class="token class-name">String</span> name <span class="token operator">=</span> <span class="token function">generateClassName</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span><span class="token function">getUniqueNamePredicate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;==== \u751F\u6210\u4EE3\u7406\u7C7B\u540D\u79F0\u4E3A: %s&quot;</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

          <span class="token comment">// \u4E3A\u4E86\u4FDD\u8BC1\u751F\u6210\u7684\u540D\u5B57\u552F\u4E00\u6BCF\u6B21\u751F\u6210\u4E4B\u540E, \u90FD\u9700\u8981\u6DFB\u52A0\u5230Set\u96C6\u5408\u4E2D, \u4FDD\u8BC1\u4E4B\u540E\u7684\u5224\u65AD</span>
          data<span class="token punctuation">.</span><span class="token function">reserveName</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setClassName</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>attemptLoad<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">try</span> <span class="token punctuation">{</span>
              <span class="token comment">// \u751F\u6210\u540D\u5B57\u4E4B\u540E\u5C1D\u8BD5\u52A0\u8F7D\u6709\u6CA1\u6709\u8FD9\u4E2A\u7C7B, \u5982\u679C\u5B58\u5728\u5219\u76F4\u63A5\u8FD4\u56DE</span>
              <span class="token comment">// TODO attemptLoad\u4E0D\u77E5\u9053\u662F\u5E72\u4EC0\u4E48\u7684, \u751F\u6210\u540D\u5B57\u4F1A\u91CD\u590D\u5417? \u4E0D\u4F1A!</span>
              <span class="token comment">//  \u96BE\u9053\u662F\u7528\u6237\u5728\u76F8\u540C\u8DEF\u5F84\u4E0B\u81EA\u5B9A\u4E49\u4E86\u4E00\u4E2A\u548C\u751F\u6210\u540D\u5B57\u76F8\u540C\u7684\u7C7B\u6587\u4EF6, \u4F18\u5148\u52A0\u8F7D\u8BE5\u7C7B?</span>
              gen <span class="token operator">=</span> classLoader<span class="token punctuation">.</span><span class="token function">loadClass</span><span class="token punctuation">(</span><span class="token function">getClassName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token keyword">return</span> gen<span class="token punctuation">;</span>
          <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ClassNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token comment">// ignore</span>
          <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// strategy\u4E8C\u8FDB\u5236\u5B57\u8282\u7801\u751F\u6210\u7B56\u7565,</span>
      <span class="token comment">// \u9ED8\u8BA4\u4E3ADefaultGeneratorStrategy, \u5B9E\u73B0\u81EAGeneratorStrategy</span>
      <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> b <span class="token operator">=</span> strategy<span class="token punctuation">.</span><span class="token function">generate</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// \u83B7\u53D6\u7C7B\u540D...</span>
      <span class="token class-name">String</span> className <span class="token operator">=</span> <span class="token class-name">ClassNameReader</span><span class="token punctuation">.</span><span class="token function">getClassName</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ClassReader</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;==== \u83B7\u53D6\u7C7B\u540D\u4E3A: %s&quot;</span><span class="token punctuation">,</span> className<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// \u8BBE\u7F6E\u8BBF\u95EE\u4F5C\u7528\u57DF \u9ED8\u8BA4\u4F7F\u7528ReflectUtils\u7684protectionDomain</span>
      <span class="token class-name">ProtectionDomain</span> protectionDomain <span class="token operator">=</span> <span class="token function">getProtectionDomain</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>classLoader<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// just in case</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>protectionDomain <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              gen <span class="token operator">=</span> <span class="token class-name">ReflectUtils</span><span class="token punctuation">.</span><span class="token function">defineClass</span><span class="token punctuation">(</span>className<span class="token punctuation">,</span> b<span class="token punctuation">,</span> classLoader<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
              gen <span class="token operator">=</span> <span class="token class-name">ReflectUtils</span><span class="token punctuation">.</span><span class="token function">defineClass</span><span class="token punctuation">(</span>className<span class="token punctuation">,</span> b<span class="token punctuation">,</span> classLoader<span class="token punctuation">,</span> protectionDomain<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> gen<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RuntimeException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> e<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Error</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> e<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">CodeGenerationException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
      <span class="token constant">CURRENT</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>save<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F60\u5E94\u8BE5\u6CE8\u610F\u5230<code>byte[] b = strategy.generate(this);</code>\u8FD9\u4E2A\u65B9\u6CD5\u5C31\u662F\u751F\u6210\u5B57\u8282\u7801\u7684\u6838\u5FC3\u4E86. \u8FD9\u91CC\u5C31\u4ECB\u7ECD\u9ED8\u8BA4\u7684\u751F\u6210\u7B56\u7565<code>DefaultGeneratorStrategy</code>, \u81EA\u5B9A\u4E49\u751F\u6210\u7B56\u7565\u9700\u8981\u5B9E\u73B0<code>GeneratorStrategy</code>.</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">generate</span><span class="token punctuation">(</span><span class="token class-name">ClassGenerator</span> cg<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token class-name">DebuggingClassWriter</span> cw <span class="token operator">=</span> <span class="token function">getClassVisitor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">transform</span><span class="token punctuation">(</span>cg<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">generateClass</span><span class="token punctuation">(</span>cw<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">transform</span><span class="token punctuation">(</span>cw<span class="token punctuation">.</span><span class="token function">toByteArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">protected</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">transform</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> b<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> b<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">protected</span> <span class="token class-name">ClassGenerator</span> <span class="token function">transform</span><span class="token punctuation">(</span><span class="token class-name">ClassGenerator</span> cg<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> cg<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5176\u5B9E\u9ED8\u8BA4\u7684\u751F\u6210\u7B56\u7565\u5176\u5B9E\u5565\u90FD\u6CA1\u5E72, \u5B9E\u9645\u4E0A\u8FD8\u662F<code>ClassGenerator</code>\u8C03\u7528\u4E86\u81EA\u8EAB\u7684<code>generateClass</code>\u65B9\u6CD5. \u4E0D\u8FC7, \u5982\u6B64\u4E5F\u7ED9\u6211\u4EEC\u81EA\u5B9A\u4E49\u4E00\u4E2A\u751F\u6210\u7B56\u7565\u63D0\u4F9B\u4E86\u4E00\u4E9B\u542F\u53D1. \u6211\u4EEC\u53EF\u4EE5\u5728\u751F\u6210\u4E4B\u524D\u6216\u8005\u751F\u6210\u4E4B\u540E\u6839\u636E\u81EA\u5DF1\u7684\u9700\u6C42\u505A\u4E00\u4E9B\u64CD\u4F5C.</p><p>\u7136\u540E\u6211\u4EEC\u770B\u4E00\u4E0B\u4F7F\u7528\u7F13\u5B58\u7684\u60C5\u51B5: generatedClasses\u7684\u7C7B\u578B\u4E3A<code>LoadingCache&lt;AbstractClassGenerator, Object, Object&gt;</code>, \u63D0\u4F9B<code>get</code>\u65B9\u6CD5\u6839\u636Ekey\u83B7\u53D6\u7F13\u5B58\u6570\u636E.</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">V</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">K</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// key\u4E3AAbstractClassGenerator\u5BF9\u8C61, \u9996\u5148\u751F\u6210cacheKey\u5373\u7B2C\u4E8C\u4E2A\u6CDB\u578B\u53C2\u6570</span>
    <span class="token keyword">final</span> <span class="token class-name">KK</span> cacheKey <span class="token operator">=</span> keyMapper<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u4E4B\u540E\u6839\u636EKK\u83B7\u53D6\u5B9E\u9645\u7684\u503C, \u800C\u5B9E\u9645\u7684\u503C\u662F\u5B58\u653E\u4E8EConcurrentMap&lt;KK, Object&gt; map\u4E2D\u7684</span>
    <span class="token class-name">Object</span> v <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>cacheKey<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5982\u679C\u5176\u503C\u5B58\u5728\u4E14\u4E0D\u4E3AFutureTask\u5219\u76F4\u63A5\u8FD4\u56DE, \u5426\u5219\u8868\u540Dvalue\u5DF2\u7ECFmiss, \u9700\u8981\u91CD\u65B0\u521B\u5EFA.</span>
    <span class="token comment">// \u5173\u4E8EFutureTask\u9700\u8981\u7EE7\u7EED\u770BcreateEntry\u624D\u80FD\u7406\u89E3</span>
    <span class="token comment">// \u5728\u591A\u7EBF\u7A0B\u60C5\u51B5\u4E0B, \u4E3A\u4E86\u9632\u6B62\u591A\u6B21\u521B\u5EFAvalue, \u4F7F\u7528\u4E86FutureTask\u8FDB\u884C\u963B\u585E\u83B7\u53D6</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>v <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token punctuation">(</span>v <span class="token keyword">instanceof</span> <span class="token class-name">FutureTask</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">V</span><span class="token punctuation">)</span> v<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token function">createEntry</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> cacheKey<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0B\u9762\u770B\u4E00\u4E0BcreateEntry</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token class-name">V</span> <span class="token function">createEntry</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token class-name">KK</span> cacheKey<span class="token punctuation">,</span> <span class="token class-name">Object</span> v<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">FutureTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> task<span class="token punctuation">;</span>
    <span class="token keyword">boolean</span> creator <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token comment">// v\u4E0D\u4E3Anull, \u5219\u4E3AFutureTask, \u56E0\u4E3A\u5982\u679C\u975EFutureTask\u5219net.sf.cglib.core.internal.LoadingCache.get\u5DF2\u7ECF\u9000\u51FA</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>v <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5176\u4ED6\u7EBF\u7A0B\u5DF2\u7ECF\u5728\u521B\u5EFA\u5B9E\u4F8B,</span>
        <span class="token comment">// Another thread is already loading an instance</span>
        task <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">FutureTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> v<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5982\u679Cv\u4E0D\u5B58\u5728, \u53EF\u4EE5\u7406\u89E3\u4E3Amiss v\u4E4B\u540E\u7B2C\u4E00\u6B21\u6267\u884CcreateEntry</span>
        <span class="token comment">// \u7B2C\u4E00\u6B21\u521B\u5EFA, \u5148\u521B\u5EFAFutureTask\u4F5C\u4E3Av, \u5E76\u5C06\u5176\u653E\u5165\u7F13\u5B58map\u4E2D, \u7528\u6765\u9632\u6B62\u5176\u4ED6\u7EBF\u7A0B\u8FDB\u5165\u5230\u8FD9\u4E2A\u4EE3\u7801\u5757\u6267\u884C\u521B\u5EFA</span>
        task <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FutureTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Callable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">public</span> <span class="token class-name">V</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u6267\u884C\u4EE3\u7406\u7C7B\u521B\u5EFA, \u8FD9\u4E2Aloader\u9700\u8981\u770BClassLoaderData\u7684\u6784\u9020\u5668, \u6B64\u5904\u7684\u51FD\u6570\u5B9E\u9645\u662FFunction&lt;AbstractClassGenerator, Object&gt;</span>
                <span class="token comment">// \u5176\u6838\u5FC3\u76EE\u7684\u5728\u4E8E\u6267\u884C gen.generate(ClassLoaderData.this)</span>
                <span class="token keyword">return</span> loader<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Object</span> prevTask <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">putIfAbsent</span><span class="token punctuation">(</span>cacheKey<span class="token punctuation">,</span> task<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u653E\u5165\u65F6\u5019, \u5DF2\u7ECF\u5B58\u5728\u4E00\u4E2Atask, \u56E0\u4E3A\u4E0A\u9762\u90A3\u884C\u4EE3\u7801\u4E5F\u662F\u6709\u53EF\u80FD\u88AB\u591A\u4E2A\u7EBF\u7A0B\u6267\u884C\u7684.</span>
        <span class="token comment">// \u56E0\u4E3A\u591A\u4E2A\u7EBF\u7A0B\u53EF\u80FD\u540C\u65F6\u83B7\u53D6\u5230v=null, \u56E0\u6B64task\u88AB\u5176\u4ED6\u7EBF\u7A0B\u653E\u5165\u4E5F\u662F\u6709\u53EF\u80FD\u7684</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>prevTask <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// creator does the load</span>
            creator <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token comment">// \u6267\u884C\u5F53\u524Dtask</span>
            task<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>prevTask <span class="token keyword">instanceof</span> <span class="token class-name">FutureTask</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u4E4B\u524D\u653E\u5165\u4E86task, \u4F7F\u7528\u539F\u59CB\u7684task\u76F8\u5F53\u4E8Ev != null\u4E2D\u7684\u903B\u8F91</span>
            task <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">FutureTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> prevTask<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5DF2\u7ECF\u751F\u6210\u4E86v</span>
            <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">V</span><span class="token punctuation">)</span> prevTask<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u6784\u5EFA\u6700\u7EC8\u7ED3\u679C</span>
    <span class="token class-name">V</span> result<span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u963B\u585E, \u83B7\u53D6\u751F\u6210\u4EE3\u7406\u7C7B\u5BF9\u8C61</span>
        result <span class="token operator">=</span> task<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span><span class="token string">&quot;Interrupted while loading cache item&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ExecutionException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Throwable</span> cause <span class="token operator">=</span> e<span class="token punctuation">.</span><span class="token function">getCause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>cause <span class="token keyword">instanceof</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">RuntimeException</span><span class="token punctuation">)</span> cause<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span><span class="token string">&quot;Unable to load cache item&quot;</span><span class="token punctuation">,</span> cause<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// TODO creator\u4E3Afalse, \u6700\u7EC8\u7ED3\u679C\u4E0D\u653E\u5165\u7F13\u5B58? \u6709\u70B9\u61F5\u903C</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>creator<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>cacheKey<span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4EE5\u4E0A\u4F7F\u7528\u7F13\u5B58\u548C\u4E0D\u4F7F\u7528\u7F13\u5B58\u7684\u5206\u6790\u5C31\u544A\u4E00\u6BB5\u843D.</p><p>\u6211\u4EEC\u7EE7\u7EED\u770B\u4EE3\u7406\u7C7B\u7684\u751F\u6210\u4E4B\u524D\u6211\u4EEC\u5DF2\u7ECF\u5206\u6790\u5230\u7B56\u7565\u7C7B<code>DefaultGeneratorStrategy</code>\u90A3\u90E8\u5206\u4E86. \u7EE7\u7EED\u770B<code>generateClass</code>, \u6211\u4EEC\u770B\u4ED6\u7684\u4E00\u4E2A\u5B9E\u73B0<code>net.sf.cglib.core.KeyFactory.Generator#generateClass</code>. \u4EE3\u7801\u6709\u70B9\u591A, \u5176\u6838\u5FC3\u601D\u60F3\u5728\u4E8E\u901A\u8FC7\u64CD\u4F5Casm\u63A7\u5236\u4EE3\u7801\u7684\u751F\u6210.</p><h2 id="jdk\u52A8\u6001\u4EE3\u7406\u4E0Ecglib\u52A8\u6001\u4EE3\u7406" tabindex="-1"><a class="header-anchor" href="#jdk\u52A8\u6001\u4EE3\u7406\u4E0Ecglib\u52A8\u6001\u4EE3\u7406" aria-hidden="true">#</a> jdk\u52A8\u6001\u4EE3\u7406\u4E0Ecglib\u52A8\u6001\u4EE3\u7406</h2><ol><li>cglib\u52A8\u6001\u4EE3\u7406\u57FA\u4E8E\u7EE7\u627F, \u56E0\u6B64\u65E0\u6CD5\u4EE3\u7406final\u65B9\u6CD5, jdk\u52A8\u6001\u4EE3\u7406\u57FA\u4E8E\u63A5\u53E3. cglib\u4E5F\u53EF\u4EE5\u8BBE\u7F6E\u901A\u8FC7\u63A5\u53E3\u4EE3\u7406.</li><li>cglib\u52A8\u6001\u4EE3\u7406\u80FD\u5B9E\u73B0\u57FA\u4E8E\u65B9\u6CD5\u7EA7\u522B\u7684\u62E6\u622A\u5904\u7406, \u9700\u8981\u914D\u5408CallbackFilter\u5E76\u63D0\u4F9BCallbacks, \u51C6\u786E\u6765\u8BF4\u662F\u53EF\u4EE5\u5728\u65B9\u6CD5\u7EA7\u522B\u4E0A\u52A8\u6001\u6307\u5B9A\u56DE\u8C03</li><li>\u4EE3\u7406\u7C7B\u751F\u6210\u4E0A, jdk\u52A8\u6001\u4EE3\u7406\u7EAF\u624B\u64B8, cglib\u5219\u4F7F\u7528\u4E86asm</li><li>\u6574\u4F53\u6765\u8BF4cglib\u8981\u6BD4\u524D\u8005\u66F4\u52A0\u7075\u6D3B, \u53EF\u5B9A\u5236\u5316\u66F4\u5F3A, \u6BD4\u5982\u7C7B\u540D\u751F\u6210\u7B56\u7565, \u7C7B\u751F\u6210\u7B56\u7565, \u7F13\u5B58\u4F7F\u7528\u7B49\u7B49.</li><li>\u6027\u80FD\u4E0A, \u4ECE\u7F51\u4E0A\u627E\u5230\u7684\u8D44\u6599\u6765\u770B, \u4E0D\u6613\u6BD4\u8F83. (\u6BD5\u7ADF\u4E5F\u6CA1\u89C1\u8FC7\u4EC0\u4E48\u6570\u636E) Cglib\u6BD4JDK\u5FEB\uFF1F 1\u3001cglib\u5E95\u5C42\u662FASM\u5B57\u8282\u7801\u751F\u6210\u6846\u67B6\uFF0C\u4F46\u662F\u5B57\u8282\u7801\u6280\u672F\u751F\u6210\u4EE3\u7406\u7C7B\uFF0C\u5728JDL1.6\u4E4B\u524D\u6BD4\u4F7F\u7528java\u53CD\u5C04\u7684\u6548\u7387\u8981\u9AD8 2\u3001\u5728jdk6\u4E4B\u540E\u9010\u6B65\u5BF9JDK\u52A8\u6001\u4EE3\u7406\u8FDB\u884C\u4E86\u4F18\u5316\uFF0C\u5728\u8C03\u7528\u6B21\u6570\u6BD4\u8F83\u5C11\u65F6\u6548\u7387\u9AD8\u4E8Ecglib\u4EE3\u7406\u6548\u7387 3\u3001\u53EA\u6709\u5728\u5927\u91CF\u8C03\u7528\u7684\u65F6\u5019cglib\u7684\u6548\u7387\u9AD8\uFF0C\u4F46\u662F\u57281.8\u7684\u65F6\u5019JDK\u7684\u6548\u7387\u5DF2\u9AD8\u4E8Ecglib</li></ol>`,41),k={href:"https://www.cnblogs.com/sandaman2019/p/12636727.html",target:"_blank",rel:"noopener noreferrer"},r=n("h2",{id:"end",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#end","aria-hidden":"true"},"#"),s(" end")],-1),d=n("p",null,"\u4E0B\u4E00\u7BC7\u4E3B\u8981\u8BB2cglib\u7684\u56DE\u8C03\u5668, \u4EE5\u53CA\u5176\u4ED6\u5B9A\u5236\u64CD\u4F5C. \u672C\u6587\u4E2D\u7684todo\u6709\u5F85\u8FDB\u4E00\u6B65\u7814\u7A76, \u5982\u679C\u66F4\u65B0\u4F1A\u53D1\u516C\u544A\u901A\u77E5.",-1);function v(m,b){const a=l("ExternalLinkIcon");return p(),e("div",null,[u,n("p",null,[s("\u53EF\u4EE5\u53C2\u8003"),n("a",k,[s("Cglib\u548Cjdk\u52A8\u6001\u4EE3\u7406\u7684\u533A\u522B"),c(a)])]),r,d])}const w=t(i,[["render",v],["__file","cglib.html.vue"]]);export{w as default};
