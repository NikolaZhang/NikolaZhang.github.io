const t=JSON.parse('{"key":"v-11484dc0","path":"/posts/pattern/brigth-pattern.html","title":"brigth pattern","lang":"en-US","frontmatter":{"isOriginal":true,"title":"brigth pattern","date":"2018-12-05T00:00:00.000Z","tag":["brigth pattern"],"category":"技术","description":"桥梁模式的介绍和实现","image":"http://image.nikolazhang.top/wallhaven-nrwq11.jpg","head":[["meta",{"property":"og:url","content":"https://nikolazhang.github.io/posts/pattern/brigth-pattern.html"}],["meta",{"property":"og:title","content":"brigth pattern"}],["meta",{"property":"og:description","content":"桥梁模式的介绍和实现"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-06-09T00:57:17.000Z"}],["meta",{"property":"article:author","content":"我小叮当、"}],["meta",{"property":"article:tag","content":"brigth pattern"}],["meta",{"property":"article:published_time","content":"2018-12-05T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-09T00:57:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"brigth pattern\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2018-12-05T00:00:00.000Z\\",\\"dateModified\\":\\"2023-06-09T00:57:17.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"我小叮当、\\",\\"url\\":\\"https://nikolazhang.github.io\\"}]}"]]},"headers":[{"level":2,"title":"我们的厂房长这样","slug":"我们的厂房长这样","link":"#我们的厂房长这样","children":[]},{"level":2,"title":"CarA长这样","slug":"cara长这样","link":"#cara长这样","children":[]},{"level":2,"title":"CarA下扩展个产品吧，这个很easy","slug":"cara下扩展个产品吧-这个很easy","link":"#cara下扩展个产品吧-这个很easy","children":[]},{"level":2,"title":"实实在在的车房","slug":"实实在在的车房","link":"#实实在在的车房","children":[]},{"level":2,"title":"测试","slug":"测试","link":"#测试","children":[]},{"level":2,"title":"结果","slug":"结果","link":"#结果","children":[]},{"level":2,"title":"uml","slug":"uml","link":"#uml","children":[]}],"git":{"createdTime":1686272237000,"updatedTime":1686272237000,"contributors":[{"name":"dewy yr","email":"nikolazhang@163.com","commits":1}]},"readingTime":{"minutes":2.57,"words":770},"filePathRelative":"posts/pattern/brigth-pattern.md","localizedDate":"December 5, 2018","excerpt":"<blockquote>\\n<p>桥梁模式提供了一种弱类间关系，关联关系。P.S.:在设计模式中类与类之间的关系主要有6种：依赖、关联、聚合、组合、继承、实现，它们之间的耦合度依次增加。在设计模式之禅的案例中，子类必须实现抽象父类中的所有方法，父类抽象方法的变更，必然导致子类的变更。这是一种强关联关系。强关联有必然使我们的系统不易扩展。所以桥梁模式为化解强关联提供了一种解决方案。</p>\\n</blockquote>\\n<!--more-->\\n<blockquote>\\n<p>大致的思路应该是这样。首先将程序中容易变更，或者以后需要扩展的部分提取出来，将扩展方法抽象，并封装到一个抽象类中。这个抽象类自然要关联到原来的类中。这样程序从继承会降低到关联（程序中具体是组合关系）关系。</p>\\n</blockquote>"}');export{t as data};
