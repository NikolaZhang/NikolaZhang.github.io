import{_ as t}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as e,c as o,a as s,b as n,d as c,e as a,r as l}from"./app.4001f435.js";const u={},i=a(`<blockquote><p>\u4E3B\u8981\u4ECB\u7ECD\u4E00\u4E0B\u7EA2\u9ED1\u6811\u7684\u81EA\u5E73\u8861\u5B9E\u73B0. hashmap\u4E2D\u5B9E\u73B0\u81EA\u5E73\u8861\u4E3B\u8981\u4F9D\u9760<code>balanceInsertion</code>\u548C <code>balanceDeletion</code> \u5206\u522B\u5BF9\u5E94\u589E\u52A0\u548C\u5220\u9664\u65F6\u5019\u7684\u60C5\u51B5. <code>rotateLeft</code>\u548C<code>rotateRight</code>\u662F\u5DE6\u65CB\u548C\u53F3\u65CB\u64CD\u4F5C, \u8FD9\u4E00\u7BC7\u4E3B\u8981\u8BB2<code>balanceInsertion</code>, <code>rotateLeft</code>\u548C<code>rotateRight</code></p></blockquote><h2 id="balanceinsertion" tabindex="-1"><a class="header-anchor" href="#balanceinsertion" aria-hidden="true">#</a> balanceInsertion</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token function">balanceInsertion</span><span class="token punctuation">(</span><span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> root<span class="token punctuation">,</span> <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u65B9\u6CD5\u7684\u53C2\u6570\u6709\u4E24\u4E2A\u4E00\u4E2A\u662F\u6839\u8282\u70B9, \u4E00\u4E2A\u662F\u65B0\u63D2\u5165\u7684\u8282\u70B9.</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>x<span class="token punctuation">.</span>red <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> xp<span class="token punctuation">,</span> xpp<span class="token punctuation">,</span> xppl<span class="token punctuation">,</span> xppr<span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53\u6709\u4E00\u4E2A\u8282\u70B9\u63D2\u5165\u7684\u65F6\u5019\u8FD9\u4E2A\u8282\u70B9\u9ED8\u8BA4\u662F\u7EA2\u8272\u7684. \u56E0\u4E3A\u7EA2\u8272\u4E0D\u4F1A\u5BFC\u81F4\u7EA2\u9ED1\u6811\u8DEF\u5F84\u4E0A\u9ED1\u8272\u8282\u70B9\u4E0D\u4E00\u81F4. \u53D8\u8272\u76F8\u5BF9\u4E8E\u6539\u53D8\u8282\u70B9\u8981\u66F4\u5BB9\u6613. \u8FD9\u4E2A\u6211\u4EEC\u5728\u7EA2\u9ED1\u6811\u7B80\u4ECB\u7684\u90A3\u7BC7\u6587\u7AE0\u4E2D\u5C31\u63D0\u5230\u8FC7. \u8FD9\u91CC\u4E0D\u518D\u8868\u8FF0.</p><h3 id="\u8282\u70B9\u8BBE\u7F6E" tabindex="-1"><a class="header-anchor" href="#\u8282\u70B9\u8BBE\u7F6E" aria-hidden="true">#</a> \u8282\u70B9\u8BBE\u7F6E</h3><p>\u4E4B\u540E\u904D\u5386\u7EA2\u9ED1\u6811, \u786E\u5B9A\u65B0\u8282\u70B9\u5E94\u8BE5\u6DFB\u52A0\u5230\u4EC0\u4E48\u4F4D\u7F6E\u4E0A. \u5177\u4F53\u903B\u8F91\u89C1\u4E0B:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>xp <span class="token operator">=</span> x<span class="token punctuation">.</span>parent<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    x<span class="token punctuation">.</span>red <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> x<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>xp<span class="token punctuation">.</span>red <span class="token operator">||</span> <span class="token punctuation">(</span>xpp <span class="token operator">=</span> xp<span class="token punctuation">.</span>parent<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> root<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>\u5982\u679C\u6700\u65B0\u7684\u8282\u70B9\u7684\u7236\u8282\u70B9\u4E0D\u5B58\u5728, \u5219\u5C06\u8BE5\u8282\u70B9\u8BBE\u7F6E\u4E3A\u7236\u8282\u70B9, \u989C\u8272\u4E3A\u9ED1\u8272. \u76F4\u63A5\u8FD4\u56DE.</li><li>\u5982\u679C\u5F53\u524D\u8282\u70B9\u5B58\u5728\u7236\u8282\u70B9, \u5E76\u4E14\u7236\u8282\u70B9\u4E3A\u9ED1\u8272\u6216\u8005\u7237\u7237\u8282\u70B9(\u59D1\u4E14\u5C31\u7237\u7237\u5427)\u4E0D\u5B58\u5728. \u90A3\u4E48\u76F4\u63A5\u8FD4\u56DEroot. \u4E3A\u4EC0\u4E48\u76F4\u63A5\u8FD4\u56DE\u5462? \u56E0\u4E3A\u8FD9\u79CD\u60C5\u51B5\u4E0B\u4E0D\u7528\u8C03\u6574\u6811\u7684\u7ED3\u6784, \u5176\u672C\u8EAB\u5C31\u662F\u4E2A\u7EA2\u9ED1\u6811. \u53EF\u4EE5\u53C2\u8003\u4E0B\u56FE\u7684\u8FD9\u79CD\u60C5\u51B5. <img src="https://tech.nikolazhang.top/2020-01-18-13-21-46.png" alt="2020-01-18-13-21-46" loading="lazy"></li></ol><h4 id="\u6CE8\u610F" tabindex="-1"><a class="header-anchor" href="#\u6CE8\u610F" aria-hidden="true">#</a> \u6CE8\u610F</h4><p>\u8FD9\u91CC\u8981\u6CE8\u610F\u4E00\u4E0B, x\u7684\u7236\u8282\u70B9\u5728\u8FDB\u5165\u8FD9\u4E2A\u65B9\u6CD5\u4E4B\u524D\u4F1A\u8BBE\u7F6E\u4E0A\u7684, \u53EF\u4EE5\u53C2\u8003\u5982\u4E0B\u4EE3\u7801\u7247\u6BB5.</p><ol><li><p>\u4E0B\u9762\u7684\u8FD9\u6BB5\u4EE3\u7801\u662F\u4E0A\u7BC7\u6587\u7AE0\u6211\u4EEC\u4ECB\u7ECD<code>treeify</code>\u4E2D\u7684\u4EE3\u7801, \u53EF\u4EE5\u770B\u5230\u662F\u5148\u6811\u5316, \u8FD9\u4E2A\u65F6\u5019\u751F\u6210\u7684\u5E76\u4E0D\u662F\u4E2A\u7EA2\u9ED1\u6811, \u800C\u53EA\u662F\u4E00\u4E2ABST\u6811. \u4E4B\u540E\u8FDB\u884C\u81EA\u5E73\u8861\u53D8\u6210\u7EA2\u9ED1\u6811. \u4E0A\u6B21\u8BB2\u8FD9\u4E2A\u65B9\u6CD5\u53EF\u80FD\u6CA1\u63D0\u53CA.</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> p <span class="token operator">=</span> root<span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> dir<span class="token punctuation">,</span> ph<span class="token punctuation">;</span>
    <span class="token class-name">K</span> pk <span class="token operator">=</span> p<span class="token punctuation">.</span>key<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>ph <span class="token operator">=</span> p<span class="token punctuation">.</span>hash<span class="token punctuation">)</span> <span class="token operator">&gt;</span> h<span class="token punctuation">)</span>
        dir <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>ph <span class="token operator">&lt;</span> h<span class="token punctuation">)</span>
        dir <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>kc <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span>
                <span class="token punctuation">(</span>kc <span class="token operator">=</span> <span class="token function">comparableClassFor</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">||</span>
                <span class="token punctuation">(</span>dir <span class="token operator">=</span> <span class="token function">compareComparables</span><span class="token punctuation">(</span>kc<span class="token punctuation">,</span> k<span class="token punctuation">,</span> pk<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
        dir <span class="token operator">=</span> <span class="token function">tieBreakOrder</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> pk<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> xp <span class="token operator">=</span> p<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>p <span class="token operator">=</span> <span class="token punctuation">(</span>dir <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">?</span> p<span class="token punctuation">.</span>left <span class="token operator">:</span> p<span class="token punctuation">.</span>right<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        x<span class="token punctuation">.</span>parent <span class="token operator">=</span> xp<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>dir <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span>
            xp<span class="token punctuation">.</span>left <span class="token operator">=</span> x<span class="token punctuation">;</span>
        <span class="token keyword">else</span>
            xp<span class="token punctuation">.</span>right <span class="token operator">=</span> x<span class="token punctuation">;</span>
        root <span class="token operator">=</span> <span class="token function">balanceInsertion</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u8FD8\u6709\u53E6\u4E00\u4E2A\u8C03\u7528\u4F4D\u7F6E<code>putTreeVal</code>\u65B9\u6CD5, \u4E5F\u662F\u6211\u4EEC\u5F88\u4E45\u4E4B\u524D\u5C31\u4ECB\u7ECD\u7684\u65B9\u6CD5\u4E86. \u518D\u63D0\u4E00\u53E5, \u8FD9\u4E2A\u5730\u65B9\u5F88\u660E\u663E\u5C31\u7EF4\u62A4\u4E86\u94FE\u8868\u548C\u7EA2\u9ED1\u6811. \u540C\u6837\u5728\u8C03\u7528<code>balanceInsertion</code>\u4E4B\u524D\u6811\u4E5F\u53EA\u662F\u4E00\u4E2ABST\u6811. \u7EA2\u9ED1\u6811\u4E5F\u662F\u5728<code>balanceInsertion</code>\u4E4B\u540E\u624D\u751F\u6210\u7684. ok?</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> xp <span class="token operator">=</span> p<span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>p <span class="token operator">=</span> <span class="token punctuation">(</span>dir <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">?</span> p<span class="token punctuation">.</span>left <span class="token operator">:</span> p<span class="token punctuation">.</span>right<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> xpn <span class="token operator">=</span> xp<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> x <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">newTreeNode</span><span class="token punctuation">(</span>h<span class="token punctuation">,</span> k<span class="token punctuation">,</span> v<span class="token punctuation">,</span> xpn<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>dir <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span>
        xp<span class="token punctuation">.</span>left <span class="token operator">=</span> x<span class="token punctuation">;</span>
    <span class="token keyword">else</span>
        xp<span class="token punctuation">.</span>right <span class="token operator">=</span> x<span class="token punctuation">;</span>
    xp<span class="token punctuation">.</span>next <span class="token operator">=</span> x<span class="token punctuation">;</span>
    x<span class="token punctuation">.</span>parent <span class="token operator">=</span> x<span class="token punctuation">.</span>prev <span class="token operator">=</span> xp<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>xpn <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>xpn<span class="token punctuation">)</span><span class="token punctuation">.</span>prev <span class="token operator">=</span> x<span class="token punctuation">;</span>
    <span class="token function">moveRootToFront</span><span class="token punctuation">(</span>tab<span class="token punctuation">,</span> <span class="token function">balanceInsertion</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><p>\u5982\u679C\u4F60\u5FD8\u4E86, \u53EF\u4EE5\u518D\u770B\u4E00\u4E0B\u4E0A\u9762\u7684\u4E24\u4E2A\u65B9\u6CD5. \u7EE7\u7EED<code>balanceInsertion</code>\u7684\u4ECB\u7ECD:</p><h3 id="\u7EE7\u7EED" tabindex="-1"><a class="header-anchor" href="#\u7EE7\u7EED" aria-hidden="true">#</a> \u7EE7\u7EED</h3><p>\u6392\u9664\u4E86\u7236\u8282\u70B9\u4E3A\u7A7A \u548C \u7236\u8282\u70B9\u4E3A\u9ED1\u8272\u6216\u8005\u7237\u7237\u8282\u70B9\u4E3A\u7A7A\u4E24\u79CD\u60C5\u51B5\u4E4B\u540E, \u4E0B\u9762\u5C31\u662F\u901A\u5E38\u60C5\u51B5\u4E0B\u7684\u5904\u7406.</p><p>\u4E0B\u9762\u60C5\u51B5\u51FA\u73B0\u7684\u524D\u63D0\u662F\u7236\u8282\u70B9\u975E\u7A7A\u4E14\u7236\u8282\u70B9\u4E3A\u7EA2\u8272\u4E14\u7237\u7237\u8282\u70B9\u4E3A\u975E\u7A7A. \u8FD9\u5C31\u662F\u5728\u4E00\u4E2A\u7EA2\u9ED1\u6811\u4E0A\u6DFB\u52A0\u65B0\u8282\u70B9\u7684\u60C5\u5F62.</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>xp <span class="token operator">==</span> <span class="token punctuation">(</span>xppl <span class="token operator">=</span> xpp<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>xppr <span class="token operator">=</span> xpp<span class="token punctuation">.</span>right<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> xppr<span class="token punctuation">.</span>red<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        xppr<span class="token punctuation">.</span>red <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        xp<span class="token punctuation">.</span>red <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        xpp<span class="token punctuation">.</span>red <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        x <span class="token operator">=</span> xpp<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li><p>\u7237\u7237\u8282\u70B9\u7684\u5DE6\u8282\u70B9\u4E3A\u5F53\u524D\u8282\u70B9\u7684\u7236\u8282\u70B9, \u5373\u4E0B\u56FE\u8FD9\u79CD\u60C5\u51B5: <img src="https://tech.nikolazhang.top/2020-01-18-15-10-30.png" alt="2020-01-18-15-10-30" loading="lazy"> \u8FD9\u4E2A\u65F6\u5019\u8981\u8003\u8651\u4E24\u79CD\u60C5\u51B5:</p><ul><li><p><code>(xppr = xpp.right) != null &amp;&amp; xppr.red</code> \u5F53\u524D\u8282\u70B9\u7684\u7237\u7237\u8282\u70B9\u7684\u53F3\u5B50\u8282\u70B9\u975E\u7A7A, \u4E14\u4E3A\u7EA2\u8272. \u6B64\u65F6\u8FDB\u884C\u7684\u5904\u7406\u4E3A: \u7236\u8282\u70B9, \u53D4\u53D4\u8282\u70B9\u53D8\u6210\u9ED1\u8272, \u7237\u7237\u8282\u70B9\u53D8\u6210\u7EA2\u8272. \u5F53\u524D\u8282\u70B9\u66FF\u6362\u4E3A\u7237\u7237\u8282\u70B9. \u8FD9\u79CD\u60C5\u51B5\u5373: \u5728\u4E0B\u56FE\u4E2D\u63D2\u5165\u8282\u70B9<code>1</code>: <img src="https://tech.nikolazhang.top/2020-01-18-15-21-33.png" alt="2020-01-18-15-21-33" loading="lazy"> \u5904\u7406\u6B65\u9AA4\u53EF\u4EE5\u89C1\u4E0B\u56FE: <img src="https://tech.nikolazhang.top/2020-01-18-17-33-32.png" alt="2020-01-18-17-33-32" loading="lazy"><img src="https://tech.nikolazhang.top/2020-01-18-17-34-18.png" alt="2020-01-18-17-34-18" loading="lazy"><code>x = xpp;</code>\u8FD9\u4E00\u6B65\u7684\u4F5C\u7528\u662F\u4E3A\u4E86\u8FBE\u6210\u8FED\u4EE3. \u5F53\u4E0B\u6B21\u8FDB\u5165\u5FAA\u73AF\u82E5\u51FA\u73B0: <img src="https://tech.nikolazhang.top/2020-01-18-17-50-16.png" alt="2020-01-18-17-50-16" loading="lazy"> \u5219\u7EA2\u9ED1\u6811\u81EA\u5E73\u8861\u7ED3\u675F. \u6211\u4EEC\u4E3E\u5F97\u8FD9\u4E2A\u4F8B\u5B50\u5C31\u8FBE\u6210\u4E86\u9000\u51FA\u6761\u4EF6. \u5373\u5F53\u524D\u8282\u70B9(<code>x = xpp;</code>\u6267\u884C\u4E4B\u540E\u7684x)\u7684\u7236\u8282\u70B9\u4E3A\u7A7A.</p></li><li><p>\u5F53\u524D\u8282\u70B9\u7684\u7237\u7237\u8282\u70B9\u7684\u53F3\u8282\u70B9\u4E3A\u7A7A\u6216\u8005\u53F3\u8282\u70B9\u5B58\u5728\u4F46\u4E3A\u9ED1\u8272. \u8FD9\u4E2A\u65F6\u5019\u8FDB\u884C\u5982\u4E0B\u5904\u7406:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">==</span> xp<span class="token punctuation">.</span>right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    root <span class="token operator">=</span> <span class="token function">rotateLeft</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> x <span class="token operator">=</span> xp<span class="token punctuation">)</span><span class="token punctuation">;</span>
    xpp <span class="token operator">=</span> <span class="token punctuation">(</span>xp <span class="token operator">=</span> x<span class="token punctuation">.</span>parent<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> xp<span class="token punctuation">.</span>parent<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>xp <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    xp<span class="token punctuation">.</span>red <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>xpp <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        xpp<span class="token punctuation">.</span>red <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        root <span class="token operator">=</span> <span class="token function">rotateRight</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> xpp<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u5F53\u524D\u8282\u70B9\u4E3A\u7236\u8282\u70B9\u7684\u53F3\u5B50\u8282\u70B9, \u5219\u8FDB\u884C\u5DE6\u65CB, \u5DE6\u65CB\u4E4B\u540E\u91CD\u65B0\u8BBE\u7F6E\u5F53\u524D\u8282\u70B9\u7684\u7236\u8282\u70B9xp\u53D8\u91CF\u548C\u7237\u7237\u8282\u70B9xpp\u53D8\u91CF. \u5982\u679C\u5F53\u524D\u7684\u7236\u8282\u70B9\u4E3Anull\u5219, \u5176\u7237\u7237\u4E5F\u4E3Anull, \u5426\u5219\u8BBE\u7F6E\u4E3Axp\u7684\u7236\u8282\u70B9. \u5BF9\u7236\u8282\u70B9\u4E0D\u4E3A\u7A7A\u6211\u4EEC\u8FD8\u8981\u8FDB\u884C\u5904\u7406. \u9996\u5148\u7236\u8282\u70B9\u4E0D\u80FD\u4E3A\u7EA2\u8272\u5426\u5219\u548C\u5B50\u8282\u70B9\u7EA2\u8272\u51B2\u7A81. \u5982\u679C\u7237\u7237\u8282\u70B9\u4E0D\u4E3A\u7A7A\u6211\u4EEC\u540C\u6837\u8981\u8FDB\u884C\u5904\u7406, \u5C06\u7237\u7237\u8BBE\u7F6E\u4E3A\u7EA2\u8272, \u56E0\u4E3A\u7EA2\u8272\u4E0D\u4F1A\u589E\u52A0\u8DEF\u5F84\u4E0A\u7684\u9ED1\u8272\u8282\u70B9\u6570. \u4E4B\u540E\u8FDB\u884C\u53F3\u65CB.</p></li></ul></li><li><p>\u5F53<code>xp == (xppl = xpp.left</code>\u4E3A\u5426\u65F6\u7684\u60C5\u5F62\u4E0E\u4E0A\u9762\u6709\u4E9B\u7C7B\u4F3C\u4F46\u662F\u4E00\u4E9B\u5DE6\u65CB\u53F3\u65CB\u64CD\u4F5C\u662F\u76F8\u53CD\u7684. \u8FD9\u91CC\u5C31\u4E0D\u518D\u5206\u6790\u4E86.</p></li></ol><h3 id="\u4E3A\u4E86\u66F4\u597D\u5730\u7406\u89E3" tabindex="-1"><a class="header-anchor" href="#\u4E3A\u4E86\u66F4\u597D\u5730\u7406\u89E3" aria-hidden="true">#</a> \u4E3A\u4E86\u66F4\u597D\u5730\u7406\u89E3</h3><p>\u60F3\u5FC5\u4F60\u5DF2\u7ECF\u61F5\u903C\u4E86, \u56E0\u4E3A\u5982\u679C\u6211\u81EA\u5DF1\u770B\u6211\u4E5F\u4F1A\u61F5\u903C. \u4E0A\u9762\u7684\u7ED3\u8BBA\u90FD\u662F\u6211\u5BF9\u7167\u7740\u7A0B\u5E8F\u5728\u5728\u7EBF\u6570\u636E\u7ED3\u6784\u6A21\u62DF\u8FC7\u7684. \u4E4B\u540E\u7ED9\u51FA\u7684\u5206\u6790. \u54C8\u54C8\u54C8\u54C8~</p><p>\u4E0A\u4E00\u8282\u7EA2\u9ED1\u6811\u7684\u81EA\u5E73\u8861\u903B\u8F91\u53EF\u4EE5\u53C2\u8003\u5982\u4E0B\u6D41\u7A0B\u56FE, \u8FD9\u4E2A\u7EC8\u4E8E\u662F\u4EBA\u4EBA\u7686\u53EF\u770B\u61C2\u7684\u4E86: <img src="https://tech.nikolazhang.top/\u7EA2\u9ED1\u6811\u53D8\u6362.bmp" alt="\u7EA2\u9ED1\u6811\u53D8\u6362" loading="lazy"> \u8FD9\u91CC\u6211\u5BF9\u5F53\u524D\u8282\u70B9\u4E3A\u5DE6\u7236\u4E0A\u7684\u60C5\u51B5\u8FDB\u884C\u7684\u4E00\u4E9B\u4E3E\u4F8B. \u800C\u4E14\u7559\u4E0B\u4E86\u4E00\u4E9B\u7A7A\u767D\u7ED9\u613F\u610F\u8FDB\u884C\u8865\u5145\u7684\u540C\u5FD7.</p>`,22),k={href:"https://tech.nikolazhang.top/%E7%BA%A2%E9%BB%91%E6%A0%91%E5%8F%98%E6%8D%A2.bmp",target:"_blank",rel:"noopener noreferrer"},r=s("img",{src:"https://tech.nikolazhang.top/\u82B1Q.jpg",alt:"\u82B1Q",loading:"lazy"},null,-1),d=a(`<h3 id="\u8865\u5145" tabindex="-1"><a class="header-anchor" href="#\u8865\u5145" aria-hidden="true">#</a> \u8865\u5145</h3><p>\u8FD9\u91CC\u6211\u5728\u8BF4\u4E00\u4E0B\u56FE\u4E2D\u90A3\u4E2A\u6700\u5927\u7684\u7EA2\u9ED1\u6811\u4ECE\u4E00\u5F00\u59CB\u5230\u53D8\u6210\u56FE\u4E2D\u7684\u5F62\u72B6\u7684\u8FC7\u7A0B, \u89C1\u4E0B\u56FE: <img src="https://tech.nikolazhang.top/2020-01-18-21-22-52.png" alt="2020-01-18-21-22-52" loading="lazy"> \u4E00\u5F00\u59CB\u5728\u539F\u6765\u7EA2\u9ED1\u6811\u7684\u57FA\u7840\u4E0A\u6DFB\u52A0\u65B0\u8282\u70B9<code>5</code>, \u4E4B\u540E\u8FDB\u884C\u53D8\u8272\u5904\u7406, \u4E5F\u5C31\u662F\u8D70\u7684\u56FE\u4E2D\u6700\u5DE6\u8FB9\u7684\u90A3\u4E2A\u6D41\u7A0B\u903B\u8F91. <code>x=xpp</code>\u4E4B\u540E\u5F53\u524D\u8282\u70B9\u5C31\u53D8\u4E3A\u4E86<code>0030</code>, \u987A\u52BF\u5C31\u5F00\u59CB\u4E86\u7B2C\u4E8C\u6B21\u5FAA\u73AF. \u8FD9\u65F6\u5019\u5C31\u662F\u56FE\u4E2D\u7684<code>x == xp.right</code>\u4E3A\u5426\u7684\u903B\u8F91.</p><h2 id="rotateleft\u4E0Erotateright" tabindex="-1"><a class="header-anchor" href="#rotateleft\u4E0Erotateright" aria-hidden="true">#</a> rotateLeft\u4E0ErotateRight</h2><p>\u8F7B\u677E\u4E00\u4E0B, \u770B\u4E00\u770B<code>rotateLeft</code>\u4E0E<code>rotateRight</code>\u8FD9\u4E24\u4E2A\u65B9\u6CD5.</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token function">rotateLeft</span><span class="token punctuation">(</span><span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> root<span class="token punctuation">,</span>
                                        <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> p<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> r<span class="token punctuation">,</span> pp<span class="token punctuation">,</span> rl<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>r <span class="token operator">=</span> p<span class="token punctuation">.</span>right<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> root<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6BCB\u5EB8\u7F6E\u7591p\u4F20\u5165\u7A7A\u6211\u4EEC\u80AF\u5B9A\u4E0D\u7528\u8FDB\u884C\u5904\u7406, \u76F4\u63A5\u8FD4\u56DEroot\u5C31\u53EF\u4EE5\u4E86. \u6211\u4EEC\u4ED4\u7EC6\u770B\u4E0B<code>(r = p.right) != null</code>. \u8981\u77E5\u9053\u5DE6\u65CB\u4E4B\u540E\u5DE6\u5B50\u8282\u70B9\u662F\u8981\u53D8\u5230\u7236\u8282\u70B9\u7684\u53F3\u5B50\u8282\u70B9\u4E0A\u53BB. \u56E0\u6B64\u5982\u679C\u6CA1\u6709\u53F3\u5B50\u8282\u70B9\u90A3\u4E48\u8FD9\u4E2A\u6811\u5C31\u4E0D\u518D\u662F\u4E2A\u5E73\u8861\u4E8C\u53C9\u6811\u4E86. \u53EF\u4EE5\u53C2\u8003\u4E0B\u56FE: <img src="https://tech.nikolazhang.top/2020-01-18-23-07-05.png" alt="2020-01-18-23-07-05" loading="lazy"></p><p>\u660E\u767D\u4E86\u8FD9\u4E2A\u6761\u4EF6\u7684\u542B\u4E49, \u7EE7\u7EED\u5206\u6790\u4EE3\u7801\u5757\u91CC\u9762\u7684\u903B\u8F91:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>rl <span class="token operator">=</span> p<span class="token punctuation">.</span>right <span class="token operator">=</span> r<span class="token punctuation">.</span>left<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
    rl<span class="token punctuation">.</span>parent <span class="token operator">=</span> p<span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>pp <span class="token operator">=</span> r<span class="token punctuation">.</span>parent <span class="token operator">=</span> p<span class="token punctuation">.</span>parent<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
    <span class="token punctuation">(</span>root <span class="token operator">=</span> r<span class="token punctuation">)</span><span class="token punctuation">.</span>red <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>pp<span class="token punctuation">.</span>left <span class="token operator">==</span> p<span class="token punctuation">)</span>
    pp<span class="token punctuation">.</span>left <span class="token operator">=</span> r<span class="token punctuation">;</span>
<span class="token keyword">else</span>
    pp<span class="token punctuation">.</span>right <span class="token operator">=</span> r<span class="token punctuation">;</span>
r<span class="token punctuation">.</span>left <span class="token operator">=</span> p<span class="token punctuation">;</span>
p<span class="token punctuation">.</span>parent <span class="token operator">=</span> r<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u65F6\u5019\u518D\u628A\u6211\u4E4B\u524D\u753B\u7684\u90A3\u4E2A\u5DE6\u65CB\u7684\u56FE\u8D34\u4E0A: <img src="https://tech.nikolazhang.top/2020-01-18-22-16-07.png" alt="2020-01-18-22-16-07" loading="lazy"></p><p>\u4E4B\u524D\u8FD9\u4E2A\u65B9\u6CD5\u91CC\u5B9A\u4E49\u4E86\u51E0\u4E2A\u5C40\u90E8\u53D8\u91CF<code>TreeNode&lt;K,V&gt; r, pp, rl;</code> \u5BF9\u5E94\u6211\u4EEC\u56FE\u4E2D\u7684\u8282\u70B9 r=R, p=H, rl=RL, pp\u662FH\u7684\u7236\u8282\u70B9\u6211\u4EEC\u5C31\u79F0\u5176\u4E3A\u7237\u7237\u8282\u70B9\u5427(\u56FE\u4E2D\u6CA1\u6709\u753B\u51FA, \u4E0D\u8FC7\u4F60\u4E5F\u80FD\u60F3\u5230)</p><ol><li><code>r = p.right</code> \u5C06\u53F3\u5B50\u8282\u70B9\u63D0\u53D6\u51FA\u6765, \u8BBE\u7F6E\u53D8\u91CFr. \u8FD9\u662F\u5728\u8FD9\u4E00\u8282\u5F00\u59CB\u7684if\u4E2D\u8FDB\u884C\u64CD\u4F5C\u7684.</li><li><code>rl = p.right = r.left</code> \u5C06\u53F3\u5B50\u8282\u70B9\u7684\u5DE6\u5B50\u8282\u70B9\u63D0\u53D6\u4F5C\u4E3A\u7236\u8282\u70B9\u7684\u53F3\u5B50\u8282\u70B9, \u5E76\u8BBE\u7F6E\u53D8\u91CFrl. \u8FD9\u4E2A\u65F6\u5019\u5C06H\u548CRL\u8054\u7CFB\u4E86\u8D77\u6765.</li><li>\u5982\u679Crl\u5B58\u5728, \u5219rl\u7236\u8282\u70B9\u8BBE\u7F6E\u4E3Ap, \u8FD9\u4E2A\u65F6\u5019\u5207\u6362\u4E86\u56FE\u4E2DRL\u548CR\u7684\u5173\u7CFB.</li><li><code>pp = r.parent = p.parent</code>, \u539F\u5148\u7236\u8282\u70B9\u7684\u7236\u8282\u70B9\u8BBE\u7F6E\u4E3A\u5176\u53F3\u5B50\u8282\u70B9\u7684\u7236\u8282\u70B9, \u5E76\u8BBE\u7F6E\u53D8\u91CFpp. \u8FD9\u4E2A\u65F6\u5019\u5C06\u56FE\u4E2D\u7684R\u8282\u70B9\u548C\u6CA1\u753B\u51FA\u7684\u90A3\u4E2A\u8282\u70B9\u8FDE\u63A5\u4E86\u8D77\u6765. \u4E5F\u5C31\u662F\u7B2C\u4E09\u4E2A\u56FE\u4E2D\u7684\u7237\u7237\u8282\u70B9\u7684\u5B50\u8282\u70B9\u6307\u5411\u5230R</li><li>\u5982\u679Cpp\u4E3Anull, \u5C31\u8BF4\u660Er\u8282\u70B9\u5DF2\u7ECF\u53D8\u6210\u4E86\u6839\u8282\u70B9. \u8FD9\u4E2A\u65F6\u5019\u5C31\u91CD\u65B0\u8BBE\u7F6E\u6839\u8282\u70B9(<code>root = r</code>), \u5E76\u6D82\u9ED1.</li><li>\u4E4B\u540E\u6253\u65ADpp\u548Cp\u7684\u5173\u7CFB. \u5E76\u5C06pp\u548Cr\u7684\u5173\u7CFB\u5EFA\u7ACB\u8D77\u6765, \u867D\u7136\u6211\u4EEC\u5728\u7B2C4\u6B65\u5DF2\u7ECF\u660E\u786E\u4E86pp\u548Cr\u7684\u7236\u5B50\u5173\u7CFB, \u4F46\u662F\u7A76\u7ADF\u662F\u5DE6\u5B50\u8FD8\u662F\u53F3\u5B50\u8FD9\u4E2A\u5173\u7CFB\u6CA1\u6709\u660E\u786E, \u751A\u81F3pp\u548Cp\u8FD8\u79D8\u5BC6\u7684\u4FDD\u6301\u7740\u7236\u5B50(\u5DE6\u5B50or\u53F3\u5B50)\u5173\u7CFB.</li><li>\u5728r\u548Cp\u4E4B\u95F4\u5EFA\u7ACB\u5DE6\u5B50\u548C\u7236\u5B50\u5173\u7CFB.</li></ol><p>\u81F3\u6B64\u5DE6\u65CB\u7684\u6574\u4E2A\u8FC7\u7A0B\u4ECB\u7ECD\u5B8C\u6BD5, \u603B\u7684\u6765\u8BF4\u5F88\u6709\u5473\u9053, \u7236\u4EB2\u53D8\u5B59\u5B50, \u5144\u5F1F\u53D8\u5B59\u5B50..... \u6211\u5DF2\u7ECF\u7B11\u5F97\u4E0D\u884C\u4E86.</p><p>\u53F3\u65CB\u5C31\u4E0D\u8BF4\u4E86.</p><h2 id="get" tabindex="-1"><a class="header-anchor" href="#get" aria-hidden="true">#</a> get</h2><p>\u597D\u50CF\u8FD8\u6709get\u8FD9\u4E2A\u6BD4\u8F83\u91CD\u8981\u7684\u65B9\u6CD5\u6CA1\u63D0\u53CA, \u603B\u4E0D\u80FD\u5149\u77E5\u9053\u600E\u4E48put, \u4E0D\u77E5\u9053\u600E\u4E48get\u5427.</p><p>\u4ECEhashmap\u4E2D\u83B7\u53D6\u952E\u5BF9\u5E94\u7684\u503C\u7684\u65B9\u6CD5\u5982\u4E0B:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">V</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Object</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> e<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>e <span class="token operator">=</span> <span class="token function">getNode</span><span class="token punctuation">(</span><span class="token function">hash</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> e<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F60\u53EF\u4EE5\u731C\u4E00\u731CgetNode\u8FD9\u4E2A\u65B9\u6CD5\u4F1A\u662F\u4EC0\u4E48\u6837\u5B50\u7684. \u4EE5\u4E0B\u662F\u6211\u7684\u8BBE\u60F3:</p><ol><li>\u9996\u5148\u770B\u4E00\u4E0B\u65B9\u6CD5\u7684\u4F20\u5165\u53C2\u6570, hash(key), key. \u6211\u4EEC\u77E5\u9053\u901A\u8FC7hash &amp; (length - 1), \u6211\u4EEC\u53EF\u4EE5\u83B7\u53D6\u5230\u76EE\u6807\u5B58\u5728\u4E8Etable\u4E2D\u7684\u4F4D\u7F6E.</li><li>\u6709\u4E86\u8FD9\u4E2A\u4F4D\u7F6E\u5C31\u8981\u53D6\u51FA\u8FD9\u4E2A\u8282\u70B9\u5373: table[hash &amp; (length - 1)]</li><li>\u4E4B\u540E\u5224\u65AD\u5F53\u524D\u8282\u70B9\u4E3A\u94FE\u8868\u8FD8\u662FTreeNode, \u4E4B\u540E\u53EA\u9700\u8981\u6839\u636E\u4E0D\u540C\u7684\u7C7B\u578B\u8FDB\u884C\u904D\u5386, \u901A\u8FC7key\u8FDB\u884C\u6BD4\u8F83(\u6709\u53EF\u80FD\u6709\u6D89\u53CA\u5230\u6211\u4EEC\u4E4B\u524D\u770B\u5230\u90A3\u4E00\u5806if), \u5373\u53EF\u83B7\u53D6\u5230\u8282\u70B9.</li></ol><p>\u611F\u89C9\u6CA1\u4EC0\u4E48\u95EE\u9898(\u6211\u53EF\u4EE5\u53D1\u8A93, \u5199\u5230\u8FD9\u884C\u7684\u65F6\u5019, \u6211\u6CA1\u6709\u770B\u6E90\u7801\u4E2D\u7684<code>getNode</code>\u65B9\u6CD5), \u597D\u7684, ctrl + left click\u8FDB\u5165\u65B9\u6CD5:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">final</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token function">getNode</span><span class="token punctuation">(</span><span class="token keyword">int</span> hash<span class="token punctuation">,</span> <span class="token class-name">Object</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab<span class="token punctuation">;</span> <span class="token class-name">Node</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> first<span class="token punctuation">,</span> e<span class="token punctuation">;</span> <span class="token keyword">int</span> n<span class="token punctuation">;</span> <span class="token class-name">K</span> k<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>tab <span class="token operator">=</span> table<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>n <span class="token operator">=</span> tab<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span>
        <span class="token punctuation">(</span>first <span class="token operator">=</span> tab<span class="token punctuation">[</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> hash<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>first<span class="token punctuation">.</span>hash <span class="token operator">==</span> hash <span class="token operator">&amp;&amp;</span> <span class="token comment">// always check first node</span>
            <span class="token punctuation">(</span><span class="token punctuation">(</span>k <span class="token operator">=</span> first<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">==</span> key <span class="token operator">||</span> <span class="token punctuation">(</span>key <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> first<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e <span class="token operator">=</span> first<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>first <span class="token keyword">instanceof</span> <span class="token class-name">TreeNode</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>first<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTreeNode</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">do</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>hash <span class="token operator">==</span> hash <span class="token operator">&amp;&amp;</span>
                    <span class="token punctuation">(</span><span class="token punctuation">(</span>k <span class="token operator">=</span> e<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">==</span> key <span class="token operator">||</span> <span class="token punctuation">(</span>key <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token keyword">return</span> e<span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e <span class="token operator">=</span> e<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u989D, \u597D\u50CF\u6CA1\u6709\u7528\u90A3\u4E00\u5806\u6076\u5FC3\u7684if, \u6709\u70B9\u6253\u8138\u554A. \u{1F626} \u4F46\u662F............. \u5F53\u4F60\u8FDB\u53BB\u770B\u5230<code>getTreeNode</code>\u4E2D\u7684<code>find</code>\u65B9\u6CD5\u7684\u65F6\u5019\u662F\u4E0D\u662F\u5F88\u719F\u6089? \u54E6, \u8FD9\u8BE5\u6B7B\u7684if, \u8FD9\u719F\u6089\u7684\u5473\u9053. (\u5C40\u52BF\u9006\u8F6C \u{1F603} )</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">final</span> <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token function">find</span><span class="token punctuation">(</span><span class="token keyword">int</span> h<span class="token punctuation">,</span> <span class="token class-name">Object</span> k<span class="token punctuation">,</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> kc<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> p <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token keyword">do</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> ph<span class="token punctuation">,</span> dir<span class="token punctuation">;</span> <span class="token class-name">K</span> pk<span class="token punctuation">;</span>
        <span class="token class-name">TreeNode</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> pl <span class="token operator">=</span> p<span class="token punctuation">.</span>left<span class="token punctuation">,</span> pr <span class="token operator">=</span> p<span class="token punctuation">.</span>right<span class="token punctuation">,</span> q<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>ph <span class="token operator">=</span> p<span class="token punctuation">.</span>hash<span class="token punctuation">)</span> <span class="token operator">&gt;</span> h<span class="token punctuation">)</span>
            p <span class="token operator">=</span> pl<span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>ph <span class="token operator">&lt;</span> h<span class="token punctuation">)</span>
            p <span class="token operator">=</span> pr<span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>pk <span class="token operator">=</span> p<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token operator">==</span> k <span class="token operator">||</span> <span class="token punctuation">(</span>k <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> k<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>pk<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> p<span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>pl <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            p <span class="token operator">=</span> pr<span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>pr <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            p <span class="token operator">=</span> pl<span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>kc <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">||</span>
                    <span class="token punctuation">(</span>kc <span class="token operator">=</span> <span class="token function">comparableClassFor</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
                    <span class="token punctuation">(</span>dir <span class="token operator">=</span> <span class="token function">compareComparables</span><span class="token punctuation">(</span>kc<span class="token punctuation">,</span> k<span class="token punctuation">,</span> pk<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span>
            p <span class="token operator">=</span> <span class="token punctuation">(</span>dir <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">?</span> pl <span class="token operator">:</span> pr<span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>q <span class="token operator">=</span> pr<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>h<span class="token punctuation">,</span> k<span class="token punctuation">,</span> kc<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> q<span class="token punctuation">;</span>
        <span class="token keyword">else</span>
            p <span class="token operator">=</span> pl<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span>p <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6B64\u65F6\u67D0\u4EBA\u5DF2\u7ECF\u98D8\u98D8\u7136\u4E86~~~~</p><h2 id="end" tabindex="-1"><a class="header-anchor" href="#end" aria-hidden="true">#</a> end</h2><p>\u4E0B\u4E00\u7BC7\u6211\u4EEC\u4ECB\u7ECD\u4E00\u4E0Bhashmap\u8282\u70B9\u5220\u9664\u7684\u903B\u8F91, \u4EE5\u53CA\u7EA2\u9ED1\u6811\u5728\u5220\u9664\u8282\u70B9\u65F6\u81EA\u5E73\u8861\u7684\u65B9\u6CD5.</p>`,26);function v(m,b){const p=l("ExternalLinkIcon");return e(),o("div",null,[i,s("p",null,[n("\u56FE\u7247\u7684\u94FE\u63A5\u4E3A: "),s("a",k,[n("https://tech.nikolazhang.top/\u7EA2\u9ED1\u6811\u53D8\u6362.bmp"),c(p)]),n(" \u8FD9\u5F20\u56FE\u7247\u8017\u8D39\u4E86\u6211\u4E00\u64AE\u5934\u53D1. \u6240\u4EE5\u8BF7\u5584\u5F85\u5979. \u4E0D\u8981\u8FB1\u9A82\u5979\u8FC7\u4E8E\u4E11\u964B \u{1F626}), \u4E0D\u8981\u602A\u5979\u592A\u5927,\u52A0\u8F7D\u7F13\u6162(\u5927\u5BB6\u4E0D\u90FD\u559C\u6B22\u9AD8\u6E05\u5927\u56FE\u5417? \u{1F603})..... "),r]),d])}const y=t(u,[["render",v],["__file","\u7EA2\u9ED1\u6811[3]\u81EA\u5E73\u8861.html.vue"]]);export{y as default};
