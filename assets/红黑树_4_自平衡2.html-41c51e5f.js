const a=JSON.parse('{"key":"v-269f6e20","path":"/posts/hashmap/%E7%BA%A2%E9%BB%91%E6%A0%91_4_%E8%87%AA%E5%B9%B3%E8%A1%A12.html","title":"源码分析[7] HashMap之红黑树自平衡2","lang":"en-US","frontmatter":{"isOriginal":true,"title":"源码分析[7] HashMap之红黑树自平衡2","mathjax":true,"tag":["hashmap","红黑树"],"category":"源码","date":"2020-01-26T00:00:00.000Z","description":"分析一下hashmap的红黑树实现","image":"https://tech.nikolazhang.top/wallhaven-0qjrzq.jpg","sticky":false,"timeline":true,"article":true,"star":false,"head":[["meta",{"property":"og:url","content":"https://nikolazhang.github.io/posts/hashmap/%E7%BA%A2%E9%BB%91%E6%A0%91_4_%E8%87%AA%E5%B9%B3%E8%A1%A12.html"}],["meta",{"property":"og:title","content":"源码分析[7] HashMap之红黑树自平衡2"}],["meta",{"property":"og:description","content":"分析一下hashmap的红黑树实现"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-06-09T00:57:17.000Z"}],["meta",{"property":"article:author","content":"我小叮当、"}],["meta",{"property":"article:tag","content":"hashmap"}],["meta",{"property":"article:tag","content":"红黑树"}],["meta",{"property":"article:published_time","content":"2020-01-26T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-09T00:57:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"源码分析[7] HashMap之红黑树自平衡2\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-01-26T00:00:00.000Z\\",\\"dateModified\\":\\"2023-06-09T00:57:17.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"我小叮当、\\",\\"url\\":\\"https://nikolazhang.github.io\\"}]}"]]},"headers":[{"level":2,"title":"remove","slug":"remove","link":"#remove","children":[]},{"level":2,"title":"removeTreeNode","slug":"removetreenode","link":"#removetreenode","children":[{"level":3,"title":"孩子节点都存在","slug":"孩子节点都存在","link":"#孩子节点都存在","children":[]},{"level":3,"title":"当左子节点存在","slug":"当左子节点存在","link":"#当左子节点存在","children":[]},{"level":3,"title":"当右子节点存在","slug":"当右子节点存在","link":"#当右子节点存在","children":[]},{"level":3,"title":"当没有孩子","slug":"当没有孩子","link":"#当没有孩子","children":[]}]},{"level":2,"title":"balanceDeletion","slug":"balancedeletion","link":"#balancedeletion","children":[]},{"level":2,"title":"最后","slug":"最后","link":"#最后","children":[]}],"git":{"createdTime":1686272237000,"updatedTime":1686272237000,"contributors":[{"name":"dewy yr","email":"nikolazhang@163.com","commits":1}]},"readingTime":{"minutes":9.66,"words":2898},"filePathRelative":"posts/hashmap/红黑树[4]自平衡2.md","localizedDate":"January 26, 2020","excerpt":"<h2> remove</h2>\\n<p>在介绍<code>balanceDeletion</code>之前我们先分析一下, 从HashMap中删除一个节点的逻辑.</p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">public</span> <span class=\\"token class-name\\">V</span> <span class=\\"token function\\">remove</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Object</span> key<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token class-name\\">Node</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">K</span><span class=\\"token punctuation\\">,</span><span class=\\"token class-name\\">V</span><span class=\\"token punctuation\\">&gt;</span></span> e<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">return</span> <span class=\\"token punctuation\\">(</span>e <span class=\\"token operator\\">=</span> <span class=\\"token function\\">removeNode</span><span class=\\"token punctuation\\">(</span><span class=\\"token function\\">hash</span><span class=\\"token punctuation\\">(</span>key<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> key<span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">,</span> <span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">,</span> <span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">==</span> <span class=\\"token keyword\\">null</span> <span class=\\"token operator\\">?</span>\\n        <span class=\\"token keyword\\">null</span> <span class=\\"token operator\\">:</span> e<span class=\\"token punctuation\\">.</span>value<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{a as data};
