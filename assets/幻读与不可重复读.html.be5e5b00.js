import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,c as s,a as e,b as t,d as r,r as i}from"./app.e7c9cb9e.js";const l={},c=e("blockquote",null,[e("p",null,"\u5173\u4E8Emysql\u5728\u91CD\u590D\u8BFB\u548C\u8BFB\u63D0\u4EA4\u4E8B\u52A1\u7EA7\u522B\u5E7B\u8BFB\u548C\u4E0D\u53EF\u91CD\u590D\u8BFB\u7684\u5206\u6790")],-1),d=e("h2",{id:"repeatable-read-\u4E0E-read-committed",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#repeatable-read-\u4E0E-read-committed","aria-hidden":"true"},"#"),t(" REPEATABLE READ \u4E0E READ COMMITTED")],-1),h={href:"https://dev.mysql.com/doc/refman/8.0/en/glossary.html",target:"_blank",rel:"noopener noreferrer"},m=e("blockquote",null,[e("p",null,"REPEATABLE READ The default isolation level for . It prevents any rows that are queried from being changed by other transactions, thus blocking non-repeatable reads but not phantom reads. It uses a moderately strict locking strategy so that all queries within a transaction see data from the same snapshot, that is, the data as it was at the time the transaction started. InnoDB"),e("p",null,"READ COMMITTED An isolation level that uses a locking strategy that relaxes some of the protection between transactions, in the interest of performance. Transactions cannot see uncommitted data from other transactions, but they can see data that is committed by another transaction after the current transaction started. Thus, a transaction never sees any bad data, but the data that it does see may depend to some extent on the timing of other transactions.")],-1),_=e("p",null,"READ COMMITTED\u7EA7\u522B\u4E0B\u4E00\u4E2A\u4E8B\u52A1\u4E0D\u80FD\u8BFB\u53D6\u5176\u4ED6\u4E8B\u52A1\u672A\u63D0\u4EA4\u7684\u6570\u636E, \u53EA\u53EF\u4EE5\u8BFB\u53D6\u5230\u5176\u4ED6\u4E8B\u52A1\u63D0\u4EA4\u7684\u6570\u636E. \u56E0\u6B64, \u4ECE\u5B9A\u4E49\u4E0A\u770B\u8BE5\u7EA7\u522B\u53EF\u4EE5\u907F\u514D\u810F\u8BFB\u73B0\u8C61, \u540C\u65F6\u5F53\u5176\u4ED6\u4E8B\u52A1\u4FEE\u6539\u6570\u636E\u540E\u63D0\u4EA4, \u4E5F\u53EF\u4EE5\u8BFB\u53D6, \u56E0\u6B64\u4E0D\u53EF\u91CD\u590D\u8BFB(\u4E5F\u5C31\u662F\u8BFB\u4E0D\u5230\u4E8B\u52A1\u5F00\u59CB\u540E, \u521B\u5EFA\u5176\u4ED6\u4E8B\u52A1\u4FEE\u6539\u63D0\u4EA4\u7684\u90A3\u4E2A\u6570\u636E\u7684\u539F\u59CB\u6570\u636E\u4E86). \u589E\u52A0\u5220\u9664\u8FD9\u79CD\u64CD\u4F5C\u63D0\u4EA4\u540E, \u4E8B\u52A1\u4E5F\u53EF\u4EE5\u8BFB\u53D6, \u56E0\u6B64\u4E5F\u65E0\u6CD5\u907F\u514D\u5E7B\u8BFB.",-1),u=e("p",null,"REPEATABLE READ\u53EF\u4EE5\u5B9E\u73B0\u53EF\u91CD\u590D\u8BFB, \u5B83\u53EF\u4EE5\u9632\u6B62\u5F53\u524D\u4E8B\u52A1\u8BFB\u53D6\u7684\u6570\u636E\u88AB\u5176\u4ED6\u4E8B\u52A1\u8FDB\u884C\u4FEE\u6539. \u4F46\u662F\u4E0D\u80FD\u907F\u514D\u5E7B\u8BFB\u73B0\u8C61. \u5B83\u662F\u901A\u8FC7\u4E8B\u52A1\u5F00\u59CB\u540E\u5EFA\u7ACB\u67E5\u8BE2\u7684\u5FEB\u7167, \u5F53\u524D\u4E8B\u52A1\u7684\u6570\u636E\u90FD\u4F1A\u4ECE\u5FEB\u7167\u4E2D\u83B7\u53D6. \u53E6\u5916, \u589E\u52A0\u5220\u9664\u7684\u6570\u636E\u65E0\u6CD5\u5EFA\u7ACB\u5FEB\u7167, \u56E0\u6B64\u4E0D\u53EF\u907F\u514D\u5E7B\u8BFB. \u4F46\u662F\u4E5F\u662F\u8981\u6CE8\u610F\u6761\u4EF6\u65E0\u6CD5\u9501\u5B9A, \u4F46\u4E4B\u540E\u63D2\u5165\u4E86\u7B26\u5408\u8BE5\u6761\u4EF6\u7684\u6570\u636E. \u7531\u4E8E\u4E4B\u524D\u5DF2\u7ECF\u5EFA\u7ACB\u5FEB\u7167, \u56E0\u6B64\u4E5F\u662F\u4E0D\u53EF\u8BFB\u53D6\u7684.",-1),p=e("p",null,"\u8FD8\u6709\u53E6\u5916\u4E24\u4E2A\u4E8B\u52A1\u7EA7\u522Bread-uncommitted\u548Cserializable, read-uncommitted\u4F1A\u8BFB\u53D6\u5176\u4ED6\u4E8B\u52A1\u672A\u63D0\u4EA4\u7684\u6570\u636E(\u810F\u8BFB), serializable\u8BFB\u5199\u90FD\u4F1A\u52A0\u9501, \u5E76\u53D1\u6027\u80FD\u5DEE\u56E0\u6B64\u8FD9\u4E24\u4E2A\u7EA7\u522B\u4E00\u822C\u4E0D\u600E\u4E48\u4F7F\u7528.",-1);function f(E,b){const a=i("ExternalLinkIcon");return o(),s("div",null,[c,d,e("p",null,[e("a",h,[t("\u5B98\u65B9\u89E3\u91CA"),r(a)])]),m,_,u,p])}const y=n(l,[["render",f],["__file","\u5E7B\u8BFB\u4E0E\u4E0D\u53EF\u91CD\u590D\u8BFB.html.vue"]]);export{y as default};
