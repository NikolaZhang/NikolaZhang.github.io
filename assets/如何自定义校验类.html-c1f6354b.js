const t=JSON.parse('{"key":"v-fda10226","path":"/posts/springboot/%E5%A6%82%E4%BD%95%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A0%A1%E9%AA%8C%E7%B1%BB.html","title":"SpringBoot对表单数据进行复杂校验","lang":"en-US","frontmatter":{"isOriginal":true,"title":"SpringBoot对表单数据进行复杂校验","mathjax":true,"tag":["数据校验","springboot"],"category":"springboot","date":"2020-01-21T00:00:00.000Z","description":"举个自定义注解去校验表单数据的案例","image":"https://tech.nikolazhang.top/20200122161433.png","sticky":false,"timeline":true,"article":true,"star":false,"head":[["meta",{"property":"og:url","content":"https://nikolazhang.github.io/posts/springboot/%E5%A6%82%E4%BD%95%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A0%A1%E9%AA%8C%E7%B1%BB.html"}],["meta",{"property":"og:title","content":"SpringBoot对表单数据进行复杂校验"}],["meta",{"property":"og:description","content":"举个自定义注解去校验表单数据的案例"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-06-08T15:09:36.000Z"}],["meta",{"property":"article:author","content":"我小叮当、"}],["meta",{"property":"article:tag","content":"数据校验"}],["meta",{"property":"article:tag","content":"springboot"}],["meta",{"property":"article:published_time","content":"2020-01-21T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-08T15:09:36.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"SpringBoot对表单数据进行复杂校验\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-01-21T00:00:00.000Z\\",\\"dateModified\\":\\"2023-06-08T15:09:36.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"我小叮当、\\",\\"url\\":\\"https://nikolazhang.github.io\\"}]}"]]},"headers":[{"level":2,"title":"校验一个表单对象","slug":"校验一个表单对象","link":"#校验一个表单对象","children":[]},{"level":2,"title":"自定义一个注解","slug":"自定义一个注解","link":"#自定义一个注解","children":[]},{"level":2,"title":"校验逻辑","slug":"校验逻辑","link":"#校验逻辑","children":[]},{"level":2,"title":"controller接口","slug":"controller接口","link":"#controller接口","children":[]},{"level":2,"title":"验证","slug":"验证","link":"#验证","children":[]},{"level":2,"title":"问题","slug":"问题","link":"#问题","children":[{"level":3,"title":"groups","slug":"groups","link":"#groups","children":[]}]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1686236976000,"updatedTime":1686236976000,"contributors":[{"name":"nikola","email":"nikolazhang@163.com","commits":1}]},"readingTime":{"minutes":4.5,"words":1351},"filePathRelative":"posts/springboot/如何自定义校验类.md","localizedDate":"January 21, 2020","excerpt":"<blockquote>\\n<p>HashMap节点删除, 我打算拖一下, 因为红黑树删除那一块搞起来, 又要画图又要举例子, 还是挺费事的. 这篇就水一下, 讲一下自定义校验的方法.\\n一般情况下, 用户提交的表单数据的校验往往是逻辑相关的, 如果我输入的年龄为20, 但是身份证出生日和这个年龄不符那么这种情况下似乎不能使用已有注解进行校验. 公司很多代码都是写在接口, 或者业务层进行校验. 这好吗? 肯定是不好啊. 况且springboot支持自定义校验注解.</p>\\n</blockquote>\\n<h2> 校验一个表单对象</h2>\\n<p>通常我们校验一个表单会加上如下的一些注解, <code>@NotBlank, @Min, @NotNull</code>等等. 但是这些属性都是单独校验的, 彼此之间没有关系. 虽然这已经解决了大部分的校验问题. 但是单独依靠工具提供的校验注解, 总是有捉襟见肘的时候.</p>"}');export{t as data};
