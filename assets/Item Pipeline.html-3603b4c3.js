import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o as p,c as o,a as n,b as s,d as i,w as c,e as l}from"./app-d92b3f51.js";const u={},r=n("blockquote",null,[n("p",null,"当Item在Spider中被收集之后，它将会被传递到Item Pipeline，一些组件会按照一定的顺序执行对Item的处理。")],-1),d=n("p",null,"每个item pipeline组件(有时称之为“Item Pipeline”)是实现了简单方法的Python类。他们接收到Item并通过它执行一些行为，同时也决定此Item是否继续通过pipeline，或是被丢弃而不再进行处理。",-1),k=n("p",null,"以下是item pipeline的一些典型应用：",-1),m=n("ul",null,[n("li",null,"清理HTML数据"),n("li",null,"验证爬取的数据(检查item包含某些字段)"),n("li",null,"查重(并丢弃)"),n("li",null,"将爬取结果保存到数据库中")],-1),v={id:"编写你自己的item-pipeline¶",tabindex:"-1"},h=n("a",{class:"header-anchor",href:"#编写你自己的item-pipeline¶","aria-hidden":"true"},"#",-1),b=l(`<p>编写你自己的item pipeline很简单，每个item pipeline组件是一个独立的Python类，同时必须实现以下方法:</p><blockquote><p><code>process_item</code>(<em>self</em>, <em>item</em>, <em>spider</em>)</p></blockquote><p>每个item pipeline组件都需要调用该方法，这个方法必须返回一个 <code>[Item](https://scrapy-chs.readthedocs.io/zh_CN/latest/topics/items.html#scrapy.item.Item)</code> (或任何继承类)对象， 或是抛出 <code>[DropItem](https://scrapy-chs.readthedocs.io/zh_CN/latest/topics/exceptions.html#scrapy.exceptions.DropItem)</code> 异常，被丢弃的item将不会被之后的pipeline组件所处理。</p><p>参数:</p><p>• <strong>item</strong> (<code>[Item](https://scrapy-chs.readthedocs.io/zh_CN/latest/topics/items.html#scrapy.item.Item)</code> 对象) – 被爬取的item</p><p>• <strong>spider</strong> (<code>[Spider](https://scrapy-chs.readthedocs.io/zh_CN/latest/topics/spiders.html#scrapy.spider.Spider)</code> 对象) – 爬取该item的spider</p><blockquote><p><strong><code>open_spider</code>(<em>self</em>, <em>spider</em>)</strong></p></blockquote><p>当spider被开启时，这个方法被调用。</p><p>参数:</p><p><strong>spider</strong> (<strong><code>[Spider](https://scrapy-chs.readthedocs.io/zh_CN/latest/topics/spiders.html#scrapy.spider.Spider)</code></strong> 对象) – 被开启的spider</p><blockquote><p><strong><code>close_spider</code>(<em>spider</em>)</strong></p></blockquote><p>当spider被关闭时，这个方法被调用</p><p>参数:</p><p><strong>spider</strong> (<strong><code>[Spider](https://scrapy-chs.readthedocs.io/zh_CN/latest/topics/spiders.html#scrapy.spider.Spider)</code></strong> 对象) – 被关闭的spider</p><blockquote><p><strong><code>from_crawler</code>(<em>cls</em>, <em>crawler</em>)</strong></p></blockquote><p>If present, this class method is called to create a pipeline instance from a <strong><code>[Crawler](https://scrapy-chs.readthedocs.io/zh_CN/latest/topics/api.html#scrapy.crawler.Crawler)</code></strong>. It must return a new instance of the pipeline. Crawler object provides access to all Scrapy core components like settings and signals; it is a way for pipeline to access them and hook its functionality into Scrapy.</p><p>参数:</p><p><strong>crawler</strong> (<strong><code>[Crawler](https://scrapy-chs.readthedocs.io/zh_CN/latest/topics/api.html#scrapy.crawler.Crawler)</code></strong> object) – crawler that uses this pipeline</p><h2 id="案例" tabindex="-1"><a class="header-anchor" href="#案例" aria-hidden="true">#</a> 案例</h2><h3 id="验证-同时丢弃" tabindex="-1"><a class="header-anchor" href="#验证-同时丢弃" aria-hidden="true">#</a> 验证，同时丢弃</h3><p>让我们来看一下以下这个假设的pipeline，它为那些不含税(price_excludes_vat 属性)的item调整了 price 属性，同时丢弃了那些没有价格的item:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> scrapy<span class="token punctuation">.</span>exceptions <span class="token keyword">import</span> DropItem

<span class="token keyword">class</span> <span class="token class-name">PricePipeline</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    vat_factor <span class="token operator">=</span> <span class="token number">1.15</span>
    <span class="token keyword">def</span> <span class="token function">process_item</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> item<span class="token punctuation">,</span> spider<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> item<span class="token punctuation">[</span><span class="token string">&#39;price&#39;</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> item<span class="token punctuation">[</span><span class="token string">&#39;price_excludes_vat&#39;</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
                item<span class="token punctuation">[</span><span class="token string">&#39;price&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> item<span class="token punctuation">[</span><span class="token string">&#39;price&#39;</span><span class="token punctuation">]</span> <span class="token operator">*</span> self<span class="token punctuation">.</span>vat_factor
            <span class="token keyword">return</span> item
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">raise</span> DropItem<span class="token punctuation">(</span><span class="token string">&quot;Missing price in %s&quot;</span> <span class="token operator">%</span> item<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="写入json" tabindex="-1"><a class="header-anchor" href="#写入json" aria-hidden="true">#</a> 写入json</h3><p>以下pipeline将所有(从所有spider中)爬取到的item，存储到一个独立地 items.jl 文件，每行包含一个序列化为JSON格式的item:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> json

<span class="token keyword">class</span> <span class="token class-name">JsonWriterPipeline</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>

    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span><span class="token builtin">file</span> <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;items.jl&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;wb&#39;</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">process_item</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> item<span class="token punctuation">,</span> spider<span class="token punctuation">)</span><span class="token punctuation">:</span>
        line <span class="token operator">=</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span><span class="token builtin">dict</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\\n&quot;</span>
        self<span class="token punctuation">.</span><span class="token builtin">file</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span>line<span class="token punctuation">)</span>
        <span class="token keyword">return</span> item
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="写入mongodb" tabindex="-1"><a class="header-anchor" href="#写入mongodb" aria-hidden="true">#</a> 写入MongoDB</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> pymongo

<span class="token keyword">class</span> <span class="token class-name">MongoPipeline</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>

    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> mongo_uri<span class="token punctuation">,</span> mongo_db<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>mongo_uri <span class="token operator">=</span> mongo_uri
        self<span class="token punctuation">.</span>mongo_db <span class="token operator">=</span> mongo_db

    <span class="token decorator annotation punctuation">@classmethod</span>
    <span class="token keyword">def</span> <span class="token function">from_crawler</span><span class="token punctuation">(</span>cls<span class="token punctuation">,</span> crawler<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> cls<span class="token punctuation">(</span>
            mongo_uri<span class="token operator">=</span>crawler<span class="token punctuation">.</span>settings<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;MONGO_URI&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            mongo_db<span class="token operator">=</span>crawler<span class="token punctuation">.</span>settings<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;MONGO_DATABASE&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;items&#39;</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">open_spider</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> spider<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>client <span class="token operator">=</span> pymongo<span class="token punctuation">.</span>MongoClient<span class="token punctuation">(</span>self<span class="token punctuation">.</span>mongo_uri<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>db <span class="token operator">=</span> self<span class="token punctuation">.</span>client<span class="token punctuation">[</span>self<span class="token punctuation">.</span>mongo_db<span class="token punctuation">]</span>

    <span class="token keyword">def</span> <span class="token function">close_spider</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> spider<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>client<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">process_item</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> item<span class="token punctuation">,</span> spider<span class="token punctuation">)</span><span class="token punctuation">:</span>
        collection_name <span class="token operator">=</span> item<span class="token punctuation">.</span>__class__<span class="token punctuation">.</span>__name__
        self<span class="token punctuation">.</span>db<span class="token punctuation">[</span>collection_name<span class="token punctuation">]</span><span class="token punctuation">.</span>insert<span class="token punctuation">(</span><span class="token builtin">dict</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> item
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="去重" tabindex="-1"><a class="header-anchor" href="#去重" aria-hidden="true">#</a> 去重</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> scrapy<span class="token punctuation">.</span>exceptions <span class="token keyword">import</span> DropItem

<span class="token keyword">class</span> <span class="token class-name">DuplicatesPipeline</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>

    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>ids_seen <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">process_item</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> item<span class="token punctuation">,</span> spider<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> item<span class="token punctuation">[</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">]</span> <span class="token keyword">in</span> self<span class="token punctuation">.</span>ids_seen<span class="token punctuation">:</span>
            <span class="token keyword">raise</span> DropItem<span class="token punctuation">(</span><span class="token string">&quot;Duplicate item found: %s&quot;</span> <span class="token operator">%</span> item<span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>ids_seen<span class="token punctuation">.</span>add<span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> item
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="启用一个item-pipeline组件" tabindex="-1"><a class="header-anchor" href="#启用一个item-pipeline组件" aria-hidden="true">#</a> 启用一个Item Pipeline组件</h2><p>为了启用一个Item Pipeline组件，你必须将它的类添加到 ITEM_PIPELINES 配置，就像下面这个例子:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>ITEM_PIPELINES <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;myproject.pipelines.PricePipeline&#39;</span><span class="token punctuation">:</span> <span class="token number">300</span><span class="token punctuation">,</span>
    <span class="token string">&#39;myproject.pipelines.JsonWriterPipeline&#39;</span><span class="token punctuation">:</span> <span class="token number">800</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>分配给每个类的整型值，确定了他们运行的顺序，item按数字从低到高的顺序，通过pipeline，通常将这些数字定义在0-1000范围内。</p>`,33);function _(g,f){const a=t("RouterLink");return p(),o("div",null,[r,d,k,m,n("h2",v,[h,s(" 编写你自己的item pipeline"),i(a,{to:"/posts/scrapy/chrome-extension:/lpmbefndcmjoaepdpgmoonafikcalmnf/data/reader/index.html?id=555&url=https%3A%2F%2Fscrapy-chs.readthedocs.io%2Fzh_CN%2Flatest%2Ftopics%2Fitem-pipeline.html#id1"},{default:c(()=>[s("¶")]),_:1})]),b])}const I=e(u,[["render",_],["__file","Item Pipeline.html.vue"]]);export{I as default};
