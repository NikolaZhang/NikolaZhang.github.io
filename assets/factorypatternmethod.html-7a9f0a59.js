const e=JSON.parse('{"key":"v-3c0f8b7e","path":"/posts/pattern/factorypatternmethod.html","title":"工厂模式③","lang":"en-US","frontmatter":{"isOriginal":true,"title":"工厂模式③","date":"2018-11-30T00:00:00.000Z","tag":["factory pattern"],"category":"技术","description":"工厂方法模式的介绍和实现","image":"http://image.nikolazhang.top/wallhaven-nrwq11.jpg","head":[["meta",{"property":"og:url","content":"https://nikolazhang.github.io/posts/pattern/factorypatternmethod.html"}],["meta",{"property":"og:title","content":"工厂模式③"}],["meta",{"property":"og:description","content":"工厂方法模式的介绍和实现"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-06-09T00:57:17.000Z"}],["meta",{"property":"article:author","content":"我小叮当、"}],["meta",{"property":"article:tag","content":"factory pattern"}],["meta",{"property":"article:published_time","content":"2018-11-30T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-09T00:57:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"工厂模式③\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2018-11-30T00:00:00.000Z\\",\\"dateModified\\":\\"2023-06-09T00:57:17.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"我小叮当、\\",\\"url\\":\\"https://nikolazhang.github.io\\"}]}"]]},"headers":[{"level":2,"title":"定义一类生产车的公司接口","slug":"定义一类生产车的公司接口","link":"#定义一类生产车的公司接口","children":[]},{"level":2,"title":"该类公司的实现","slug":"该类公司的实现","link":"#该类公司的实现","children":[]},{"level":2,"title":"工厂,选择使用那个公司","slug":"工厂-选择使用那个公司","link":"#工厂-选择使用那个公司","children":[]},{"level":2,"title":"测试","slug":"测试","link":"#测试","children":[]},{"level":2,"title":"结果","slug":"结果","link":"#结果","children":[]}],"git":{"createdTime":1686272237000,"updatedTime":1686272237000,"contributors":[{"name":"dewy yr","email":"nikolazhang@163.com","commits":1}]},"readingTime":{"minutes":1.14,"words":343},"filePathRelative":"posts/pattern/factorypatternmethod.md","localizedDate":"November 30, 2018","excerpt":"<blockquote>\\n<p>工厂方法模式又称为工厂模式，也叫虚拟构造器（Virtual Constructor）模式或者多态工厂模式（Polymorphic Factory），在工厂方法模式中，父类负责定义创建对象的公共接口，而子类则负责生成具体的对象，这样做的目的是将类的实例化操作延迟到子类中完成，即由子类来决定究竟应该实例化（创建）哪一个类。</p>\\n</blockquote>\\n<!--more-->\\n<h2> 定义一类生产车的公司接口</h2>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre class=\\"language-text\\"><code>package factory.methodfactory;\\n\\n/************************************************\\n *@ClassName : CreateCarI\\n *@Description : TODO\\n *@Author : NikolaZhang\\n *@Date : 【2018/11/30 22:33】\\n *@Version : 1.0.0\\n *************************************************/\\n\\npublic interface CarCompanyI {\\n    void buyMetal();\\n    void designCar();\\n    void createCar();\\n}\\n\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{e as data};
