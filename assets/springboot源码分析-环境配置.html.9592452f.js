import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,e as t}from"./app.e7c9cb9e.js";const p={},e=t(`<blockquote><p>\u770B\u4E00\u4E0B\u73AF\u5883\u52A0\u8F7D\u76F8\u5173\u7684\u4EE3\u7801</p></blockquote><h2 id="\u603B\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u603B\u8FF0" aria-hidden="true">#</a> \u603B\u8FF0</h2><p>\u73AF\u5883\u914D\u7F6E\u52A0\u8F7D\u7684\u76F8\u5173\u4EE3\u7801</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">ApplicationArguments</span> applicationArguments <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultApplicationArguments</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">ConfigurableEnvironment</span> environment <span class="token operator">=</span> <span class="token function">prepareEnvironment</span><span class="token punctuation">(</span>listeners<span class="token punctuation">,</span> applicationArguments<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">configureIgnoreBeanInfo</span><span class="token punctuation">(</span>environment<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="applicationarguments-applicationarguments-new-defaultapplicationarguments-args" tabindex="-1"><a class="header-anchor" href="#applicationarguments-applicationarguments-new-defaultapplicationarguments-args" aria-hidden="true">#</a> ApplicationArguments applicationArguments = new DefaultApplicationArguments(args);</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">DefaultApplicationArguments</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">notNull</span><span class="token punctuation">(</span>args<span class="token punctuation">,</span> <span class="token string">&quot;Args must not be null&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>source <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Source</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>args <span class="token operator">=</span> args<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>new Source\u5C42\u5C42\u8C03\u7528\u540E\u7684\u5173\u952E\u903B\u8F91\u4E3A:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">SimpleCommandLinePropertySource</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SimpleCommandLineArgsParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token class-name">CommandLinePropertySource</span><span class="token punctuation">(</span><span class="token class-name">T</span> source<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token constant">COMMAND_LINE_PROPERTY_SOURCE_NAME</span><span class="token punctuation">,</span> source<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token class-name">PropertySource</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token class-name">T</span> source<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">hasText</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token string">&quot;Property source name must contain at least one character&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">notNull</span><span class="token punctuation">(</span>source<span class="token punctuation">,</span> <span class="token string">&quot;Property source must not be null&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>source <span class="token operator">=</span> source<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528<code>PropertySource</code>\u8FD9\u4E2A\u62BD\u8C61\u7236\u7C7B\u53BB\u5B58\u653E\u5F53\u524D\u7684\u53C2\u6570\u7C7B\u578B\u548C\u53C2\u6570\u503C. <code>DefaultApplicationArguments</code>\u89E3\u6790\u7684\u53C2\u6570\u7C7B\u578B\u4E3A<code>COMMAND_LINE_PROPERTY_SOURCE_NAME</code>\u5373\u547D\u4EE4\u884C\u53C2\u6570. \u53C2\u6570\u503C\u662F\u4F7F\u7528<code>new SimpleCommandLineArgsParser().parse(args)</code>\u8FDB\u884C\u89E3\u6790\u7684. <code>parse</code>\u65B9\u6CD5\u8FD4\u56DE\u5BF9\u8C61\u4E3A<code>CommandLineArgs</code>\u7C7B\u578B.</p><h3 id="\u5173\u4E8Esimplecommandlineargsparser" tabindex="-1"><a class="header-anchor" href="#\u5173\u4E8Esimplecommandlineargsparser" aria-hidden="true">#</a> \u5173\u4E8ESimpleCommandLineArgsParser</h3><p>\u5206\u4E24\u79CD\u60C5\u51B5\u89E3\u6790:</p><ol><li><code>optionArgs</code>, \u5B57\u7B26\u4E32\u4E2D\u5305\u542B&quot;--&quot; \u8FD9\u79CD\u60C5\u51B5\u53C8\u5206\u4E3A\u4E24\u79CD 1.\u542B\u6709&quot;=&quot;2.\u4E0D\u542B\u6709\u7B49\u53F7 \u542B\u6709\u7B49\u53F7\u5C31\u901A\u8FC7\u622A\u53D6\u5B57\u7B26\u4E32\u7684\u65B9\u5F0F\u83B7\u53D6\u952E\u548C\u5BF9\u5E94\u7684\u503C; \u4E0D\u542B\u6709\u7B49\u53F7\u5176\u503C\u5C31\u4E3Anull</li><li><code>nonOptionArgs</code>, \u5B57\u7B26\u4E32\u4E2D\u4E0D\u5305\u542B&quot;--&quot;</li></ol><p>\u9488\u5BF9\u8FD9\u4E24\u79CD\u7C7B\u578B, <code>CommandLineArgs commandLineArgs</code>\u5206\u522B\u4F7F\u7528: <code>Map&lt;String, List&lt;String&gt;&gt; optionArgs = new HashMap&lt;&gt;();</code>\u548C<code>List&lt;String&gt; nonOptionArgs = new ArrayList&lt;&gt;();</code>\u8FDB\u884C\u5B58\u653E. \u6CE8\u610F<code>optionArgs</code>\u7684\u503C\u4E3AList\u7ED3\u6784</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">CommandLineArgs</span> <span class="token function">parse</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">CommandLineArgs</span> commandLineArgs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CommandLineArgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> arg <span class="token operator">:</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>arg<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&quot;--&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">String</span> optionText <span class="token operator">=</span> arg<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> arg<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">String</span> optionName<span class="token punctuation">;</span>
      <span class="token class-name">String</span> optionValue <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>optionText<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&quot;=&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        optionName <span class="token operator">=</span> optionText<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> optionText<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token char">&#39;=&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        optionValue <span class="token operator">=</span> optionText<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>optionText<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token char">&#39;=&#39;</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> optionText<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">else</span> <span class="token punctuation">{</span>
        optionName <span class="token operator">=</span> optionText<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>optionName<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>optionValue <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> optionValue<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;Invalid argument syntax: &quot;</span> <span class="token operator">+</span> arg<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      commandLineArgs<span class="token punctuation">.</span><span class="token function">addOptionArg</span><span class="token punctuation">(</span>optionName<span class="token punctuation">,</span> optionValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>
      commandLineArgs<span class="token punctuation">.</span><span class="token function">addNonOptionArg</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> commandLineArgs<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="configurableenvironment-environment-prepareenvironment-listeners-applicationarguments" tabindex="-1"><a class="header-anchor" href="#configurableenvironment-environment-prepareenvironment-listeners-applicationarguments" aria-hidden="true">#</a> ConfigurableEnvironment environment = prepareEnvironment(listeners, applicationArguments);</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token class-name">ConfigurableEnvironment</span> <span class="token function">prepareEnvironment</span><span class="token punctuation">(</span><span class="token class-name">SpringApplicationRunListeners</span> listeners<span class="token punctuation">,</span>
    <span class="token class-name">ApplicationArguments</span> applicationArguments<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// Create and configure the environment</span>
  <span class="token class-name">ConfigurableEnvironment</span> environment <span class="token operator">=</span> <span class="token function">getOrCreateEnvironment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">configureEnvironment</span><span class="token punctuation">(</span>environment<span class="token punctuation">,</span> applicationArguments<span class="token punctuation">.</span><span class="token function">getSourceArgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name">ConfigurationPropertySources</span><span class="token punctuation">.</span><span class="token function">attach</span><span class="token punctuation">(</span>environment<span class="token punctuation">)</span><span class="token punctuation">;</span>
  listeners<span class="token punctuation">.</span><span class="token function">environmentPrepared</span><span class="token punctuation">(</span>environment<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">bindToSpringApplication</span><span class="token punctuation">(</span>environment<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>isCustomEnvironment<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    environment <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">EnvironmentConverter</span><span class="token punctuation">(</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">convertEnvironmentIfNecessary</span><span class="token punctuation">(</span>environment<span class="token punctuation">,</span>
        <span class="token function">deduceEnvironmentClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token class-name">ConfigurationPropertySources</span><span class="token punctuation">.</span><span class="token function">attach</span><span class="token punctuation">(</span>environment<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> environment<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="getorcreateenvironment" tabindex="-1"><a class="header-anchor" href="#getorcreateenvironment" aria-hidden="true">#</a> getOrCreateEnvironment</h3><p>\u6839\u636E<code>new SpringApplication</code>\u662F\u8BBE\u7F6E\u7684<code>webApplicationType</code>\u52A0\u8F7D\u4E0D\u540C\u7684\u73AF\u5883:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token class-name">ConfigurableEnvironment</span> <span class="token function">getOrCreateEnvironment</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>environment <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>environment<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">switch</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>webApplicationType<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">case</span> <span class="token constant">SERVLET</span><span class="token operator">:</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">StandardServletEnvironment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">case</span> <span class="token constant">REACTIVE</span><span class="token operator">:</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">StandardReactiveWebEnvironment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">default</span><span class="token operator">:</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">StandardEnvironment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u76EE\u524D\u6700\u5E38\u89C1\u7684\u5C31\u662F<code>SERVLET</code>\u7C7B\u578B. \u4EE5\u6B64\u4E3A\u4F8B. \u5176\u9700\u8981\u521B\u5EFA\u4E00\u4E2A<code>StandardServletEnvironment</code>\u7C7B\u578B\u5BF9\u8C61. \u8BE5\u7C7B\u7684\u7EE7\u627F\u5173\u7CFB\u89C1\u4E0B: <img src="https://tech.nikolazhang.top/2020-05-07-22-17-45.png" alt="2020-05-07-22-17-45" loading="lazy"></p><p>\u4E0A\u9762\u7684\u4EE3\u7801\u903B\u8F91\u53EA\u662F\u8C03\u7528\u4E86\u8BE5\u7C7B\u9ED8\u8BA4\u7684\u6784\u9020\u65B9\u6CD5, \u5177\u4F53\u4E4B\u540E\u8981\u505A\u4EC0\u4E48\u5C1A\u672A\u53EF\u77E5, \u4E0D\u8FC7\u6839\u636E\u8BE5\u7C7B\u7EE7\u627F\u7684\u5173\u7CFB\u6765\u770B, \u81F3\u5C11\u662F\u8981\u8BBE\u7F6E\u8BF8\u5982: <code>servletContextInitParams</code>, <code>servletConfigInitParams</code>, <code>jndiProperties</code>, <code>systemEnvironment</code>\u7B49\u7B49\u7684\u5C5E\u6027. \u5F53\u7136\u8FD9\u4E2A\u7C7B\u53EA\u662F\u63D0\u4F9B\u4E86\u8FD9\u79CD\u73AF\u5883\u5E94\u8BE5\u8981\u8BBE\u7F6E\u54EA\u4E9B\u53C2\u6570, \u6700\u7EC8\u7684\u53C2\u6570\u7C7B\u578B\u548C\u53C2\u6570\u503C\u8FD8\u662F\u8981\u901A\u8FC7<code>PropertySource</code>\u5B58\u653E\u7684. \u8FD9\u6BB5\u63CF\u8FF0\u8FD8\u6709\u5F85\u9A8C\u8BC1(TODO).</p><h2 id="configureignorebeaninfo-environment" tabindex="-1"><a class="header-anchor" href="#configureignorebeaninfo-environment" aria-hidden="true">#</a> configureIgnoreBeanInfo(environment)</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">configureIgnoreBeanInfo</span><span class="token punctuation">(</span><span class="token class-name">ConfigurableEnvironment</span> environment<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token class-name">CachedIntrospectionResults</span><span class="token punctuation">.</span><span class="token constant">IGNORE_BEANINFO_PROPERTY_NAME</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Boolean</span> ignore <span class="token operator">=</span> environment<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">&quot;spring.beaninfo.ignore&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Boolean</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">Boolean</span><span class="token punctuation">.</span><span class="token constant">TRUE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token class-name">CachedIntrospectionResults</span><span class="token punctuation">.</span><span class="token constant">IGNORE_BEANINFO_PROPERTY_NAME</span><span class="token punctuation">,</span> ignore<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u6CA1\u6709\u8BBE\u7F6E<code>spring.beaninfo.ignore</code>\u5C5E\u6027\u503C, \u5219\u8BBE\u7F6E\u4E3Atrue.</p>`,24),o=[e];function c(i,l){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","springboot\u6E90\u7801\u5206\u6790-\u73AF\u5883\u914D\u7F6E.html.vue"]]);export{k as default};
